/**
 * generated by Xtext 2.27.0
 */
package org.eclipse.fordiac.ide.globalconstantseditor.globalConstants.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.eclipse.fordiac.ide.globalconstantseditor.globalConstants.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GlobalConstantsFactoryImpl extends EFactoryImpl implements GlobalConstantsFactory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static GlobalConstantsFactory init() {
		try {
			GlobalConstantsFactory theGlobalConstantsFactory = (GlobalConstantsFactory)EPackage.Registry.INSTANCE.getEFactory(GlobalConstantsPackage.eNS_URI);
			if (theGlobalConstantsFactory != null) {
				return theGlobalConstantsFactory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new GlobalConstantsFactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GlobalConstantsFactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
			case GlobalConstantsPackage.ST_GLOBAL_CONSTS_SOURCE: return createSTGlobalConstsSource();
			case GlobalConstantsPackage.ST_GLOBAL_CONSTANTS: return createSTGlobalConstants();
			case GlobalConstantsPackage.ST_VAR_GLOBAL_DECLARATION_BLOCK: return createSTVarGlobalDeclarationBlock();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public STGlobalConstsSource createSTGlobalConstsSource() {
		STGlobalConstsSourceImpl stGlobalConstsSource = new STGlobalConstsSourceImpl();
		return stGlobalConstsSource;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public STGlobalConstants createSTGlobalConstants() {
		STGlobalConstantsImpl stGlobalConstants = new STGlobalConstantsImpl();
		return stGlobalConstants;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public STVarGlobalDeclarationBlock createSTVarGlobalDeclarationBlock() {
		STVarGlobalDeclarationBlockImpl stVarGlobalDeclarationBlock = new STVarGlobalDeclarationBlockImpl();
		return stVarGlobalDeclarationBlock;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public GlobalConstantsPackage getGlobalConstantsPackage() {
		return (GlobalConstantsPackage)getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
	@Deprecated
	public static GlobalConstantsPackage getPackage() {
		return GlobalConstantsPackage.eINSTANCE;
	}

} //GlobalConstantsFactoryImpl
