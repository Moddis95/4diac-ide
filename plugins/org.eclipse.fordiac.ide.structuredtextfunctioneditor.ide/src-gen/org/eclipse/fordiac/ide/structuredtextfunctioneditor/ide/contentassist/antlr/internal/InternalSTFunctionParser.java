package org.eclipse.fordiac.ide.structuredtextfunctioneditor.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextfunctioneditor.services.STFunctionGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2021, 2023 Primetals Technologies GmbH, 
 *                          Martin Erich Jobst
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Martin Melik Merkumians, Martin Jobst
 *       - initial API and implementation and/or initial documentation
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalSTFunctionParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "END_FUNCTION_BLOCK", "END_CONFIGURATION", "END_TRANSITION", "FUNCTION_BLOCK", "LDATE_AND_TIME", "CONFIGURATION", "DATE_AND_TIME", "END_INTERFACE", "END_NAMESPACE", "END_FUNCTION", "END_RESOURCE", "INITIAL_STEP", "LTIME_OF_DAY", "VAR_EXTERNAL", "END_PROGRAM", "TIME_OF_DAY", "END_ACTION", "END_METHOD", "END_REPEAT", "END_STRUCT", "IMPLEMENTS", "NON_RETAIN", "READ_WRITE", "TRANSITION", "VAR_ACCESS", "VAR_CONFIG", "VAR_GLOBAL", "VAR_IN_OUT", "VAR_OUTPUT", "END_CLASS", "END_WHILE", "INTERFACE", "NAMESPACE", "PROTECTED", "READ_ONLY", "VAR_INPUT", "ABSTRACT", "CONSTANT", "CONTINUE", "END_CASE", "END_STEP", "END_TYPE", "FUNCTION", "INTERNAL", "INTERVAL", "OVERRIDE", "PRIORITY", "RESOURCE", "VAR_TEMP", "END_FOR", "END_VAR", "EXTENDS", "INTERAL", "OVERLAP", "PACKAGE", "PRIVATE", "PROGRAM", "WSTRING", "ACTION", "END_IF", "IMPORT", "METHOD", "PUBLIC", "REF_TO", "REPEAT", "RETAIN", "RETURN", "SINGLE", "STRING", "STRUCT", "ARRAY", "CLASS", "DWORD", "ELSIF", "FALSE", "FINAL", "LDATE", "LREAL", "LTIME", "LWORD", "SUPER", "UDINT", "ULINT", "UNTIL", "USING", "USINT", "WCHAR", "WHILE", "BOOL", "BYTE", "CASE", "CHAR", "DATE", "DINT", "ELSE", "EXIT", "FROM", "LINT", "LTOD", "NULL", "REAL", "SINT", "STEP", "TASK", "THEN", "THIS", "TIME", "TRUE", "TYPE", "UINT", "WITH", "WORD", "ColonColonAsterisk", "AND", "FOR", "INT", "LDT", "MOD", "NOT", "REF", "TOD", "VAR", "XOR", "B", "D_1", "L", "W", "X", "AsteriskAsterisk", "FullStopFullStop", "ColonColon", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "DO", "DT", "IF", "LD", "LT", "OF", "ON", "OR", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "D", "T", "LeftSquareBracket", "RightSquareBracket", "LeftCurlyBracket", "RightCurlyBracket", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_DECIMAL", "RULE_TIME_PART", "RULE_TIME_VALUE", "RULE_TIME_DAYS", "RULE_TIME_HOURS", "RULE_TIME_MINUTES", "RULE_TIME_SECONDS", "RULE_TIME_MILLIS", "RULE_TIME_MICROS", "RULE_TIME_NANOS", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int EqualsSignGreaterThanSign=138;
    public static final int LessThanSign=163;
    public static final int RULE_TIME_HOURS=179;
    public static final int INTERNAL=47;
    public static final int REF_TO=67;
    public static final int LINT=101;
    public static final int GreaterThanSign=165;
    public static final int RULE_ID=185;
    public static final int CONFIGURATION=9;
    public static final int UDINT=85;
    public static final int GreaterThanSignEqualsSign=139;
    public static final int ColonColon=134;
    public static final int AT=140;
    public static final int RULE_INT=174;
    public static final int END_FOR=53;
    public static final int THEN=108;
    public static final int XOR=126;
    public static final int PROGRAM=60;
    public static final int TIME_OF_DAY=19;
    public static final int B=127;
    public static final int LDATE_AND_TIME=8;
    public static final int REPEAT=68;
    public static final int D=166;
    public static final int L=129;
    public static final int T=167;
    public static final int W=130;
    public static final int BY=141;
    public static final int X=131;
    public static final int END_REPEAT=22;
    public static final int Solidus=160;
    public static final int RightCurlyBracket=171;
    public static final int PROTECTED=37;
    public static final int RESOURCE=51;
    public static final int INTERVAL=48;
    public static final int FullStop=159;
    public static final int RULE_TIME_SECONDS=181;
    public static final int INTERAL=56;
    public static final int RULE_TIME_VALUE=177;
    public static final int CONTINUE=42;
    public static final int Semicolon=162;
    public static final int REF=123;
    public static final int VAR_OUTPUT=32;
    public static final int STRING=72;
    public static final int TO=150;
    public static final int INITIAL_STEP=15;
    public static final int EXTENDS=55;
    public static final int PRIORITY=50;
    public static final int CLASS=75;
    public static final int DO=142;
    public static final int END_CONFIGURATION=5;
    public static final int DT=143;
    public static final int END_VAR=54;
    public static final int END_STEP=44;
    public static final int RULE_TIME_PART=176;
    public static final int PACKAGE=58;
    public static final int FullStopFullStop=133;
    public static final int Ampersand=152;
    public static final int END_NAMESPACE=12;
    public static final int END_ACTION=20;
    public static final int USINT=89;
    public static final int DWORD=76;
    public static final int FOR=118;
    public static final int RightParenthesis=154;
    public static final int FINAL=79;
    public static final int END_FUNCTION=13;
    public static final int USING=88;
    public static final int RULE_DECIMAL=175;
    public static final int NOT=122;
    public static final int AsteriskAsterisk=132;
    public static final int THIS=109;
    public static final int SINT=105;
    public static final int VAR_GLOBAL=30;
    public static final int WCHAR=90;
    public static final int VAR_EXTERNAL=17;
    public static final int RULE_SL_COMMENT=188;
    public static final int RETURN=70;
    public static final int ColonColonAsterisk=116;
    public static final int END_RESOURCE=14;
    public static final int Colon=161;
    public static final int EOF=-1;
    public static final int Asterisk=155;
    public static final int RULE_TIME_MILLIS=182;
    public static final int MOD=121;
    public static final int RETAIN=69;
    public static final int LeftCurlyBracket=170;
    public static final int STEP=106;
    public static final int TIME=110;
    public static final int WITH=114;
    public static final int RULE_TIME_MINUTES=180;
    public static final int END_CLASS=33;
    public static final int ACTION=62;
    public static final int BOOL=92;
    public static final int D_1=128;
    public static final int FALSE=78;
    public static final int RULE_TIME_MICROS=183;
    public static final int LWORD=83;
    public static final int LessThanSignGreaterThanSign=137;
    public static final int FUNCTION_BLOCK=7;
    public static final int VAR=125;
    public static final int END_IF=63;
    public static final int ULINT=86;
    public static final int END_CASE=43;
    public static final int LeftParenthesis=153;
    public static final int INTERFACE=35;
    public static final int VAR_CONFIG=29;
    public static final int BYTE=93;
    public static final int ELSE=98;
    public static final int TYPE=112;
    public static final int IF=144;
    public static final int WORD=115;
    public static final int DATE_AND_TIME=10;
    public static final int TOD=124;
    public static final int DINT=97;
    public static final int FUNCTION=46;
    public static final int RULE_TIME_NANOS=184;
    public static final int CASE=94;
    public static final int PlusSign=156;
    public static final int RULE_TIME_DAYS=178;
    public static final int RULE_ML_COMMENT=187;
    public static final int PUBLIC=66;
    public static final int LeftSquareBracket=168;
    public static final int EXIT=99;
    public static final int CHAR=95;
    public static final int LTIME=82;
    public static final int IMPORT=64;
    public static final int Comma=157;
    public static final int HyphenMinus=158;
    public static final int ELSIF=77;
    public static final int LessThanSignEqualsSign=136;
    public static final int VAR_INPUT=39;
    public static final int VAR_TEMP=52;
    public static final int CONSTANT=41;
    public static final int PRIVATE=59;
    public static final int TRANSITION=27;
    public static final int LD=145;
    public static final int RULE_HEX_DIGIT=172;
    public static final int END_TYPE=45;
    public static final int UINT=113;
    public static final int LTOD=102;
    public static final int NAMESPACE=36;
    public static final int SINGLE=71;
    public static final int ARRAY=74;
    public static final int LT=146;
    public static final int FROM=100;
    public static final int WSTRING=61;
    public static final int READ_WRITE=26;
    public static final int END_STRUCT=23;
    public static final int OVERLAP=57;
    public static final int RightSquareBracket=169;
    public static final int TASK=107;
    public static final int NULL=103;
    public static final int TRUE=111;
    public static final int ColonEqualsSign=135;
    public static final int END_WHILE=34;
    public static final int DATE=96;
    public static final int LDATE=80;
    public static final int AND=117;
    public static final int NumberSign=151;
    public static final int REAL=104;
    public static final int METHOD=65;
    public static final int NON_RETAIN=25;
    public static final int STRUCT=73;
    public static final int LTIME_OF_DAY=16;
    public static final int END_TRANSITION=6;
    public static final int LREAL=81;
    public static final int END_FUNCTION_BLOCK=4;
    public static final int RULE_STRING=186;
    public static final int VAR_ACCESS=28;
    public static final int ABSTRACT=40;
    public static final int READ_ONLY=38;
    public static final int INT=119;
    public static final int EqualsSign=164;
    public static final int OF=147;
    public static final int END_METHOD=21;
    public static final int LDT=120;
    public static final int ON=148;
    public static final int SUPER=84;
    public static final int OR=149;
    public static final int RULE_WS=189;
    public static final int VAR_IN_OUT=31;
    public static final int END_INTERFACE=11;
    public static final int IMPLEMENTS=24;
    public static final int RULE_ANY_OTHER=190;
    public static final int UNTIL=87;
    public static final int OVERRIDE=49;
    public static final int WHILE=91;
    public static final int END_PROGRAM=18;
    public static final int RULE_NON_DECIMAL=173;

    // delegates
    // delegators


        public InternalSTFunctionParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTFunctionParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTFunctionParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTFunctionParser.g"; }


    	private STFunctionGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("D", "'D'");
    		tokenNameToValue.put("T", "'T'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("LeftCurlyBracket", "'{'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("B", "'%B'");
    		tokenNameToValue.put("D_1", "'%D'");
    		tokenNameToValue.put("L", "'%L'");
    		tokenNameToValue.put("W", "'%W'");
    		tokenNameToValue.put("X", "'%X'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonColon", "'::'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("DT", "'DT'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("LD", "'LD'");
    		tokenNameToValue.put("LT", "'LT'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("ColonColonAsterisk", "'::*'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("LDT", "'LDT'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("REF", "'REF'");
    		tokenNameToValue.put("TOD", "'TOD'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("BYTE", "'BYTE'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DINT", "'DINT'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("LINT", "'LINT'");
    		tokenNameToValue.put("LTOD", "'LTOD'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("SINT", "'SINT'");
    		tokenNameToValue.put("STEP", "'STEP'");
    		tokenNameToValue.put("TASK", "'TASK'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("THIS", "'THIS'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("TYPE", "'TYPE'");
    		tokenNameToValue.put("UINT", "'UINT'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("WORD", "'WORD'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("CLASS", "'CLASS'");
    		tokenNameToValue.put("DWORD", "'DWORD'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("FINAL", "'FINAL'");
    		tokenNameToValue.put("LDATE", "'LDATE'");
    		tokenNameToValue.put("LREAL", "'LREAL'");
    		tokenNameToValue.put("LTIME", "'LTIME'");
    		tokenNameToValue.put("LWORD", "'LWORD'");
    		tokenNameToValue.put("SUPER", "'SUPER'");
    		tokenNameToValue.put("UDINT", "'UDINT'");
    		tokenNameToValue.put("ULINT", "'ULINT'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("USINT", "'USINT'");
    		tokenNameToValue.put("WCHAR", "'WCHAR'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("ACTION", "'ACTION'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("IMPORT", "'IMPORT'");
    		tokenNameToValue.put("METHOD", "'METHOD'");
    		tokenNameToValue.put("PUBLIC", "'PUBLIC'");
    		tokenNameToValue.put("REF_TO", "'REF_TO'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETAIN", "'RETAIN'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("SINGLE", "'SINGLE'");
    		tokenNameToValue.put("STRING", "'STRING'");
    		tokenNameToValue.put("STRUCT", "'STRUCT'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("EXTENDS", "'EXTENDS'");
    		tokenNameToValue.put("INTERAL", "'INTERAL'");
    		tokenNameToValue.put("OVERLAP", "'OVERLAP'");
    		tokenNameToValue.put("PACKAGE", "'PACKAGE'");
    		tokenNameToValue.put("PRIVATE", "'PRIVATE'");
    		tokenNameToValue.put("PROGRAM", "'PROGRAM'");
    		tokenNameToValue.put("WSTRING", "'WSTRING'");
    		tokenNameToValue.put("ABSTRACT", "'ABSTRACT'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("END_STEP", "'END_STEP'");
    		tokenNameToValue.put("END_TYPE", "'END_TYPE'");
    		tokenNameToValue.put("FUNCTION", "'FUNCTION'");
    		tokenNameToValue.put("INTERNAL", "'INTERNAL'");
    		tokenNameToValue.put("INTERVAL", "'INTERVAL'");
    		tokenNameToValue.put("OVERRIDE", "'OVERRIDE'");
    		tokenNameToValue.put("PRIORITY", "'PRIORITY'");
    		tokenNameToValue.put("RESOURCE", "'RESOURCE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("END_CLASS", "'END_CLASS'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("INTERFACE", "'INTERFACE'");
    		tokenNameToValue.put("NAMESPACE", "'NAMESPACE'");
    		tokenNameToValue.put("PROTECTED", "'PROTECTED'");
    		tokenNameToValue.put("READ_ONLY", "'READ_ONLY'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_ACTION", "'END_ACTION'");
    		tokenNameToValue.put("END_METHOD", "'END_METHOD'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("END_STRUCT", "'END_STRUCT'");
    		tokenNameToValue.put("IMPLEMENTS", "'IMPLEMENTS'");
    		tokenNameToValue.put("NON_RETAIN", "'NON_RETAIN'");
    		tokenNameToValue.put("READ_WRITE", "'READ_WRITE'");
    		tokenNameToValue.put("TRANSITION", "'TRANSITION'");
    		tokenNameToValue.put("VAR_ACCESS", "'VAR_ACCESS'");
    		tokenNameToValue.put("VAR_CONFIG", "'VAR_CONFIG'");
    		tokenNameToValue.put("VAR_GLOBAL", "'VAR_GLOBAL'");
    		tokenNameToValue.put("VAR_IN_OUT", "'VAR_IN_OUT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("END_PROGRAM", "'END_PROGRAM'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY'");
    		tokenNameToValue.put("END_FUNCTION", "'END_FUNCTION'");
    		tokenNameToValue.put("END_RESOURCE", "'END_RESOURCE'");
    		tokenNameToValue.put("INITIAL_STEP", "'INITIAL_STEP'");
    		tokenNameToValue.put("LTIME_OF_DAY", "'LTIME_OF_DAY'");
    		tokenNameToValue.put("VAR_EXTERNAL", "'VAR_EXTERNAL'");
    		tokenNameToValue.put("CONFIGURATION", "'CONFIGURATION'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME'");
    		tokenNameToValue.put("END_INTERFACE", "'END_INTERFACE'");
    		tokenNameToValue.put("END_NAMESPACE", "'END_NAMESPACE'");
    		tokenNameToValue.put("END_TRANSITION", "'END_TRANSITION'");
    		tokenNameToValue.put("FUNCTION_BLOCK", "'FUNCTION_BLOCK'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME'");
    		tokenNameToValue.put("END_CONFIGURATION", "'END_CONFIGURATION'");
    		tokenNameToValue.put("END_FUNCTION_BLOCK", "'END_FUNCTION_BLOCK'");
    	}

    	public void setGrammarAccess(STFunctionGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTFunctionSource"
    // InternalSTFunctionParser.g:235:1: entryRuleSTFunctionSource : ruleSTFunctionSource EOF ;
    public final void entryRuleSTFunctionSource() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:236:1: ( ruleSTFunctionSource EOF )
            // InternalSTFunctionParser.g:237:1: ruleSTFunctionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFunctionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFunctionSource"


    // $ANTLR start "ruleSTFunctionSource"
    // InternalSTFunctionParser.g:244:1: ruleSTFunctionSource : ( ( rule__STFunctionSource__Group__0 ) ) ;
    public final void ruleSTFunctionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:248:2: ( ( ( rule__STFunctionSource__Group__0 ) ) )
            // InternalSTFunctionParser.g:249:2: ( ( rule__STFunctionSource__Group__0 ) )
            {
            // InternalSTFunctionParser.g:249:2: ( ( rule__STFunctionSource__Group__0 ) )
            // InternalSTFunctionParser.g:250:3: ( rule__STFunctionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:251:3: ( rule__STFunctionSource__Group__0 )
            // InternalSTFunctionParser.g:251:4: rule__STFunctionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFunctionSource"


    // $ANTLR start "entryRuleSTFunction"
    // InternalSTFunctionParser.g:260:1: entryRuleSTFunction : ruleSTFunction EOF ;
    public final void entryRuleSTFunction() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:261:1: ( ruleSTFunction EOF )
            // InternalSTFunctionParser.g:262:1: ruleSTFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFunction"


    // $ANTLR start "ruleSTFunction"
    // InternalSTFunctionParser.g:269:1: ruleSTFunction : ( ( rule__STFunction__Group__0 ) ) ;
    public final void ruleSTFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:273:2: ( ( ( rule__STFunction__Group__0 ) ) )
            // InternalSTFunctionParser.g:274:2: ( ( rule__STFunction__Group__0 ) )
            {
            // InternalSTFunctionParser.g:274:2: ( ( rule__STFunction__Group__0 ) )
            // InternalSTFunctionParser.g:275:3: ( rule__STFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:276:3: ( rule__STFunction__Group__0 )
            // InternalSTFunctionParser.g:276:4: rule__STFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFunction"


    // $ANTLR start "entryRuleSTExpressionSource"
    // InternalSTFunctionParser.g:285:1: entryRuleSTExpressionSource : ruleSTExpressionSource EOF ;
    public final void entryRuleSTExpressionSource() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:286:1: ( ruleSTExpressionSource EOF )
            // InternalSTFunctionParser.g:287:1: ruleSTExpressionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpressionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpressionSource"


    // $ANTLR start "ruleSTExpressionSource"
    // InternalSTFunctionParser.g:294:1: ruleSTExpressionSource : ( ( rule__STExpressionSource__Group__0 ) ) ;
    public final void ruleSTExpressionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:298:2: ( ( ( rule__STExpressionSource__Group__0 ) ) )
            // InternalSTFunctionParser.g:299:2: ( ( rule__STExpressionSource__Group__0 ) )
            {
            // InternalSTFunctionParser.g:299:2: ( ( rule__STExpressionSource__Group__0 ) )
            // InternalSTFunctionParser.g:300:3: ( rule__STExpressionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:301:3: ( rule__STExpressionSource__Group__0 )
            // InternalSTFunctionParser.g:301:4: rule__STExpressionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpressionSource"


    // $ANTLR start "entryRuleSTInitializerExpressionSource"
    // InternalSTFunctionParser.g:310:1: entryRuleSTInitializerExpressionSource : ruleSTInitializerExpressionSource EOF ;
    public final void entryRuleSTInitializerExpressionSource() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:311:1: ( ruleSTInitializerExpressionSource EOF )
            // InternalSTFunctionParser.g:312:1: ruleSTInitializerExpressionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpressionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpressionSource"


    // $ANTLR start "ruleSTInitializerExpressionSource"
    // InternalSTFunctionParser.g:319:1: ruleSTInitializerExpressionSource : ( ( rule__STInitializerExpressionSource__Group__0 ) ) ;
    public final void ruleSTInitializerExpressionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:323:2: ( ( ( rule__STInitializerExpressionSource__Group__0 ) ) )
            // InternalSTFunctionParser.g:324:2: ( ( rule__STInitializerExpressionSource__Group__0 ) )
            {
            // InternalSTFunctionParser.g:324:2: ( ( rule__STInitializerExpressionSource__Group__0 ) )
            // InternalSTFunctionParser.g:325:3: ( rule__STInitializerExpressionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:326:3: ( rule__STInitializerExpressionSource__Group__0 )
            // InternalSTFunctionParser.g:326:4: rule__STInitializerExpressionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpressionSource"


    // $ANTLR start "entryRuleSTImport"
    // InternalSTFunctionParser.g:335:1: entryRuleSTImport : ruleSTImport EOF ;
    public final void entryRuleSTImport() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:336:1: ( ruleSTImport EOF )
            // InternalSTFunctionParser.g:337:1: ruleSTImport EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTImportRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTImportRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTImport"


    // $ANTLR start "ruleSTImport"
    // InternalSTFunctionParser.g:344:1: ruleSTImport : ( ( rule__STImport__Group__0 ) ) ;
    public final void ruleSTImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:348:2: ( ( ( rule__STImport__Group__0 ) ) )
            // InternalSTFunctionParser.g:349:2: ( ( rule__STImport__Group__0 ) )
            {
            // InternalSTFunctionParser.g:349:2: ( ( rule__STImport__Group__0 ) )
            // InternalSTFunctionParser.g:350:3: ( rule__STImport__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTImportAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:351:3: ( rule__STImport__Group__0 )
            // InternalSTFunctionParser.g:351:4: rule__STImport__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STImport__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTImportAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTImport"


    // $ANTLR start "entryRuleSTVarDeclarationBlock"
    // InternalSTFunctionParser.g:360:1: entryRuleSTVarDeclarationBlock : ruleSTVarDeclarationBlock EOF ;
    public final void entryRuleSTVarDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:361:1: ( ruleSTVarDeclarationBlock EOF )
            // InternalSTFunctionParser.g:362:1: ruleSTVarDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarDeclarationBlock"


    // $ANTLR start "ruleSTVarDeclarationBlock"
    // InternalSTFunctionParser.g:369:1: ruleSTVarDeclarationBlock : ( ( rule__STVarDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:373:2: ( ( ( rule__STVarDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:374:2: ( ( rule__STVarDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:374:2: ( ( rule__STVarDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:375:3: ( rule__STVarDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:376:3: ( rule__STVarDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:376:4: rule__STVarDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarDeclarationBlock"


    // $ANTLR start "entryRuleSTVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:385:1: entryRuleSTVarTempDeclarationBlock : ruleSTVarTempDeclarationBlock EOF ;
    public final void entryRuleSTVarTempDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:386:1: ( ruleSTVarTempDeclarationBlock EOF )
            // InternalSTFunctionParser.g:387:1: ruleSTVarTempDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarTempDeclarationBlock"


    // $ANTLR start "ruleSTVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:394:1: ruleSTVarTempDeclarationBlock : ( ( rule__STVarTempDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarTempDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:398:2: ( ( ( rule__STVarTempDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:399:2: ( ( rule__STVarTempDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:399:2: ( ( rule__STVarTempDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:400:3: ( rule__STVarTempDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:401:3: ( rule__STVarTempDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:401:4: rule__STVarTempDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarTempDeclarationBlock"


    // $ANTLR start "entryRuleSTVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:410:1: entryRuleSTVarInputDeclarationBlock : ruleSTVarInputDeclarationBlock EOF ;
    public final void entryRuleSTVarInputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:411:1: ( ruleSTVarInputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:412:1: ruleSTVarInputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarInputDeclarationBlock"


    // $ANTLR start "ruleSTVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:419:1: ruleSTVarInputDeclarationBlock : ( ( rule__STVarInputDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarInputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:423:2: ( ( ( rule__STVarInputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:424:2: ( ( rule__STVarInputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:424:2: ( ( rule__STVarInputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:425:3: ( rule__STVarInputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:426:3: ( rule__STVarInputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:426:4: rule__STVarInputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarInputDeclarationBlock"


    // $ANTLR start "entryRuleSTVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:435:1: entryRuleSTVarOutputDeclarationBlock : ruleSTVarOutputDeclarationBlock EOF ;
    public final void entryRuleSTVarOutputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:436:1: ( ruleSTVarOutputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:437:1: ruleSTVarOutputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarOutputDeclarationBlock"


    // $ANTLR start "ruleSTVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:444:1: ruleSTVarOutputDeclarationBlock : ( ( rule__STVarOutputDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarOutputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:448:2: ( ( ( rule__STVarOutputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:449:2: ( ( rule__STVarOutputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:449:2: ( ( rule__STVarOutputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:450:3: ( rule__STVarOutputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:451:3: ( rule__STVarOutputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:451:4: rule__STVarOutputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarOutputDeclarationBlock"


    // $ANTLR start "entryRuleSTVarInOutDeclarationBlock"
    // InternalSTFunctionParser.g:460:1: entryRuleSTVarInOutDeclarationBlock : ruleSTVarInOutDeclarationBlock EOF ;
    public final void entryRuleSTVarInOutDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:461:1: ( ruleSTVarInOutDeclarationBlock EOF )
            // InternalSTFunctionParser.g:462:1: ruleSTVarInOutDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarInOutDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarInOutDeclarationBlock"


    // $ANTLR start "ruleSTVarInOutDeclarationBlock"
    // InternalSTFunctionParser.g:469:1: ruleSTVarInOutDeclarationBlock : ( ( rule__STVarInOutDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarInOutDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:473:2: ( ( ( rule__STVarInOutDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:474:2: ( ( rule__STVarInOutDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:474:2: ( ( rule__STVarInOutDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:475:3: ( rule__STVarInOutDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:476:3: ( rule__STVarInOutDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:476:4: rule__STVarInOutDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarInOutDeclarationBlock"


    // $ANTLR start "entryRuleSTVarDeclaration"
    // InternalSTFunctionParser.g:485:1: entryRuleSTVarDeclaration : ruleSTVarDeclaration EOF ;
    public final void entryRuleSTVarDeclaration() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:486:1: ( ruleSTVarDeclaration EOF )
            // InternalSTFunctionParser.g:487:1: ruleSTVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarDeclaration"


    // $ANTLR start "ruleSTVarDeclaration"
    // InternalSTFunctionParser.g:494:1: ruleSTVarDeclaration : ( ( rule__STVarDeclaration__Group__0 ) ) ;
    public final void ruleSTVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:498:2: ( ( ( rule__STVarDeclaration__Group__0 ) ) )
            // InternalSTFunctionParser.g:499:2: ( ( rule__STVarDeclaration__Group__0 ) )
            {
            // InternalSTFunctionParser.g:499:2: ( ( rule__STVarDeclaration__Group__0 ) )
            // InternalSTFunctionParser.g:500:3: ( rule__STVarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:501:3: ( rule__STVarDeclaration__Group__0 )
            // InternalSTFunctionParser.g:501:4: rule__STVarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarDeclaration"


    // $ANTLR start "entryRuleSTTypeDeclaration"
    // InternalSTFunctionParser.g:510:1: entryRuleSTTypeDeclaration : ruleSTTypeDeclaration EOF ;
    public final void entryRuleSTTypeDeclaration() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:511:1: ( ruleSTTypeDeclaration EOF )
            // InternalSTFunctionParser.g:512:1: ruleSTTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTypeDeclaration"


    // $ANTLR start "ruleSTTypeDeclaration"
    // InternalSTFunctionParser.g:519:1: ruleSTTypeDeclaration : ( ( rule__STTypeDeclaration__Group__0 ) ) ;
    public final void ruleSTTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:523:2: ( ( ( rule__STTypeDeclaration__Group__0 ) ) )
            // InternalSTFunctionParser.g:524:2: ( ( rule__STTypeDeclaration__Group__0 ) )
            {
            // InternalSTFunctionParser.g:524:2: ( ( rule__STTypeDeclaration__Group__0 ) )
            // InternalSTFunctionParser.g:525:3: ( rule__STTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:526:3: ( rule__STTypeDeclaration__Group__0 )
            // InternalSTFunctionParser.g:526:4: rule__STTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTypeDeclaration"


    // $ANTLR start "entryRuleSTInitializerExpression"
    // InternalSTFunctionParser.g:535:1: entryRuleSTInitializerExpression : ruleSTInitializerExpression EOF ;
    public final void entryRuleSTInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:536:1: ( ruleSTInitializerExpression EOF )
            // InternalSTFunctionParser.g:537:1: ruleSTInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpression"


    // $ANTLR start "ruleSTInitializerExpression"
    // InternalSTFunctionParser.g:544:1: ruleSTInitializerExpression : ( ( rule__STInitializerExpression__Alternatives ) ) ;
    public final void ruleSTInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:548:2: ( ( ( rule__STInitializerExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:549:2: ( ( rule__STInitializerExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:549:2: ( ( rule__STInitializerExpression__Alternatives ) )
            // InternalSTFunctionParser.g:550:3: ( rule__STInitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:551:3: ( rule__STInitializerExpression__Alternatives )
            // InternalSTFunctionParser.g:551:4: rule__STInitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpression"


    // $ANTLR start "entryRuleSTElementaryInitializerExpression"
    // InternalSTFunctionParser.g:560:1: entryRuleSTElementaryInitializerExpression : ruleSTElementaryInitializerExpression EOF ;
    public final void entryRuleSTElementaryInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:561:1: ( ruleSTElementaryInitializerExpression EOF )
            // InternalSTFunctionParser.g:562:1: ruleSTElementaryInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElementaryInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElementaryInitializerExpression"


    // $ANTLR start "ruleSTElementaryInitializerExpression"
    // InternalSTFunctionParser.g:569:1: ruleSTElementaryInitializerExpression : ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) ;
    public final void ruleSTElementaryInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:573:2: ( ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) )
            // InternalSTFunctionParser.g:574:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            {
            // InternalSTFunctionParser.g:574:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            // InternalSTFunctionParser.g:575:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }
            // InternalSTFunctionParser.g:576:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            // InternalSTFunctionParser.g:576:4: rule__STElementaryInitializerExpression__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STElementaryInitializerExpression__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElementaryInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitializerExpression"
    // InternalSTFunctionParser.g:585:1: entryRuleSTArrayInitializerExpression : ruleSTArrayInitializerExpression EOF ;
    public final void entryRuleSTArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:586:1: ( ruleSTArrayInitializerExpression EOF )
            // InternalSTFunctionParser.g:587:1: ruleSTArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitializerExpression"


    // $ANTLR start "ruleSTArrayInitializerExpression"
    // InternalSTFunctionParser.g:594:1: ruleSTArrayInitializerExpression : ( ( rule__STArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleSTArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:598:2: ( ( ( rule__STArrayInitializerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:599:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:599:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:600:3: ( rule__STArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:601:3: ( rule__STArrayInitializerExpression__Group__0 )
            // InternalSTFunctionParser.g:601:4: rule__STArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitElement"
    // InternalSTFunctionParser.g:610:1: entryRuleSTArrayInitElement : ruleSTArrayInitElement EOF ;
    public final void entryRuleSTArrayInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:611:1: ( ruleSTArrayInitElement EOF )
            // InternalSTFunctionParser.g:612:1: ruleSTArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitElement"


    // $ANTLR start "ruleSTArrayInitElement"
    // InternalSTFunctionParser.g:619:1: ruleSTArrayInitElement : ( ( rule__STArrayInitElement__Alternatives ) ) ;
    public final void ruleSTArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:623:2: ( ( ( rule__STArrayInitElement__Alternatives ) ) )
            // InternalSTFunctionParser.g:624:2: ( ( rule__STArrayInitElement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:624:2: ( ( rule__STArrayInitElement__Alternatives ) )
            // InternalSTFunctionParser.g:625:3: ( rule__STArrayInitElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:626:3: ( rule__STArrayInitElement__Alternatives )
            // InternalSTFunctionParser.g:626:4: rule__STArrayInitElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitElement"


    // $ANTLR start "entryRuleSTSingleArrayInitElement"
    // InternalSTFunctionParser.g:635:1: entryRuleSTSingleArrayInitElement : ruleSTSingleArrayInitElement EOF ;
    public final void entryRuleSTSingleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:636:1: ( ruleSTSingleArrayInitElement EOF )
            // InternalSTFunctionParser.g:637:1: ruleSTSingleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSingleArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSingleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSingleArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSingleArrayInitElement"


    // $ANTLR start "ruleSTSingleArrayInitElement"
    // InternalSTFunctionParser.g:644:1: ruleSTSingleArrayInitElement : ( ( rule__STSingleArrayInitElement__InitExpressionAssignment ) ) ;
    public final void ruleSTSingleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:648:2: ( ( ( rule__STSingleArrayInitElement__InitExpressionAssignment ) ) )
            // InternalSTFunctionParser.g:649:2: ( ( rule__STSingleArrayInitElement__InitExpressionAssignment ) )
            {
            // InternalSTFunctionParser.g:649:2: ( ( rule__STSingleArrayInitElement__InitExpressionAssignment ) )
            // InternalSTFunctionParser.g:650:3: ( rule__STSingleArrayInitElement__InitExpressionAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSingleArrayInitElementAccess().getInitExpressionAssignment()); 
            }
            // InternalSTFunctionParser.g:651:3: ( rule__STSingleArrayInitElement__InitExpressionAssignment )
            // InternalSTFunctionParser.g:651:4: rule__STSingleArrayInitElement__InitExpressionAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STSingleArrayInitElement__InitExpressionAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSingleArrayInitElementAccess().getInitExpressionAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSingleArrayInitElement"


    // $ANTLR start "entryRuleSTRepeatArrayInitElement"
    // InternalSTFunctionParser.g:660:1: entryRuleSTRepeatArrayInitElement : ruleSTRepeatArrayInitElement EOF ;
    public final void entryRuleSTRepeatArrayInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:661:1: ( ruleSTRepeatArrayInitElement EOF )
            // InternalSTFunctionParser.g:662:1: ruleSTRepeatArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatArrayInitElement"


    // $ANTLR start "ruleSTRepeatArrayInitElement"
    // InternalSTFunctionParser.g:669:1: ruleSTRepeatArrayInitElement : ( ( rule__STRepeatArrayInitElement__Group__0 ) ) ;
    public final void ruleSTRepeatArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:673:2: ( ( ( rule__STRepeatArrayInitElement__Group__0 ) ) )
            // InternalSTFunctionParser.g:674:2: ( ( rule__STRepeatArrayInitElement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:674:2: ( ( rule__STRepeatArrayInitElement__Group__0 ) )
            // InternalSTFunctionParser.g:675:3: ( rule__STRepeatArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:676:3: ( rule__STRepeatArrayInitElement__Group__0 )
            // InternalSTFunctionParser.g:676:4: rule__STRepeatArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatArrayInitElement"


    // $ANTLR start "entryRuleSTStructInitializerExpression"
    // InternalSTFunctionParser.g:685:1: entryRuleSTStructInitializerExpression : ruleSTStructInitializerExpression EOF ;
    public final void entryRuleSTStructInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:686:1: ( ruleSTStructInitializerExpression EOF )
            // InternalSTFunctionParser.g:687:1: ruleSTStructInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStructInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStructInitializerExpression"


    // $ANTLR start "ruleSTStructInitializerExpression"
    // InternalSTFunctionParser.g:694:1: ruleSTStructInitializerExpression : ( ( rule__STStructInitializerExpression__Group__0 ) ) ;
    public final void ruleSTStructInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:698:2: ( ( ( rule__STStructInitializerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:699:2: ( ( rule__STStructInitializerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:699:2: ( ( rule__STStructInitializerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:700:3: ( rule__STStructInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:701:3: ( rule__STStructInitializerExpression__Group__0 )
            // InternalSTFunctionParser.g:701:4: rule__STStructInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStructInitializerExpression"


    // $ANTLR start "entryRuleSTStructInitElement"
    // InternalSTFunctionParser.g:710:1: entryRuleSTStructInitElement : ruleSTStructInitElement EOF ;
    public final void entryRuleSTStructInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:711:1: ( ruleSTStructInitElement EOF )
            // InternalSTFunctionParser.g:712:1: ruleSTStructInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStructInitElement"


    // $ANTLR start "ruleSTStructInitElement"
    // InternalSTFunctionParser.g:719:1: ruleSTStructInitElement : ( ( rule__STStructInitElement__Group__0 ) ) ;
    public final void ruleSTStructInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:723:2: ( ( ( rule__STStructInitElement__Group__0 ) ) )
            // InternalSTFunctionParser.g:724:2: ( ( rule__STStructInitElement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:724:2: ( ( rule__STStructInitElement__Group__0 ) )
            // InternalSTFunctionParser.g:725:3: ( rule__STStructInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:726:3: ( rule__STStructInitElement__Group__0 )
            // InternalSTFunctionParser.g:726:4: rule__STStructInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStructInitElement"


    // $ANTLR start "entryRuleSTPragma"
    // InternalSTFunctionParser.g:735:1: entryRuleSTPragma : ruleSTPragma EOF ;
    public final void entryRuleSTPragma() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:736:1: ( ruleSTPragma EOF )
            // InternalSTFunctionParser.g:737:1: ruleSTPragma EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPragma();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPragma"


    // $ANTLR start "ruleSTPragma"
    // InternalSTFunctionParser.g:744:1: ruleSTPragma : ( ( rule__STPragma__Group__0 ) ) ;
    public final void ruleSTPragma() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:748:2: ( ( ( rule__STPragma__Group__0 ) ) )
            // InternalSTFunctionParser.g:749:2: ( ( rule__STPragma__Group__0 ) )
            {
            // InternalSTFunctionParser.g:749:2: ( ( rule__STPragma__Group__0 ) )
            // InternalSTFunctionParser.g:750:3: ( rule__STPragma__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:751:3: ( rule__STPragma__Group__0 )
            // InternalSTFunctionParser.g:751:4: rule__STPragma__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPragma__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPragma"


    // $ANTLR start "entryRuleSTAttribute"
    // InternalSTFunctionParser.g:760:1: entryRuleSTAttribute : ruleSTAttribute EOF ;
    public final void entryRuleSTAttribute() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:761:1: ( ruleSTAttribute EOF )
            // InternalSTFunctionParser.g:762:1: ruleSTAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAttribute"


    // $ANTLR start "ruleSTAttribute"
    // InternalSTFunctionParser.g:769:1: ruleSTAttribute : ( ( rule__STAttribute__Group__0 ) ) ;
    public final void ruleSTAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:773:2: ( ( ( rule__STAttribute__Group__0 ) ) )
            // InternalSTFunctionParser.g:774:2: ( ( rule__STAttribute__Group__0 ) )
            {
            // InternalSTFunctionParser.g:774:2: ( ( rule__STAttribute__Group__0 ) )
            // InternalSTFunctionParser.g:775:3: ( rule__STAttribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:776:3: ( rule__STAttribute__Group__0 )
            // InternalSTFunctionParser.g:776:4: rule__STAttribute__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAttribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAttribute"


    // $ANTLR start "entryRuleSTAttributeName"
    // InternalSTFunctionParser.g:785:1: entryRuleSTAttributeName : ruleSTAttributeName EOF ;
    public final void entryRuleSTAttributeName() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:786:1: ( ruleSTAttributeName EOF )
            // InternalSTFunctionParser.g:787:1: ruleSTAttributeName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAttributeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAttributeName"


    // $ANTLR start "ruleSTAttributeName"
    // InternalSTFunctionParser.g:794:1: ruleSTAttributeName : ( ruleQualifiedName ) ;
    public final void ruleSTAttributeName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:798:2: ( ( ruleQualifiedName ) )
            // InternalSTFunctionParser.g:799:2: ( ruleQualifiedName )
            {
            // InternalSTFunctionParser.g:799:2: ( ruleQualifiedName )
            // InternalSTFunctionParser.g:800:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeNameAccess().getQualifiedNameParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeNameAccess().getQualifiedNameParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAttributeName"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTFunctionParser.g:810:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:811:1: ( ruleSTStatement EOF )
            // InternalSTFunctionParser.g:812:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTFunctionParser.g:819:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:823:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTFunctionParser.g:824:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:824:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTFunctionParser.g:825:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:826:3: ( rule__STStatement__Alternatives )
            // InternalSTFunctionParser.g:826:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignment"
    // InternalSTFunctionParser.g:835:1: entryRuleSTAssignment : ruleSTAssignment EOF ;
    public final void entryRuleSTAssignment() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:836:1: ( ruleSTAssignment EOF )
            // InternalSTFunctionParser.g:837:1: ruleSTAssignment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignment"


    // $ANTLR start "ruleSTAssignment"
    // InternalSTFunctionParser.g:844:1: ruleSTAssignment : ( ( rule__STAssignment__Group__0 ) ) ;
    public final void ruleSTAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:848:2: ( ( ( rule__STAssignment__Group__0 ) ) )
            // InternalSTFunctionParser.g:849:2: ( ( rule__STAssignment__Group__0 ) )
            {
            // InternalSTFunctionParser.g:849:2: ( ( rule__STAssignment__Group__0 ) )
            // InternalSTFunctionParser.g:850:3: ( rule__STAssignment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:851:3: ( rule__STAssignment__Group__0 )
            // InternalSTFunctionParser.g:851:4: rule__STAssignment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignment"


    // $ANTLR start "entryRuleSTCallArgument"
    // InternalSTFunctionParser.g:860:1: entryRuleSTCallArgument : ruleSTCallArgument EOF ;
    public final void entryRuleSTCallArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:861:1: ( ruleSTCallArgument EOF )
            // InternalSTFunctionParser.g:862:1: ruleSTCallArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallArgument"


    // $ANTLR start "ruleSTCallArgument"
    // InternalSTFunctionParser.g:869:1: ruleSTCallArgument : ( ( rule__STCallArgument__Alternatives ) ) ;
    public final void ruleSTCallArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:873:2: ( ( ( rule__STCallArgument__Alternatives ) ) )
            // InternalSTFunctionParser.g:874:2: ( ( rule__STCallArgument__Alternatives ) )
            {
            // InternalSTFunctionParser.g:874:2: ( ( rule__STCallArgument__Alternatives ) )
            // InternalSTFunctionParser.g:875:3: ( rule__STCallArgument__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:876:3: ( rule__STCallArgument__Alternatives )
            // InternalSTFunctionParser.g:876:4: rule__STCallArgument__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STCallArgument__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallArgument"


    // $ANTLR start "entryRuleSTCallUnnamedArgument"
    // InternalSTFunctionParser.g:885:1: entryRuleSTCallUnnamedArgument : ruleSTCallUnnamedArgument EOF ;
    public final void entryRuleSTCallUnnamedArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:886:1: ( ruleSTCallUnnamedArgument EOF )
            // InternalSTFunctionParser.g:887:1: ruleSTCallUnnamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallUnnamedArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallUnnamedArgument"


    // $ANTLR start "ruleSTCallUnnamedArgument"
    // InternalSTFunctionParser.g:894:1: ruleSTCallUnnamedArgument : ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) ) ;
    public final void ruleSTCallUnnamedArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:898:2: ( ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) ) )
            // InternalSTFunctionParser.g:899:2: ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) )
            {
            // InternalSTFunctionParser.g:899:2: ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) )
            // InternalSTFunctionParser.g:900:3: ( rule__STCallUnnamedArgument__ArgumentAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentAssignment()); 
            }
            // InternalSTFunctionParser.g:901:3: ( rule__STCallUnnamedArgument__ArgumentAssignment )
            // InternalSTFunctionParser.g:901:4: rule__STCallUnnamedArgument__ArgumentAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallUnnamedArgument__ArgumentAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallUnnamedArgument"


    // $ANTLR start "entryRuleSTCallNamedInputArgument"
    // InternalSTFunctionParser.g:910:1: entryRuleSTCallNamedInputArgument : ruleSTCallNamedInputArgument EOF ;
    public final void entryRuleSTCallNamedInputArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:911:1: ( ruleSTCallNamedInputArgument EOF )
            // InternalSTFunctionParser.g:912:1: ruleSTCallNamedInputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedInputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedInputArgument"


    // $ANTLR start "ruleSTCallNamedInputArgument"
    // InternalSTFunctionParser.g:919:1: ruleSTCallNamedInputArgument : ( ( rule__STCallNamedInputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedInputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:923:2: ( ( ( rule__STCallNamedInputArgument__Group__0 ) ) )
            // InternalSTFunctionParser.g:924:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            {
            // InternalSTFunctionParser.g:924:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            // InternalSTFunctionParser.g:925:3: ( rule__STCallNamedInputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:926:3: ( rule__STCallNamedInputArgument__Group__0 )
            // InternalSTFunctionParser.g:926:4: rule__STCallNamedInputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedInputArgument"


    // $ANTLR start "entryRuleSTCallNamedOutputArgument"
    // InternalSTFunctionParser.g:935:1: entryRuleSTCallNamedOutputArgument : ruleSTCallNamedOutputArgument EOF ;
    public final void entryRuleSTCallNamedOutputArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:936:1: ( ruleSTCallNamedOutputArgument EOF )
            // InternalSTFunctionParser.g:937:1: ruleSTCallNamedOutputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedOutputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedOutputArgument"


    // $ANTLR start "ruleSTCallNamedOutputArgument"
    // InternalSTFunctionParser.g:944:1: ruleSTCallNamedOutputArgument : ( ( rule__STCallNamedOutputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedOutputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:948:2: ( ( ( rule__STCallNamedOutputArgument__Group__0 ) ) )
            // InternalSTFunctionParser.g:949:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            {
            // InternalSTFunctionParser.g:949:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            // InternalSTFunctionParser.g:950:3: ( rule__STCallNamedOutputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:951:3: ( rule__STCallNamedOutputArgument__Group__0 )
            // InternalSTFunctionParser.g:951:4: rule__STCallNamedOutputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedOutputArgument"


    // $ANTLR start "entryRuleSTIfStatement"
    // InternalSTFunctionParser.g:960:1: entryRuleSTIfStatement : ruleSTIfStatement EOF ;
    public final void entryRuleSTIfStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:961:1: ( ruleSTIfStatement EOF )
            // InternalSTFunctionParser.g:962:1: ruleSTIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatement"


    // $ANTLR start "ruleSTIfStatement"
    // InternalSTFunctionParser.g:969:1: ruleSTIfStatement : ( ( rule__STIfStatement__Group__0 ) ) ;
    public final void ruleSTIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:973:2: ( ( ( rule__STIfStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:974:2: ( ( rule__STIfStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:974:2: ( ( rule__STIfStatement__Group__0 ) )
            // InternalSTFunctionParser.g:975:3: ( rule__STIfStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:976:3: ( rule__STIfStatement__Group__0 )
            // InternalSTFunctionParser.g:976:4: rule__STIfStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatement"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTFunctionParser.g:985:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:986:1: ( ruleSTElseIfPart EOF )
            // InternalSTFunctionParser.g:987:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTFunctionParser.g:994:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:998:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTFunctionParser.g:999:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:999:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTFunctionParser.g:1000:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1001:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTFunctionParser.g:1001:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTFunctionParser.g:1010:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1011:1: ( ruleSTCaseStatement EOF )
            // InternalSTFunctionParser.g:1012:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTFunctionParser.g:1019:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1023:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:1024:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1024:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTFunctionParser.g:1025:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1026:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTFunctionParser.g:1026:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTFunctionParser.g:1035:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1036:1: ( ruleSTCaseCases EOF )
            // InternalSTFunctionParser.g:1037:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTFunctionParser.g:1044:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1048:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTFunctionParser.g:1049:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1049:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTFunctionParser.g:1050:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1051:3: ( rule__STCaseCases__Group__0 )
            // InternalSTFunctionParser.g:1051:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTFunctionParser.g:1060:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1061:1: ( ruleSTElsePart EOF )
            // InternalSTFunctionParser.g:1062:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTFunctionParser.g:1069:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1073:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTFunctionParser.g:1074:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1074:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTFunctionParser.g:1075:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1076:3: ( rule__STElsePart__Group__0 )
            // InternalSTFunctionParser.g:1076:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTFunctionParser.g:1085:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1086:1: ( ruleSTForStatement EOF )
            // InternalSTFunctionParser.g:1087:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTFunctionParser.g:1094:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1098:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:1099:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1099:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTFunctionParser.g:1100:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1101:3: ( rule__STForStatement__Group__0 )
            // InternalSTFunctionParser.g:1101:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTFunctionParser.g:1110:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1111:1: ( ruleSTWhileStatement EOF )
            // InternalSTFunctionParser.g:1112:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTFunctionParser.g:1119:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1123:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:1124:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1124:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTFunctionParser.g:1125:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1126:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTFunctionParser.g:1126:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTFunctionParser.g:1135:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1136:1: ( ruleSTRepeatStatement EOF )
            // InternalSTFunctionParser.g:1137:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTFunctionParser.g:1144:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1148:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:1149:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1149:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTFunctionParser.g:1150:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1151:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTFunctionParser.g:1151:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTFunctionParser.g:1160:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1161:1: ( ruleSTExpression EOF )
            // InternalSTFunctionParser.g:1162:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTFunctionParser.g:1169:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1173:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTFunctionParser.g:1174:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTFunctionParser.g:1174:2: ( ruleSTSubrangeExpression )
            // InternalSTFunctionParser.g:1175:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTFunctionParser.g:1185:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1186:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTFunctionParser.g:1187:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTFunctionParser.g:1194:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1198:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1199:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1199:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1200:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1201:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTFunctionParser.g:1201:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTFunctionParser.g:1210:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1211:1: ( ruleSTOrExpression EOF )
            // InternalSTFunctionParser.g:1212:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTFunctionParser.g:1219:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1223:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1224:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1224:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1225:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1226:3: ( rule__STOrExpression__Group__0 )
            // InternalSTFunctionParser.g:1226:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTFunctionParser.g:1235:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1236:1: ( ruleSTXorExpression EOF )
            // InternalSTFunctionParser.g:1237:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTFunctionParser.g:1244:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1248:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1249:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1249:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1250:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1251:3: ( rule__STXorExpression__Group__0 )
            // InternalSTFunctionParser.g:1251:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTFunctionParser.g:1260:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1261:1: ( ruleSTAndExpression EOF )
            // InternalSTFunctionParser.g:1262:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTFunctionParser.g:1269:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1273:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1274:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1274:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1275:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1276:3: ( rule__STAndExpression__Group__0 )
            // InternalSTFunctionParser.g:1276:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTFunctionParser.g:1285:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1286:1: ( ruleSTEqualityExpression EOF )
            // InternalSTFunctionParser.g:1287:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTFunctionParser.g:1294:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1298:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1299:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1299:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1300:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1301:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTFunctionParser.g:1301:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTFunctionParser.g:1310:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1311:1: ( ruleSTComparisonExpression EOF )
            // InternalSTFunctionParser.g:1312:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTFunctionParser.g:1319:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1323:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1324:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1324:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1325:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1326:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTFunctionParser.g:1326:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTFunctionParser.g:1335:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1336:1: ( ruleSTAddSubExpression EOF )
            // InternalSTFunctionParser.g:1337:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTFunctionParser.g:1344:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1348:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1349:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1349:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1350:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1351:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTFunctionParser.g:1351:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTFunctionParser.g:1360:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1361:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTFunctionParser.g:1362:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTFunctionParser.g:1369:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1373:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1374:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1374:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1375:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1376:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTFunctionParser.g:1376:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTFunctionParser.g:1385:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1386:1: ( ruleSTPowerExpression EOF )
            // InternalSTFunctionParser.g:1387:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTFunctionParser.g:1394:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1398:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1399:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1399:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1400:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1401:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTFunctionParser.g:1401:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTUnaryExpression"
    // InternalSTFunctionParser.g:1410:1: entryRuleSTUnaryExpression : ruleSTUnaryExpression EOF ;
    public final void entryRuleSTUnaryExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1411:1: ( ruleSTUnaryExpression EOF )
            // InternalSTFunctionParser.g:1412:1: ruleSTUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTUnaryExpression"


    // $ANTLR start "ruleSTUnaryExpression"
    // InternalSTFunctionParser.g:1419:1: ruleSTUnaryExpression : ( ( rule__STUnaryExpression__Alternatives ) ) ;
    public final void ruleSTUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1423:2: ( ( ( rule__STUnaryExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:1424:2: ( ( rule__STUnaryExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1424:2: ( ( rule__STUnaryExpression__Alternatives ) )
            // InternalSTFunctionParser.g:1425:3: ( rule__STUnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1426:3: ( rule__STUnaryExpression__Alternatives )
            // InternalSTFunctionParser.g:1426:4: rule__STUnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTUnaryExpression"


    // $ANTLR start "entryRuleSTAccessExpression"
    // InternalSTFunctionParser.g:1435:1: entryRuleSTAccessExpression : ruleSTAccessExpression EOF ;
    public final void entryRuleSTAccessExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1436:1: ( ruleSTAccessExpression EOF )
            // InternalSTFunctionParser.g:1437:1: ruleSTAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAccessExpression"


    // $ANTLR start "ruleSTAccessExpression"
    // InternalSTFunctionParser.g:1444:1: ruleSTAccessExpression : ( ( rule__STAccessExpression__Group__0 ) ) ;
    public final void ruleSTAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1448:2: ( ( ( rule__STAccessExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1449:2: ( ( rule__STAccessExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1449:2: ( ( rule__STAccessExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1450:3: ( rule__STAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1451:3: ( rule__STAccessExpression__Group__0 )
            // InternalSTFunctionParser.g:1451:4: rule__STAccessExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAccessExpression"


    // $ANTLR start "entryRuleSTPrimaryExpression"
    // InternalSTFunctionParser.g:1460:1: entryRuleSTPrimaryExpression : ruleSTPrimaryExpression EOF ;
    public final void entryRuleSTPrimaryExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1461:1: ( ruleSTPrimaryExpression EOF )
            // InternalSTFunctionParser.g:1462:1: ruleSTPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPrimaryExpression"


    // $ANTLR start "ruleSTPrimaryExpression"
    // InternalSTFunctionParser.g:1469:1: ruleSTPrimaryExpression : ( ( rule__STPrimaryExpression__Alternatives ) ) ;
    public final void ruleSTPrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1473:2: ( ( ( rule__STPrimaryExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:1474:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1474:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            // InternalSTFunctionParser.g:1475:3: ( rule__STPrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1476:3: ( rule__STPrimaryExpression__Alternatives )
            // InternalSTFunctionParser.g:1476:4: rule__STPrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPrimaryExpression"


    // $ANTLR start "entryRuleSTFeatureExpression"
    // InternalSTFunctionParser.g:1485:1: entryRuleSTFeatureExpression : ruleSTFeatureExpression EOF ;
    public final void entryRuleSTFeatureExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1486:1: ( ruleSTFeatureExpression EOF )
            // InternalSTFunctionParser.g:1487:1: ruleSTFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureExpression"


    // $ANTLR start "ruleSTFeatureExpression"
    // InternalSTFunctionParser.g:1494:1: ruleSTFeatureExpression : ( ( rule__STFeatureExpression__Group__0 ) ) ;
    public final void ruleSTFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1498:2: ( ( ( rule__STFeatureExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1499:2: ( ( rule__STFeatureExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1499:2: ( ( rule__STFeatureExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1500:3: ( rule__STFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1501:3: ( rule__STFeatureExpression__Group__0 )
            // InternalSTFunctionParser.g:1501:4: rule__STFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureExpression"


    // $ANTLR start "entryRuleSTFeatureName"
    // InternalSTFunctionParser.g:1510:1: entryRuleSTFeatureName : ruleSTFeatureName EOF ;
    public final void entryRuleSTFeatureName() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1511:1: ( ruleSTFeatureName EOF )
            // InternalSTFunctionParser.g:1512:1: ruleSTFeatureName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureName"


    // $ANTLR start "ruleSTFeatureName"
    // InternalSTFunctionParser.g:1519:1: ruleSTFeatureName : ( ( rule__STFeatureName__Alternatives ) ) ;
    public final void ruleSTFeatureName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1523:2: ( ( ( rule__STFeatureName__Alternatives ) ) )
            // InternalSTFunctionParser.g:1524:2: ( ( rule__STFeatureName__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1524:2: ( ( rule__STFeatureName__Alternatives ) )
            // InternalSTFunctionParser.g:1525:3: ( rule__STFeatureName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureNameAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1526:3: ( rule__STFeatureName__Alternatives )
            // InternalSTFunctionParser.g:1526:4: rule__STFeatureName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureNameAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureName"


    // $ANTLR start "entryRuleSTBuiltinFeatureExpression"
    // InternalSTFunctionParser.g:1535:1: entryRuleSTBuiltinFeatureExpression : ruleSTBuiltinFeatureExpression EOF ;
    public final void entryRuleSTBuiltinFeatureExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1536:1: ( ruleSTBuiltinFeatureExpression EOF )
            // InternalSTFunctionParser.g:1537:1: ruleSTBuiltinFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTBuiltinFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTBuiltinFeatureExpression"


    // $ANTLR start "ruleSTBuiltinFeatureExpression"
    // InternalSTFunctionParser.g:1544:1: ruleSTBuiltinFeatureExpression : ( ( rule__STBuiltinFeatureExpression__Group__0 ) ) ;
    public final void ruleSTBuiltinFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1548:2: ( ( ( rule__STBuiltinFeatureExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1549:2: ( ( rule__STBuiltinFeatureExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1549:2: ( ( rule__STBuiltinFeatureExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1550:3: ( rule__STBuiltinFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1551:3: ( rule__STBuiltinFeatureExpression__Group__0 )
            // InternalSTFunctionParser.g:1551:4: rule__STBuiltinFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBuiltinFeatureExpression"


    // $ANTLR start "entryRuleSTMultibitPartialExpression"
    // InternalSTFunctionParser.g:1560:1: entryRuleSTMultibitPartialExpression : ruleSTMultibitPartialExpression EOF ;
    public final void entryRuleSTMultibitPartialExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1561:1: ( ruleSTMultibitPartialExpression EOF )
            // InternalSTFunctionParser.g:1562:1: ruleSTMultibitPartialExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMultibitPartialExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMultibitPartialExpression"


    // $ANTLR start "ruleSTMultibitPartialExpression"
    // InternalSTFunctionParser.g:1569:1: ruleSTMultibitPartialExpression : ( ( rule__STMultibitPartialExpression__Group__0 ) ) ;
    public final void ruleSTMultibitPartialExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1573:2: ( ( ( rule__STMultibitPartialExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1574:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1574:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1575:3: ( rule__STMultibitPartialExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1576:3: ( rule__STMultibitPartialExpression__Group__0 )
            // InternalSTFunctionParser.g:1576:4: rule__STMultibitPartialExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultibitPartialExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1585:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1586:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTFunctionParser.g:1587:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1594:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1598:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTFunctionParser.g:1599:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1599:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTFunctionParser.g:1600:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1601:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTFunctionParser.g:1601:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleSTSignedLiteralExpressions"
    // InternalSTFunctionParser.g:1610:1: entryRuleSTSignedLiteralExpressions : ruleSTSignedLiteralExpressions EOF ;
    public final void entryRuleSTSignedLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1611:1: ( ruleSTSignedLiteralExpressions EOF )
            // InternalSTFunctionParser.g:1612:1: ruleSTSignedLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignedLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignedLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignedLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignedLiteralExpressions"


    // $ANTLR start "ruleSTSignedLiteralExpressions"
    // InternalSTFunctionParser.g:1619:1: ruleSTSignedLiteralExpressions : ( ruleSTSignedNumericLiteral ) ;
    public final void ruleSTSignedLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1623:2: ( ( ruleSTSignedNumericLiteral ) )
            // InternalSTFunctionParser.g:1624:2: ( ruleSTSignedNumericLiteral )
            {
            // InternalSTFunctionParser.g:1624:2: ( ruleSTSignedNumericLiteral )
            // InternalSTFunctionParser.g:1625:3: ruleSTSignedNumericLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignedLiteralExpressionsAccess().getSTSignedNumericLiteralParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignedNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignedLiteralExpressionsAccess().getSTSignedNumericLiteralParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignedLiteralExpressions"


    // $ANTLR start "entryRuleSTNumericLiteralType"
    // InternalSTFunctionParser.g:1635:1: entryRuleSTNumericLiteralType : ruleSTNumericLiteralType EOF ;
    public final void entryRuleSTNumericLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1636:1: ( ruleSTNumericLiteralType EOF )
            // InternalSTFunctionParser.g:1637:1: ruleSTNumericLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteralType"


    // $ANTLR start "ruleSTNumericLiteralType"
    // InternalSTFunctionParser.g:1644:1: ruleSTNumericLiteralType : ( ( rule__STNumericLiteralType__Alternatives ) ) ;
    public final void ruleSTNumericLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1648:2: ( ( ( rule__STNumericLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1649:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1649:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1650:3: ( rule__STNumericLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1651:3: ( rule__STNumericLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1651:4: rule__STNumericLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteralType"


    // $ANTLR start "entryRuleSTNumericLiteral"
    // InternalSTFunctionParser.g:1660:1: entryRuleSTNumericLiteral : ruleSTNumericLiteral EOF ;
    public final void entryRuleSTNumericLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1661:1: ( ruleSTNumericLiteral EOF )
            // InternalSTFunctionParser.g:1662:1: ruleSTNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteral"


    // $ANTLR start "ruleSTNumericLiteral"
    // InternalSTFunctionParser.g:1669:1: ruleSTNumericLiteral : ( ( rule__STNumericLiteral__Alternatives ) ) ;
    public final void ruleSTNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1673:2: ( ( ( rule__STNumericLiteral__Alternatives ) ) )
            // InternalSTFunctionParser.g:1674:2: ( ( rule__STNumericLiteral__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1674:2: ( ( rule__STNumericLiteral__Alternatives ) )
            // InternalSTFunctionParser.g:1675:3: ( rule__STNumericLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1676:3: ( rule__STNumericLiteral__Alternatives )
            // InternalSTFunctionParser.g:1676:4: rule__STNumericLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteral"


    // $ANTLR start "entryRuleSTSignedNumericLiteral"
    // InternalSTFunctionParser.g:1685:1: entryRuleSTSignedNumericLiteral : ruleSTSignedNumericLiteral EOF ;
    public final void entryRuleSTSignedNumericLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1686:1: ( ruleSTSignedNumericLiteral EOF )
            // InternalSTFunctionParser.g:1687:1: ruleSTSignedNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignedNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignedNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignedNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignedNumericLiteral"


    // $ANTLR start "ruleSTSignedNumericLiteral"
    // InternalSTFunctionParser.g:1694:1: ruleSTSignedNumericLiteral : ( ( rule__STSignedNumericLiteral__ValueAssignment ) ) ;
    public final void ruleSTSignedNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1698:2: ( ( ( rule__STSignedNumericLiteral__ValueAssignment ) ) )
            // InternalSTFunctionParser.g:1699:2: ( ( rule__STSignedNumericLiteral__ValueAssignment ) )
            {
            // InternalSTFunctionParser.g:1699:2: ( ( rule__STSignedNumericLiteral__ValueAssignment ) )
            // InternalSTFunctionParser.g:1700:3: ( rule__STSignedNumericLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignedNumericLiteralAccess().getValueAssignment()); 
            }
            // InternalSTFunctionParser.g:1701:3: ( rule__STSignedNumericLiteral__ValueAssignment )
            // InternalSTFunctionParser.g:1701:4: rule__STSignedNumericLiteral__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STSignedNumericLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignedNumericLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignedNumericLiteral"


    // $ANTLR start "entryRuleSTDateLiteralType"
    // InternalSTFunctionParser.g:1710:1: entryRuleSTDateLiteralType : ruleSTDateLiteralType EOF ;
    public final void entryRuleSTDateLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1711:1: ( ruleSTDateLiteralType EOF )
            // InternalSTFunctionParser.g:1712:1: ruleSTDateLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteralType"


    // $ANTLR start "ruleSTDateLiteralType"
    // InternalSTFunctionParser.g:1719:1: ruleSTDateLiteralType : ( ( rule__STDateLiteralType__Alternatives ) ) ;
    public final void ruleSTDateLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1723:2: ( ( ( rule__STDateLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1724:2: ( ( rule__STDateLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1724:2: ( ( rule__STDateLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1725:3: ( rule__STDateLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1726:3: ( rule__STDateLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1726:4: rule__STDateLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteralType"


    // $ANTLR start "entryRuleSTDateLiteral"
    // InternalSTFunctionParser.g:1735:1: entryRuleSTDateLiteral : ruleSTDateLiteral EOF ;
    public final void entryRuleSTDateLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1736:1: ( ruleSTDateLiteral EOF )
            // InternalSTFunctionParser.g:1737:1: ruleSTDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteral"


    // $ANTLR start "ruleSTDateLiteral"
    // InternalSTFunctionParser.g:1744:1: ruleSTDateLiteral : ( ( rule__STDateLiteral__Group__0 ) ) ;
    public final void ruleSTDateLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1748:2: ( ( ( rule__STDateLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1749:2: ( ( rule__STDateLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1749:2: ( ( rule__STDateLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1750:3: ( rule__STDateLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1751:3: ( rule__STDateLiteral__Group__0 )
            // InternalSTFunctionParser.g:1751:4: rule__STDateLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteral"


    // $ANTLR start "entryRuleSTTimeLiteralType"
    // InternalSTFunctionParser.g:1760:1: entryRuleSTTimeLiteralType : ruleSTTimeLiteralType EOF ;
    public final void entryRuleSTTimeLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1761:1: ( ruleSTTimeLiteralType EOF )
            // InternalSTFunctionParser.g:1762:1: ruleSTTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteralType"


    // $ANTLR start "ruleSTTimeLiteralType"
    // InternalSTFunctionParser.g:1769:1: ruleSTTimeLiteralType : ( ( rule__STTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1773:2: ( ( ( rule__STTimeLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1774:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1774:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1775:3: ( rule__STTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1776:3: ( rule__STTimeLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1776:4: rule__STTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteralType"


    // $ANTLR start "entryRuleSTTimeLiteral"
    // InternalSTFunctionParser.g:1785:1: entryRuleSTTimeLiteral : ruleSTTimeLiteral EOF ;
    public final void entryRuleSTTimeLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1786:1: ( ruleSTTimeLiteral EOF )
            // InternalSTFunctionParser.g:1787:1: ruleSTTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteral"


    // $ANTLR start "ruleSTTimeLiteral"
    // InternalSTFunctionParser.g:1794:1: ruleSTTimeLiteral : ( ( rule__STTimeLiteral__Group__0 ) ) ;
    public final void ruleSTTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1798:2: ( ( ( rule__STTimeLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1799:2: ( ( rule__STTimeLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1799:2: ( ( rule__STTimeLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1800:3: ( rule__STTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1801:3: ( rule__STTimeLiteral__Group__0 )
            // InternalSTFunctionParser.g:1801:4: rule__STTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteral"


    // $ANTLR start "entryRuleSTTimeOfDayLiteral"
    // InternalSTFunctionParser.g:1810:1: entryRuleSTTimeOfDayLiteral : ruleSTTimeOfDayLiteral EOF ;
    public final void entryRuleSTTimeOfDayLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1811:1: ( ruleSTTimeOfDayLiteral EOF )
            // InternalSTFunctionParser.g:1812:1: ruleSTTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteral"


    // $ANTLR start "ruleSTTimeOfDayLiteral"
    // InternalSTFunctionParser.g:1819:1: ruleSTTimeOfDayLiteral : ( ( rule__STTimeOfDayLiteral__Group__0 ) ) ;
    public final void ruleSTTimeOfDayLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1823:2: ( ( ( rule__STTimeOfDayLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1824:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1824:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1825:3: ( rule__STTimeOfDayLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1826:3: ( rule__STTimeOfDayLiteral__Group__0 )
            // InternalSTFunctionParser.g:1826:4: rule__STTimeOfDayLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteral"


    // $ANTLR start "entryRuleSTDateAndTimeLiteral"
    // InternalSTFunctionParser.g:1835:1: entryRuleSTDateAndTimeLiteral : ruleSTDateAndTimeLiteral EOF ;
    public final void entryRuleSTDateAndTimeLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1836:1: ( ruleSTDateAndTimeLiteral EOF )
            // InternalSTFunctionParser.g:1837:1: ruleSTDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteral"


    // $ANTLR start "ruleSTDateAndTimeLiteral"
    // InternalSTFunctionParser.g:1844:1: ruleSTDateAndTimeLiteral : ( ( rule__STDateAndTimeLiteral__Group__0 ) ) ;
    public final void ruleSTDateAndTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1848:2: ( ( ( rule__STDateAndTimeLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1849:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1849:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1850:3: ( rule__STDateAndTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1851:3: ( rule__STDateAndTimeLiteral__Group__0 )
            // InternalSTFunctionParser.g:1851:4: rule__STDateAndTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteral"


    // $ANTLR start "entryRuleSTStringLiteral"
    // InternalSTFunctionParser.g:1860:1: entryRuleSTStringLiteral : ruleSTStringLiteral EOF ;
    public final void entryRuleSTStringLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1861:1: ( ruleSTStringLiteral EOF )
            // InternalSTFunctionParser.g:1862:1: ruleSTStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteral"


    // $ANTLR start "ruleSTStringLiteral"
    // InternalSTFunctionParser.g:1869:1: ruleSTStringLiteral : ( ( rule__STStringLiteral__Group__0 ) ) ;
    public final void ruleSTStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1873:2: ( ( ( rule__STStringLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1874:2: ( ( rule__STStringLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1874:2: ( ( rule__STStringLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1875:3: ( rule__STStringLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1876:3: ( rule__STStringLiteral__Group__0 )
            // InternalSTFunctionParser.g:1876:4: rule__STStringLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteral"


    // $ANTLR start "entryRuleSTEnumLiteral"
    // InternalSTFunctionParser.g:1885:1: entryRuleSTEnumLiteral : ruleSTEnumLiteral EOF ;
    public final void entryRuleSTEnumLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1886:1: ( ruleSTEnumLiteral EOF )
            // InternalSTFunctionParser.g:1887:1: ruleSTEnumLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEnumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEnumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEnumLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEnumLiteral"


    // $ANTLR start "ruleSTEnumLiteral"
    // InternalSTFunctionParser.g:1894:1: ruleSTEnumLiteral : ( ( rule__STEnumLiteral__ValueAssignment ) ) ;
    public final void ruleSTEnumLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1898:2: ( ( ( rule__STEnumLiteral__ValueAssignment ) ) )
            // InternalSTFunctionParser.g:1899:2: ( ( rule__STEnumLiteral__ValueAssignment ) )
            {
            // InternalSTFunctionParser.g:1899:2: ( ( rule__STEnumLiteral__ValueAssignment ) )
            // InternalSTFunctionParser.g:1900:3: ( rule__STEnumLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEnumLiteralAccess().getValueAssignment()); 
            }
            // InternalSTFunctionParser.g:1901:3: ( rule__STEnumLiteral__ValueAssignment )
            // InternalSTFunctionParser.g:1901:4: rule__STEnumLiteral__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STEnumLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEnumLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEnumLiteral"


    // $ANTLR start "entryRuleEnumValue"
    // InternalSTFunctionParser.g:1910:1: entryRuleEnumValue : ruleEnumValue EOF ;
    public final void entryRuleEnumValue() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1911:1: ( ruleEnumValue EOF )
            // InternalSTFunctionParser.g:1912:1: ruleEnumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEnumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnumValue"


    // $ANTLR start "ruleEnumValue"
    // InternalSTFunctionParser.g:1919:1: ruleEnumValue : ( ( rule__EnumValue__Group__0 ) ) ;
    public final void ruleEnumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1923:2: ( ( ( rule__EnumValue__Group__0 ) ) )
            // InternalSTFunctionParser.g:1924:2: ( ( rule__EnumValue__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1924:2: ( ( rule__EnumValue__Group__0 ) )
            // InternalSTFunctionParser.g:1925:3: ( rule__EnumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumValueAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1926:3: ( rule__EnumValue__Group__0 )
            // InternalSTFunctionParser.g:1926:4: rule__EnumValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EnumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnumValue"


    // $ANTLR start "entryRuleSTAnyType"
    // InternalSTFunctionParser.g:1935:1: entryRuleSTAnyType : ruleSTAnyType EOF ;
    public final void entryRuleSTAnyType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1936:1: ( ruleSTAnyType EOF )
            // InternalSTFunctionParser.g:1937:1: ruleSTAnyType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyType"


    // $ANTLR start "ruleSTAnyType"
    // InternalSTFunctionParser.g:1944:1: ruleSTAnyType : ( ( rule__STAnyType__Alternatives ) ) ;
    public final void ruleSTAnyType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1948:2: ( ( ( rule__STAnyType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1949:2: ( ( rule__STAnyType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1949:2: ( ( rule__STAnyType__Alternatives ) )
            // InternalSTFunctionParser.g:1950:3: ( rule__STAnyType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1951:3: ( rule__STAnyType__Alternatives )
            // InternalSTFunctionParser.g:1951:4: rule__STAnyType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyType"


    // $ANTLR start "entryRuleSTAnyBuiltinType"
    // InternalSTFunctionParser.g:1960:1: entryRuleSTAnyBuiltinType : ruleSTAnyBuiltinType EOF ;
    public final void entryRuleSTAnyBuiltinType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1961:1: ( ruleSTAnyBuiltinType EOF )
            // InternalSTFunctionParser.g:1962:1: ruleSTAnyBuiltinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBuiltinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBuiltinType"


    // $ANTLR start "ruleSTAnyBuiltinType"
    // InternalSTFunctionParser.g:1969:1: ruleSTAnyBuiltinType : ( ( rule__STAnyBuiltinType__Alternatives ) ) ;
    public final void ruleSTAnyBuiltinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1973:2: ( ( ( rule__STAnyBuiltinType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1974:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1974:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            // InternalSTFunctionParser.g:1975:3: ( rule__STAnyBuiltinType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1976:3: ( rule__STAnyBuiltinType__Alternatives )
            // InternalSTFunctionParser.g:1976:4: rule__STAnyBuiltinType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBuiltinType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBuiltinType"


    // $ANTLR start "entryRuleSTAnyBitType"
    // InternalSTFunctionParser.g:1985:1: entryRuleSTAnyBitType : ruleSTAnyBitType EOF ;
    public final void entryRuleSTAnyBitType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1986:1: ( ruleSTAnyBitType EOF )
            // InternalSTFunctionParser.g:1987:1: ruleSTAnyBitType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBitType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBitType"


    // $ANTLR start "ruleSTAnyBitType"
    // InternalSTFunctionParser.g:1994:1: ruleSTAnyBitType : ( ( rule__STAnyBitType__Alternatives ) ) ;
    public final void ruleSTAnyBitType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1998:2: ( ( ( rule__STAnyBitType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1999:2: ( ( rule__STAnyBitType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1999:2: ( ( rule__STAnyBitType__Alternatives ) )
            // InternalSTFunctionParser.g:2000:3: ( rule__STAnyBitType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2001:3: ( rule__STAnyBitType__Alternatives )
            // InternalSTFunctionParser.g:2001:4: rule__STAnyBitType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBitType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBitType"


    // $ANTLR start "entryRuleSTAnyNumType"
    // InternalSTFunctionParser.g:2010:1: entryRuleSTAnyNumType : ruleSTAnyNumType EOF ;
    public final void entryRuleSTAnyNumType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2011:1: ( ruleSTAnyNumType EOF )
            // InternalSTFunctionParser.g:2012:1: ruleSTAnyNumType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyNumType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyNumType"


    // $ANTLR start "ruleSTAnyNumType"
    // InternalSTFunctionParser.g:2019:1: ruleSTAnyNumType : ( ( rule__STAnyNumType__Alternatives ) ) ;
    public final void ruleSTAnyNumType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2023:2: ( ( ( rule__STAnyNumType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2024:2: ( ( rule__STAnyNumType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2024:2: ( ( rule__STAnyNumType__Alternatives ) )
            // InternalSTFunctionParser.g:2025:3: ( rule__STAnyNumType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2026:3: ( rule__STAnyNumType__Alternatives )
            // InternalSTFunctionParser.g:2026:4: rule__STAnyNumType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyNumType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyNumType"


    // $ANTLR start "entryRuleSTAnyDurationType"
    // InternalSTFunctionParser.g:2035:1: entryRuleSTAnyDurationType : ruleSTAnyDurationType EOF ;
    public final void entryRuleSTAnyDurationType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2036:1: ( ruleSTAnyDurationType EOF )
            // InternalSTFunctionParser.g:2037:1: ruleSTAnyDurationType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDurationType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDurationType"


    // $ANTLR start "ruleSTAnyDurationType"
    // InternalSTFunctionParser.g:2044:1: ruleSTAnyDurationType : ( ( rule__STAnyDurationType__Alternatives ) ) ;
    public final void ruleSTAnyDurationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2048:2: ( ( ( rule__STAnyDurationType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2049:2: ( ( rule__STAnyDurationType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2049:2: ( ( rule__STAnyDurationType__Alternatives ) )
            // InternalSTFunctionParser.g:2050:3: ( rule__STAnyDurationType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2051:3: ( rule__STAnyDurationType__Alternatives )
            // InternalSTFunctionParser.g:2051:4: rule__STAnyDurationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDurationType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDurationType"


    // $ANTLR start "entryRuleSTAnyDateType"
    // InternalSTFunctionParser.g:2060:1: entryRuleSTAnyDateType : ruleSTAnyDateType EOF ;
    public final void entryRuleSTAnyDateType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2061:1: ( ruleSTAnyDateType EOF )
            // InternalSTFunctionParser.g:2062:1: ruleSTAnyDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDateType"


    // $ANTLR start "ruleSTAnyDateType"
    // InternalSTFunctionParser.g:2069:1: ruleSTAnyDateType : ( ( rule__STAnyDateType__Alternatives ) ) ;
    public final void ruleSTAnyDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2073:2: ( ( ( rule__STAnyDateType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2074:2: ( ( rule__STAnyDateType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2074:2: ( ( rule__STAnyDateType__Alternatives ) )
            // InternalSTFunctionParser.g:2075:3: ( rule__STAnyDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2076:3: ( rule__STAnyDateType__Alternatives )
            // InternalSTFunctionParser.g:2076:4: rule__STAnyDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDateType"


    // $ANTLR start "entryRuleSTDateType"
    // InternalSTFunctionParser.g:2085:1: entryRuleSTDateType : ruleSTDateType EOF ;
    public final void entryRuleSTDateType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2086:1: ( ruleSTDateType EOF )
            // InternalSTFunctionParser.g:2087:1: ruleSTDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateType"


    // $ANTLR start "ruleSTDateType"
    // InternalSTFunctionParser.g:2094:1: ruleSTDateType : ( ( rule__STDateType__Alternatives ) ) ;
    public final void ruleSTDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2098:2: ( ( ( rule__STDateType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2099:2: ( ( rule__STDateType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2099:2: ( ( rule__STDateType__Alternatives ) )
            // InternalSTFunctionParser.g:2100:3: ( rule__STDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2101:3: ( rule__STDateType__Alternatives )
            // InternalSTFunctionParser.g:2101:4: rule__STDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateType"


    // $ANTLR start "entryRuleSTTimeOfDayType"
    // InternalSTFunctionParser.g:2110:1: entryRuleSTTimeOfDayType : ruleSTTimeOfDayType EOF ;
    public final void entryRuleSTTimeOfDayType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2111:1: ( ruleSTTimeOfDayType EOF )
            // InternalSTFunctionParser.g:2112:1: ruleSTTimeOfDayType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayType"


    // $ANTLR start "ruleSTTimeOfDayType"
    // InternalSTFunctionParser.g:2119:1: ruleSTTimeOfDayType : ( ( rule__STTimeOfDayType__Alternatives ) ) ;
    public final void ruleSTTimeOfDayType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2123:2: ( ( ( rule__STTimeOfDayType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2124:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2124:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            // InternalSTFunctionParser.g:2125:3: ( rule__STTimeOfDayType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2126:3: ( rule__STTimeOfDayType__Alternatives )
            // InternalSTFunctionParser.g:2126:4: rule__STTimeOfDayType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayType"


    // $ANTLR start "entryRuleSTDateAndTimeType"
    // InternalSTFunctionParser.g:2135:1: entryRuleSTDateAndTimeType : ruleSTDateAndTimeType EOF ;
    public final void entryRuleSTDateAndTimeType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2136:1: ( ruleSTDateAndTimeType EOF )
            // InternalSTFunctionParser.g:2137:1: ruleSTDateAndTimeType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeType"


    // $ANTLR start "ruleSTDateAndTimeType"
    // InternalSTFunctionParser.g:2144:1: ruleSTDateAndTimeType : ( ( rule__STDateAndTimeType__Alternatives ) ) ;
    public final void ruleSTDateAndTimeType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2148:2: ( ( ( rule__STDateAndTimeType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2149:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2149:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            // InternalSTFunctionParser.g:2150:3: ( rule__STDateAndTimeType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2151:3: ( rule__STDateAndTimeType__Alternatives )
            // InternalSTFunctionParser.g:2151:4: rule__STDateAndTimeType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeType"


    // $ANTLR start "entryRuleSTAnyCharsType"
    // InternalSTFunctionParser.g:2160:1: entryRuleSTAnyCharsType : ruleSTAnyCharsType EOF ;
    public final void entryRuleSTAnyCharsType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2161:1: ( ruleSTAnyCharsType EOF )
            // InternalSTFunctionParser.g:2162:1: ruleSTAnyCharsType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyCharsType"


    // $ANTLR start "ruleSTAnyCharsType"
    // InternalSTFunctionParser.g:2169:1: ruleSTAnyCharsType : ( ( rule__STAnyCharsType__Alternatives ) ) ;
    public final void ruleSTAnyCharsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2173:2: ( ( ( rule__STAnyCharsType__Alternatives ) ) )
            // InternalSTFunctionParser.g:2174:2: ( ( rule__STAnyCharsType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2174:2: ( ( rule__STAnyCharsType__Alternatives ) )
            // InternalSTFunctionParser.g:2175:3: ( rule__STAnyCharsType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2176:3: ( rule__STAnyCharsType__Alternatives )
            // InternalSTFunctionParser.g:2176:4: rule__STAnyCharsType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyCharsType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyCharsType"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalSTFunctionParser.g:2185:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2186:1: ( ruleQualifiedName EOF )
            // InternalSTFunctionParser.g:2187:1: ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalSTFunctionParser.g:2194:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2198:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalSTFunctionParser.g:2199:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2199:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalSTFunctionParser.g:2200:3: ( rule__QualifiedName__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2201:3: ( rule__QualifiedName__Group__0 )
            // InternalSTFunctionParser.g:2201:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalSTFunctionParser.g:2210:1: entryRuleQualifiedNameWithWildcard : ruleQualifiedNameWithWildcard EOF ;
    public final void entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2211:1: ( ruleQualifiedNameWithWildcard EOF )
            // InternalSTFunctionParser.g:2212:1: ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalSTFunctionParser.g:2219:1: ruleQualifiedNameWithWildcard : ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) ;
    public final void ruleQualifiedNameWithWildcard() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2223:2: ( ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) )
            // InternalSTFunctionParser.g:2224:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2224:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            // InternalSTFunctionParser.g:2225:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2226:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            // InternalSTFunctionParser.g:2226:4: rule__QualifiedNameWithWildcard__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleNumeric"
    // InternalSTFunctionParser.g:2235:1: entryRuleNumeric : ruleNumeric EOF ;
    public final void entryRuleNumeric() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2236:1: ( ruleNumeric EOF )
            // InternalSTFunctionParser.g:2237:1: ruleNumeric EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumericRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumericRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumeric"


    // $ANTLR start "ruleNumeric"
    // InternalSTFunctionParser.g:2244:1: ruleNumeric : ( ( rule__Numeric__Alternatives ) ) ;
    public final void ruleNumeric() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2248:2: ( ( ( rule__Numeric__Alternatives ) ) )
            // InternalSTFunctionParser.g:2249:2: ( ( rule__Numeric__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2249:2: ( ( rule__Numeric__Alternatives ) )
            // InternalSTFunctionParser.g:2250:3: ( rule__Numeric__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumericAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2251:3: ( rule__Numeric__Alternatives )
            // InternalSTFunctionParser.g:2251:4: rule__Numeric__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Numeric__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumericAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumeric"


    // $ANTLR start "entryRuleNumber"
    // InternalSTFunctionParser.g:2260:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSTFunctionParser.g:2264:1: ( ruleNumber EOF )
            // InternalSTFunctionParser.g:2265:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSTFunctionParser.g:2275:1: ruleNumber : ( ( rule__Number__Group__0 ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2280:2: ( ( ( rule__Number__Group__0 ) ) )
            // InternalSTFunctionParser.g:2281:2: ( ( rule__Number__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2281:2: ( ( rule__Number__Group__0 ) )
            // InternalSTFunctionParser.g:2282:3: ( rule__Number__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2283:3: ( rule__Number__Group__0 )
            // InternalSTFunctionParser.g:2283:4: rule__Number__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleSignedNumeric"
    // InternalSTFunctionParser.g:2293:1: entryRuleSignedNumeric : ruleSignedNumeric EOF ;
    public final void entryRuleSignedNumeric() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2294:1: ( ruleSignedNumeric EOF )
            // InternalSTFunctionParser.g:2295:1: ruleSignedNumeric EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumericRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSignedNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumericRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSignedNumeric"


    // $ANTLR start "ruleSignedNumeric"
    // InternalSTFunctionParser.g:2302:1: ruleSignedNumeric : ( ruleSignedNumber ) ;
    public final void ruleSignedNumeric() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2306:2: ( ( ruleSignedNumber ) )
            // InternalSTFunctionParser.g:2307:2: ( ruleSignedNumber )
            {
            // InternalSTFunctionParser.g:2307:2: ( ruleSignedNumber )
            // InternalSTFunctionParser.g:2308:3: ruleSignedNumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumericAccess().getSignedNumberParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSignedNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumericAccess().getSignedNumberParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSignedNumeric"


    // $ANTLR start "entryRuleSignedNumber"
    // InternalSTFunctionParser.g:2318:1: entryRuleSignedNumber : ruleSignedNumber EOF ;
    public final void entryRuleSignedNumber() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSTFunctionParser.g:2322:1: ( ruleSignedNumber EOF )
            // InternalSTFunctionParser.g:2323:1: ruleSignedNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSignedNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSignedNumber"


    // $ANTLR start "ruleSignedNumber"
    // InternalSTFunctionParser.g:2333:1: ruleSignedNumber : ( ( rule__SignedNumber__Group__0 ) ) ;
    public final void ruleSignedNumber() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2338:2: ( ( ( rule__SignedNumber__Group__0 ) ) )
            // InternalSTFunctionParser.g:2339:2: ( ( rule__SignedNumber__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2339:2: ( ( rule__SignedNumber__Group__0 ) )
            // InternalSTFunctionParser.g:2340:3: ( rule__SignedNumber__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2341:3: ( rule__SignedNumber__Group__0 )
            // InternalSTFunctionParser.g:2341:4: rule__SignedNumber__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSignedNumber"


    // $ANTLR start "entryRuleTime"
    // InternalSTFunctionParser.g:2351:1: entryRuleTime : ruleTime EOF ;
    public final void entryRuleTime() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSTFunctionParser.g:2355:1: ( ruleTime EOF )
            // InternalSTFunctionParser.g:2356:1: ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalSTFunctionParser.g:2366:1: ruleTime : ( ( rule__Time__Group__0 ) ) ;
    public final void ruleTime() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2371:2: ( ( ( rule__Time__Group__0 ) ) )
            // InternalSTFunctionParser.g:2372:2: ( ( rule__Time__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2372:2: ( ( rule__Time__Group__0 ) )
            // InternalSTFunctionParser.g:2373:3: ( rule__Time__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2374:3: ( rule__Time__Group__0 )
            // InternalSTFunctionParser.g:2374:4: rule__Time__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "entryRuleDate"
    // InternalSTFunctionParser.g:2384:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2385:1: ( ruleDate EOF )
            // InternalSTFunctionParser.g:2386:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalSTFunctionParser.g:2393:1: ruleDate : ( ( rule__Date__Group__0 ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2397:2: ( ( ( rule__Date__Group__0 ) ) )
            // InternalSTFunctionParser.g:2398:2: ( ( rule__Date__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2398:2: ( ( rule__Date__Group__0 ) )
            // InternalSTFunctionParser.g:2399:3: ( rule__Date__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2400:3: ( rule__Date__Group__0 )
            // InternalSTFunctionParser.g:2400:4: rule__Date__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleDateAndTime"
    // InternalSTFunctionParser.g:2409:1: entryRuleDateAndTime : ruleDateAndTime EOF ;
    public final void entryRuleDateAndTime() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2410:1: ( ruleDateAndTime EOF )
            // InternalSTFunctionParser.g:2411:1: ruleDateAndTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDateAndTime"


    // $ANTLR start "ruleDateAndTime"
    // InternalSTFunctionParser.g:2418:1: ruleDateAndTime : ( ( rule__DateAndTime__Group__0 ) ) ;
    public final void ruleDateAndTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2422:2: ( ( ( rule__DateAndTime__Group__0 ) ) )
            // InternalSTFunctionParser.g:2423:2: ( ( rule__DateAndTime__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2423:2: ( ( rule__DateAndTime__Group__0 ) )
            // InternalSTFunctionParser.g:2424:3: ( rule__DateAndTime__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2425:3: ( rule__DateAndTime__Group__0 )
            // InternalSTFunctionParser.g:2425:4: rule__DateAndTime__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDateAndTime"


    // $ANTLR start "entryRuleTimeOfDay"
    // InternalSTFunctionParser.g:2434:1: entryRuleTimeOfDay : ruleTimeOfDay EOF ;
    public final void entryRuleTimeOfDay() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:2435:1: ( ruleTimeOfDay EOF )
            // InternalSTFunctionParser.g:2436:1: ruleTimeOfDay EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeOfDay"


    // $ANTLR start "ruleTimeOfDay"
    // InternalSTFunctionParser.g:2443:1: ruleTimeOfDay : ( ( rule__TimeOfDay__Group__0 ) ) ;
    public final void ruleTimeOfDay() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2447:2: ( ( ( rule__TimeOfDay__Group__0 ) ) )
            // InternalSTFunctionParser.g:2448:2: ( ( rule__TimeOfDay__Group__0 ) )
            {
            // InternalSTFunctionParser.g:2448:2: ( ( rule__TimeOfDay__Group__0 ) )
            // InternalSTFunctionParser.g:2449:3: ( rule__TimeOfDay__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:2450:3: ( rule__TimeOfDay__Group__0 )
            // InternalSTFunctionParser.g:2450:4: rule__TimeOfDay__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeOfDay"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTFunctionParser.g:2459:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2463:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTFunctionParser.g:2464:2: ( ( FullStopFullStop ) )
            {
            // InternalSTFunctionParser.g:2464:2: ( ( FullStopFullStop ) )
            // InternalSTFunctionParser.g:2465:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:2466:3: ( FullStopFullStop )
            // InternalSTFunctionParser.g:2466:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTFunctionParser.g:2475:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2479:1: ( ( ( OR ) ) )
            // InternalSTFunctionParser.g:2480:2: ( ( OR ) )
            {
            // InternalSTFunctionParser.g:2480:2: ( ( OR ) )
            // InternalSTFunctionParser.g:2481:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:2482:3: ( OR )
            // InternalSTFunctionParser.g:2482:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTFunctionParser.g:2491:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2495:1: ( ( ( XOR ) ) )
            // InternalSTFunctionParser.g:2496:2: ( ( XOR ) )
            {
            // InternalSTFunctionParser.g:2496:2: ( ( XOR ) )
            // InternalSTFunctionParser.g:2497:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:2498:3: ( XOR )
            // InternalSTFunctionParser.g:2498:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTFunctionParser.g:2507:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2511:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:2512:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2512:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTFunctionParser.g:2513:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2514:3: ( rule__AndOperator__Alternatives )
            // InternalSTFunctionParser.g:2514:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTFunctionParser.g:2523:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2527:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:2528:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2528:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTFunctionParser.g:2529:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2530:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTFunctionParser.g:2530:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTFunctionParser.g:2539:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2543:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:2544:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2544:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTFunctionParser.g:2545:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2546:3: ( rule__CompareOperator__Alternatives )
            // InternalSTFunctionParser.g:2546:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTFunctionParser.g:2555:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2559:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:2560:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2560:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTFunctionParser.g:2561:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2562:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTFunctionParser.g:2562:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTFunctionParser.g:2571:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2575:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:2576:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2576:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTFunctionParser.g:2577:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2578:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTFunctionParser.g:2578:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTFunctionParser.g:2587:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2591:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTFunctionParser.g:2592:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTFunctionParser.g:2592:2: ( ( AsteriskAsterisk ) )
            // InternalSTFunctionParser.g:2593:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:2594:3: ( AsteriskAsterisk )
            // InternalSTFunctionParser.g:2594:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTFunctionParser.g:2603:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2607:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:2608:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2608:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTFunctionParser.g:2609:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2610:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTFunctionParser.g:2610:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleSTBuiltinFeature"
    // InternalSTFunctionParser.g:2619:1: ruleSTBuiltinFeature : ( ( THIS ) ) ;
    public final void ruleSTBuiltinFeature() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2623:1: ( ( ( THIS ) ) )
            // InternalSTFunctionParser.g:2624:2: ( ( THIS ) )
            {
            // InternalSTFunctionParser.g:2624:2: ( ( THIS ) )
            // InternalSTFunctionParser.g:2625:3: ( THIS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureAccess().getTHISEnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:2626:3: ( THIS )
            // InternalSTFunctionParser.g:2626:4: THIS
            {
            match(input,THIS,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureAccess().getTHISEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBuiltinFeature"


    // $ANTLR start "ruleSTMultiBitAccessSpecifier"
    // InternalSTFunctionParser.g:2635:1: ruleSTMultiBitAccessSpecifier : ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleSTMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2639:1: ( ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTFunctionParser.g:2640:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTFunctionParser.g:2640:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            // InternalSTFunctionParser.g:2641:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:2642:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            // InternalSTFunctionParser.g:2642:4: rule__STMultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STMultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultiBitAccessSpecifier"


    // $ANTLR start "rule__STFunction__VarDeclarationsAlternatives_4_0"
    // InternalSTFunctionParser.g:2650:1: rule__STFunction__VarDeclarationsAlternatives_4_0 : ( ( ruleSTVarDeclarationBlock ) | ( ruleSTVarTempDeclarationBlock ) | ( ruleSTVarInputDeclarationBlock ) | ( ruleSTVarOutputDeclarationBlock ) | ( ruleSTVarInOutDeclarationBlock ) );
    public final void rule__STFunction__VarDeclarationsAlternatives_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2654:1: ( ( ruleSTVarDeclarationBlock ) | ( ruleSTVarTempDeclarationBlock ) | ( ruleSTVarInputDeclarationBlock ) | ( ruleSTVarOutputDeclarationBlock ) | ( ruleSTVarInOutDeclarationBlock ) )
            int alt1=5;
            switch ( input.LA(1) ) {
            case VAR:
                {
                alt1=1;
                }
                break;
            case VAR_TEMP:
                {
                alt1=2;
                }
                break;
            case VAR_INPUT:
                {
                alt1=3;
                }
                break;
            case VAR_OUTPUT:
                {
                alt1=4;
                }
                break;
            case VAR_IN_OUT:
                {
                alt1=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // InternalSTFunctionParser.g:2655:2: ( ruleSTVarDeclarationBlock )
                    {
                    // InternalSTFunctionParser.g:2655:2: ( ruleSTVarDeclarationBlock )
                    // InternalSTFunctionParser.g:2656:3: ruleSTVarDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarDeclarationBlockParserRuleCall_4_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarDeclarationBlockParserRuleCall_4_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2661:2: ( ruleSTVarTempDeclarationBlock )
                    {
                    // InternalSTFunctionParser.g:2661:2: ( ruleSTVarTempDeclarationBlock )
                    // InternalSTFunctionParser.g:2662:3: ruleSTVarTempDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarTempDeclarationBlockParserRuleCall_4_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarTempDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarTempDeclarationBlockParserRuleCall_4_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2667:2: ( ruleSTVarInputDeclarationBlock )
                    {
                    // InternalSTFunctionParser.g:2667:2: ( ruleSTVarInputDeclarationBlock )
                    // InternalSTFunctionParser.g:2668:3: ruleSTVarInputDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarInputDeclarationBlockParserRuleCall_4_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarInputDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarInputDeclarationBlockParserRuleCall_4_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2673:2: ( ruleSTVarOutputDeclarationBlock )
                    {
                    // InternalSTFunctionParser.g:2673:2: ( ruleSTVarOutputDeclarationBlock )
                    // InternalSTFunctionParser.g:2674:3: ruleSTVarOutputDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarOutputDeclarationBlockParserRuleCall_4_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarOutputDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarOutputDeclarationBlockParserRuleCall_4_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2679:2: ( ruleSTVarInOutDeclarationBlock )
                    {
                    // InternalSTFunctionParser.g:2679:2: ( ruleSTVarInOutDeclarationBlock )
                    // InternalSTFunctionParser.g:2680:3: ruleSTVarInOutDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarInOutDeclarationBlockParserRuleCall_4_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarInOutDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFunctionAccess().getVarDeclarationsSTVarInOutDeclarationBlockParserRuleCall_4_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__VarDeclarationsAlternatives_4_0"


    // $ANTLR start "rule__STVarDeclaration__Alternatives_4_1"
    // InternalSTFunctionParser.g:2689:1: rule__STVarDeclaration__Alternatives_4_1 : ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) );
    public final void rule__STVarDeclaration__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2693:1: ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==LDATE_AND_TIME||LA2_1==DATE_AND_TIME||LA2_1==LTIME_OF_DAY||LA2_1==TIME_OF_DAY||LA2_1==WSTRING||LA2_1==STRING||LA2_1==DWORD||LA2_1==FALSE||(LA2_1>=LDATE && LA2_1<=LWORD)||(LA2_1>=UDINT && LA2_1<=ULINT)||(LA2_1>=USINT && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=BYTE)||(LA2_1>=CHAR && LA2_1<=DINT)||(LA2_1>=LINT && LA2_1<=LTOD)||(LA2_1>=REAL && LA2_1<=SINT)||(LA2_1>=THIS && LA2_1<=TRUE)||LA2_1==UINT||LA2_1==WORD||LA2_1==AND||(LA2_1>=INT && LA2_1<=NOT)||LA2_1==TOD||LA2_1==XOR||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==OR||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||(LA2_1>=D && LA2_1<=T)||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_INT)||(LA2_1>=RULE_ID && LA2_1<=RULE_STRING)) ) {
                    alt2=1;
                }
                else if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSTFunctionParser.g:2694:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2694:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    // InternalSTFunctionParser.g:2695:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }
                    // InternalSTFunctionParser.g:2696:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    // InternalSTFunctionParser.g:2696:4: rule__STVarDeclaration__Group_4_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2700:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2700:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    // InternalSTFunctionParser.g:2701:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }
                    // InternalSTFunctionParser.g:2702:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    // InternalSTFunctionParser.g:2702:4: rule__STVarDeclaration__Group_4_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Alternatives_4_1"


    // $ANTLR start "rule__STTypeDeclaration__Alternatives_1_1"
    // InternalSTFunctionParser.g:2710:1: rule__STTypeDeclaration__Alternatives_1_1 : ( ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) ) | ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) ) );
    public final void rule__STTypeDeclaration__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2714:1: ( ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) ) | ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==LeftSquareBracket) ) {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==Asterisk) ) {
                    alt3=2;
                }
                else if ( (LA3_1==LDATE_AND_TIME||LA3_1==DATE_AND_TIME||LA3_1==LTIME_OF_DAY||LA3_1==TIME_OF_DAY||LA3_1==WSTRING||LA3_1==STRING||LA3_1==DWORD||LA3_1==FALSE||(LA3_1>=LDATE && LA3_1<=LWORD)||(LA3_1>=UDINT && LA3_1<=ULINT)||(LA3_1>=USINT && LA3_1<=WCHAR)||(LA3_1>=BOOL && LA3_1<=BYTE)||(LA3_1>=CHAR && LA3_1<=DINT)||(LA3_1>=LINT && LA3_1<=LTOD)||(LA3_1>=REAL && LA3_1<=SINT)||(LA3_1>=THIS && LA3_1<=TRUE)||LA3_1==UINT||LA3_1==WORD||LA3_1==AND||(LA3_1>=INT && LA3_1<=NOT)||LA3_1==TOD||LA3_1==XOR||LA3_1==DT||(LA3_1>=LD && LA3_1<=LT)||LA3_1==OR||LA3_1==LeftParenthesis||LA3_1==PlusSign||LA3_1==HyphenMinus||(LA3_1>=D && LA3_1<=T)||(LA3_1>=RULE_NON_DECIMAL && LA3_1<=RULE_INT)||(LA3_1>=RULE_ID && LA3_1<=RULE_STRING)) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTFunctionParser.g:2715:2: ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2715:2: ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) )
                    // InternalSTFunctionParser.g:2716:3: ( rule__STTypeDeclaration__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTFunctionParser.g:2717:3: ( rule__STTypeDeclaration__Group_1_1_0__0 )
                    // InternalSTFunctionParser.g:2717:4: rule__STTypeDeclaration__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2721:2: ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2721:2: ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) )
                    // InternalSTFunctionParser.g:2722:3: ( rule__STTypeDeclaration__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTFunctionParser.g:2723:3: ( rule__STTypeDeclaration__Group_1_1_1__0 )
                    // InternalSTFunctionParser.g:2723:4: rule__STTypeDeclaration__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Alternatives_1_1"


    // $ANTLR start "rule__STInitializerExpression__Alternatives"
    // InternalSTFunctionParser.g:2731:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) );
    public final void rule__STInitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2735:1: ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) )
            int alt4=3;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalSTFunctionParser.g:2736:2: ( ruleSTElementaryInitializerExpression )
                    {
                    // InternalSTFunctionParser.g:2736:2: ( ruleSTElementaryInitializerExpression )
                    // InternalSTFunctionParser.g:2737:3: ruleSTElementaryInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTElementaryInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2742:2: ( ruleSTArrayInitializerExpression )
                    {
                    // InternalSTFunctionParser.g:2742:2: ( ruleSTArrayInitializerExpression )
                    // InternalSTFunctionParser.g:2743:3: ruleSTArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2748:2: ( ruleSTStructInitializerExpression )
                    {
                    // InternalSTFunctionParser.g:2748:2: ( ruleSTStructInitializerExpression )
                    // InternalSTFunctionParser.g:2749:3: ruleSTStructInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTStructInitializerExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStructInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTStructInitializerExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpression__Alternatives"


    // $ANTLR start "rule__STArrayInitElement__Alternatives"
    // InternalSTFunctionParser.g:2758:1: rule__STArrayInitElement__Alternatives : ( ( ruleSTSingleArrayInitElement ) | ( ruleSTRepeatArrayInitElement ) );
    public final void rule__STArrayInitElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2762:1: ( ( ruleSTSingleArrayInitElement ) | ( ruleSTRepeatArrayInitElement ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==LDATE_AND_TIME||LA5_0==DATE_AND_TIME||LA5_0==LTIME_OF_DAY||LA5_0==TIME_OF_DAY||LA5_0==WSTRING||LA5_0==STRING||LA5_0==DWORD||LA5_0==FALSE||(LA5_0>=LDATE && LA5_0<=LWORD)||(LA5_0>=UDINT && LA5_0<=ULINT)||(LA5_0>=USINT && LA5_0<=WCHAR)||(LA5_0>=BOOL && LA5_0<=BYTE)||(LA5_0>=CHAR && LA5_0<=DINT)||(LA5_0>=LINT && LA5_0<=LTOD)||(LA5_0>=REAL && LA5_0<=SINT)||(LA5_0>=THIS && LA5_0<=TRUE)||LA5_0==UINT||LA5_0==WORD||LA5_0==AND||(LA5_0>=INT && LA5_0<=NOT)||LA5_0==TOD||LA5_0==XOR||LA5_0==DT||(LA5_0>=LD && LA5_0<=LT)||LA5_0==OR||LA5_0==LeftParenthesis||LA5_0==PlusSign||LA5_0==HyphenMinus||(LA5_0>=D && LA5_0<=LeftSquareBracket)||LA5_0==RULE_NON_DECIMAL||(LA5_0>=RULE_ID && LA5_0<=RULE_STRING)) ) {
                alt5=1;
            }
            else if ( (LA5_0==RULE_INT) ) {
                int LA5_2 = input.LA(2);

                if ( (LA5_2==EOF||LA5_2==AND||LA5_2==MOD||LA5_2==XOR||(LA5_2>=AsteriskAsterisk && LA5_2<=FullStopFullStop)||(LA5_2>=LessThanSignEqualsSign && LA5_2<=LessThanSignGreaterThanSign)||LA5_2==GreaterThanSignEqualsSign||LA5_2==OR||LA5_2==Ampersand||(LA5_2>=Asterisk && LA5_2<=Solidus)||(LA5_2>=LessThanSign && LA5_2<=GreaterThanSign)||LA5_2==RightSquareBracket) ) {
                    alt5=1;
                }
                else if ( (LA5_2==LeftParenthesis) ) {
                    alt5=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSTFunctionParser.g:2763:2: ( ruleSTSingleArrayInitElement )
                    {
                    // InternalSTFunctionParser.g:2763:2: ( ruleSTSingleArrayInitElement )
                    // InternalSTFunctionParser.g:2764:3: ruleSTSingleArrayInitElement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTArrayInitElementAccess().getSTSingleArrayInitElementParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTSingleArrayInitElement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTArrayInitElementAccess().getSTSingleArrayInitElementParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2769:2: ( ruleSTRepeatArrayInitElement )
                    {
                    // InternalSTFunctionParser.g:2769:2: ( ruleSTRepeatArrayInitElement )
                    // InternalSTFunctionParser.g:2770:3: ruleSTRepeatArrayInitElement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTArrayInitElementAccess().getSTRepeatArrayInitElementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatArrayInitElement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTArrayInitElementAccess().getSTRepeatArrayInitElementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTFunctionParser.g:2779:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2783:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==LDATE_AND_TIME||LA6_0==DATE_AND_TIME||LA6_0==LTIME_OF_DAY||LA6_0==TIME_OF_DAY||LA6_0==CONTINUE||LA6_0==WSTRING||LA6_0==REPEAT||LA6_0==RETURN||LA6_0==STRING||LA6_0==DWORD||LA6_0==FALSE||(LA6_0>=LDATE && LA6_0<=LWORD)||(LA6_0>=UDINT && LA6_0<=ULINT)||(LA6_0>=USINT && LA6_0<=DINT)||LA6_0==EXIT||(LA6_0>=LINT && LA6_0<=LTOD)||(LA6_0>=REAL && LA6_0<=SINT)||(LA6_0>=THIS && LA6_0<=TRUE)||LA6_0==UINT||LA6_0==WORD||(LA6_0>=AND && LA6_0<=NOT)||LA6_0==TOD||LA6_0==XOR||(LA6_0>=DT && LA6_0<=LT)||LA6_0==OR||LA6_0==LeftParenthesis||LA6_0==PlusSign||LA6_0==HyphenMinus||(LA6_0>=D && LA6_0<=T)||(LA6_0>=RULE_NON_DECIMAL && LA6_0<=RULE_INT)||(LA6_0>=RULE_ID && LA6_0<=RULE_STRING)) ) {
                alt6=1;
            }
            else if ( (LA6_0==Semicolon) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSTFunctionParser.g:2784:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2784:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTFunctionParser.g:2785:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:2786:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTFunctionParser.g:2786:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2790:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2790:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTFunctionParser.g:2791:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:2792:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTFunctionParser.g:2792:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTFunctionParser.g:2800:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignment ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2804:1: ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignment ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) )
            int alt7=9;
            switch ( input.LA(1) ) {
            case IF:
                {
                alt7=1;
                }
                break;
            case CASE:
                {
                alt7=2;
                }
                break;
            case FOR:
                {
                alt7=3;
                }
                break;
            case WHILE:
                {
                alt7=4;
                }
                break;
            case REPEAT:
                {
                alt7=5;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case THIS:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case AND:
            case INT:
            case LDT:
            case MOD:
            case NOT:
            case TOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_ID:
            case RULE_STRING:
                {
                alt7=6;
                }
                break;
            case RETURN:
                {
                alt7=7;
                }
                break;
            case CONTINUE:
                {
                alt7=8;
                }
                break;
            case EXIT:
                {
                alt7=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalSTFunctionParser.g:2805:2: ( ruleSTIfStatement )
                    {
                    // InternalSTFunctionParser.g:2805:2: ( ruleSTIfStatement )
                    // InternalSTFunctionParser.g:2806:3: ruleSTIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2811:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTFunctionParser.g:2811:2: ( ruleSTCaseStatement )
                    // InternalSTFunctionParser.g:2812:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2817:2: ( ruleSTForStatement )
                    {
                    // InternalSTFunctionParser.g:2817:2: ( ruleSTForStatement )
                    // InternalSTFunctionParser.g:2818:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2823:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTFunctionParser.g:2823:2: ( ruleSTWhileStatement )
                    // InternalSTFunctionParser.g:2824:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2829:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTFunctionParser.g:2829:2: ( ruleSTRepeatStatement )
                    // InternalSTFunctionParser.g:2830:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2835:2: ( ruleSTAssignment )
                    {
                    // InternalSTFunctionParser.g:2835:2: ( ruleSTAssignment )
                    // InternalSTFunctionParser.g:2836:3: ruleSTAssignment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentParserRuleCall_0_0_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAssignment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:2841:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    {
                    // InternalSTFunctionParser.g:2841:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    // InternalSTFunctionParser.g:2842:3: ( rule__STStatement__Group_0_0_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }
                    // InternalSTFunctionParser.g:2843:3: ( rule__STStatement__Group_0_0_6__0 )
                    // InternalSTFunctionParser.g:2843:4: rule__STStatement__Group_0_0_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:2847:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTFunctionParser.g:2847:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTFunctionParser.g:2848:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTFunctionParser.g:2849:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTFunctionParser.g:2849:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:2853:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTFunctionParser.g:2853:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTFunctionParser.g:2854:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTFunctionParser.g:2855:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTFunctionParser.g:2855:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STCallArgument__Alternatives"
    // InternalSTFunctionParser.g:2863:1: rule__STCallArgument__Alternatives : ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) );
    public final void rule__STCallArgument__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2867:1: ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case THIS:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case AND:
            case INT:
            case LDT:
            case MOD:
            case TOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
                {
                alt8=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EqualsSignGreaterThanSign:
                    {
                    alt8=3;
                    }
                    break;
                case ColonEqualsSign:
                    {
                    alt8=2;
                    }
                    break;
                case EOF:
                case AND:
                case MOD:
                case XOR:
                case AsteriskAsterisk:
                case FullStopFullStop:
                case ColonColon:
                case LessThanSignEqualsSign:
                case LessThanSignGreaterThanSign:
                case GreaterThanSignEqualsSign:
                case OR:
                case NumberSign:
                case Ampersand:
                case LeftParenthesis:
                case RightParenthesis:
                case Asterisk:
                case PlusSign:
                case Comma:
                case HyphenMinus:
                case FullStop:
                case Solidus:
                case LessThanSign:
                case EqualsSign:
                case GreaterThanSign:
                case LeftSquareBracket:
                    {
                    alt8=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }

                }
                break;
            case NOT:
                {
                int LA8_3 = input.LA(2);

                if ( (LA8_3==LDATE_AND_TIME||LA8_3==DATE_AND_TIME||LA8_3==LTIME_OF_DAY||LA8_3==TIME_OF_DAY||LA8_3==WSTRING||LA8_3==STRING||LA8_3==DWORD||LA8_3==FALSE||(LA8_3>=LDATE && LA8_3<=LWORD)||(LA8_3>=UDINT && LA8_3<=ULINT)||(LA8_3>=USINT && LA8_3<=WCHAR)||(LA8_3>=BOOL && LA8_3<=BYTE)||(LA8_3>=CHAR && LA8_3<=DINT)||(LA8_3>=LINT && LA8_3<=LTOD)||(LA8_3>=REAL && LA8_3<=SINT)||(LA8_3>=THIS && LA8_3<=TRUE)||LA8_3==UINT||LA8_3==WORD||LA8_3==AND||(LA8_3>=INT && LA8_3<=NOT)||LA8_3==TOD||LA8_3==XOR||LA8_3==DT||(LA8_3>=LD && LA8_3<=LT)||LA8_3==OR||LA8_3==LeftParenthesis||LA8_3==PlusSign||LA8_3==HyphenMinus||(LA8_3>=D && LA8_3<=T)||(LA8_3>=RULE_NON_DECIMAL && LA8_3<=RULE_INT)||LA8_3==RULE_STRING) ) {
                    alt8=1;
                }
                else if ( (LA8_3==RULE_ID) ) {
                    int LA8_6 = input.LA(3);

                    if ( (LA8_6==EqualsSignGreaterThanSign) ) {
                        alt8=3;
                    }
                    else if ( (LA8_6==EOF||LA8_6==AND||LA8_6==MOD||LA8_6==XOR||(LA8_6>=AsteriskAsterisk && LA8_6<=ColonColon)||(LA8_6>=LessThanSignEqualsSign && LA8_6<=LessThanSignGreaterThanSign)||LA8_6==GreaterThanSignEqualsSign||LA8_6==OR||(LA8_6>=NumberSign && LA8_6<=Solidus)||(LA8_6>=LessThanSign && LA8_6<=GreaterThanSign)||LA8_6==LeftSquareBracket) ) {
                        alt8=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalSTFunctionParser.g:2868:2: ( ruleSTCallUnnamedArgument )
                    {
                    // InternalSTFunctionParser.g:2868:2: ( ruleSTCallUnnamedArgument )
                    // InternalSTFunctionParser.g:2869:3: ruleSTCallUnnamedArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallUnnamedArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2874:2: ( ruleSTCallNamedInputArgument )
                    {
                    // InternalSTFunctionParser.g:2874:2: ( ruleSTCallNamedInputArgument )
                    // InternalSTFunctionParser.g:2875:3: ruleSTCallNamedInputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedInputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2880:2: ( ruleSTCallNamedOutputArgument )
                    {
                    // InternalSTFunctionParser.g:2880:2: ( ruleSTCallNamedOutputArgument )
                    // InternalSTFunctionParser.g:2881:3: ruleSTCallNamedOutputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedOutputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallArgument__Alternatives"


    // $ANTLR start "rule__STUnaryExpression__Alternatives"
    // InternalSTFunctionParser.g:2890:1: rule__STUnaryExpression__Alternatives : ( ( ruleSTAccessExpression ) | ( ruleSTLiteralExpressions ) | ( ( ruleSTSignedLiteralExpressions ) ) | ( ( rule__STUnaryExpression__Group_3__0 ) ) );
    public final void rule__STUnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2894:1: ( ( ruleSTAccessExpression ) | ( ruleSTLiteralExpressions ) | ( ( ruleSTSignedLiteralExpressions ) ) | ( ( rule__STUnaryExpression__Group_3__0 ) ) )
            int alt9=4;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalSTFunctionParser.g:2895:2: ( ruleSTAccessExpression )
                    {
                    // InternalSTFunctionParser.g:2895:2: ( ruleSTAccessExpression )
                    // InternalSTFunctionParser.g:2896:3: ruleSTAccessExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2901:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTFunctionParser.g:2901:2: ( ruleSTLiteralExpressions )
                    // InternalSTFunctionParser.g:2902:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2907:2: ( ( ruleSTSignedLiteralExpressions ) )
                    {
                    // InternalSTFunctionParser.g:2907:2: ( ( ruleSTSignedLiteralExpressions ) )
                    // InternalSTFunctionParser.g:2908:3: ( ruleSTSignedLiteralExpressions )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTSignedLiteralExpressionsParserRuleCall_2()); 
                    }
                    // InternalSTFunctionParser.g:2909:3: ( ruleSTSignedLiteralExpressions )
                    // InternalSTFunctionParser.g:2909:4: ruleSTSignedLiteralExpressions
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTSignedLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTSignedLiteralExpressionsParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2913:2: ( ( rule__STUnaryExpression__Group_3__0 ) )
                    {
                    // InternalSTFunctionParser.g:2913:2: ( ( rule__STUnaryExpression__Group_3__0 ) )
                    // InternalSTFunctionParser.g:2914:3: ( rule__STUnaryExpression__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getGroup_3()); 
                    }
                    // InternalSTFunctionParser.g:2915:3: ( rule__STUnaryExpression__Group_3__0 )
                    // InternalSTFunctionParser.g:2915:4: rule__STUnaryExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STUnaryExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Alternatives"


    // $ANTLR start "rule__STAccessExpression__Alternatives_1"
    // InternalSTFunctionParser.g:2923:1: rule__STAccessExpression__Alternatives_1 : ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) );
    public final void rule__STAccessExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2927:1: ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==FullStop) ) {
                alt10=1;
            }
            else if ( (LA10_0==LeftSquareBracket) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSTFunctionParser.g:2928:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2928:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    // InternalSTFunctionParser.g:2929:3: ( rule__STAccessExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSTFunctionParser.g:2930:3: ( rule__STAccessExpression__Group_1_0__0 )
                    // InternalSTFunctionParser.g:2930:4: rule__STAccessExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2934:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2934:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    // InternalSTFunctionParser.g:2935:3: ( rule__STAccessExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSTFunctionParser.g:2936:3: ( rule__STAccessExpression__Group_1_1__0 )
                    // InternalSTFunctionParser.g:2936:4: rule__STAccessExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Alternatives_1"


    // $ANTLR start "rule__STAccessExpression__MemberAlternatives_1_0_2_0"
    // InternalSTFunctionParser.g:2944:1: rule__STAccessExpression__MemberAlternatives_1_0_2_0 : ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) );
    public final void rule__STAccessExpression__MemberAlternatives_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2948:1: ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==AND||LA11_0==MOD||LA11_0==XOR||LA11_0==DT||(LA11_0>=LD && LA11_0<=LT)||LA11_0==OR||LA11_0==D||LA11_0==RULE_ID) ) {
                alt11=1;
            }
            else if ( ((LA11_0>=B && LA11_0<=X)||LA11_0==LeftParenthesis||LA11_0==RULE_INT) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSTFunctionParser.g:2949:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:2949:2: ( ruleSTFeatureExpression )
                    // InternalSTFunctionParser.g:2950:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2955:2: ( ruleSTMultibitPartialExpression )
                    {
                    // InternalSTFunctionParser.g:2955:2: ( ruleSTMultibitPartialExpression )
                    // InternalSTFunctionParser.g:2956:3: ruleSTMultibitPartialExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMultibitPartialExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAlternatives_1_0_2_0"


    // $ANTLR start "rule__STPrimaryExpression__Alternatives"
    // InternalSTFunctionParser.g:2965:1: rule__STPrimaryExpression__Alternatives : ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTBuiltinFeatureExpression ) );
    public final void rule__STPrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2969:1: ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTBuiltinFeatureExpression ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt12=1;
                }
                break;
            case AND:
            case MOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case D:
            case RULE_ID:
                {
                alt12=2;
                }
                break;
            case THIS:
                {
                alt12=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTFunctionParser.g:2970:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2970:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    // InternalSTFunctionParser.g:2971:3: ( rule__STPrimaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:2972:3: ( rule__STPrimaryExpression__Group_0__0 )
                    // InternalSTFunctionParser.g:2972:4: rule__STPrimaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STPrimaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2976:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:2976:2: ( ruleSTFeatureExpression )
                    // InternalSTFunctionParser.g:2977:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2982:2: ( ruleSTBuiltinFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:2982:2: ( ruleSTBuiltinFeatureExpression )
                    // InternalSTFunctionParser.g:2983:3: ruleSTBuiltinFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTBuiltinFeatureExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTBuiltinFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTBuiltinFeatureExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Alternatives"


    // $ANTLR start "rule__STFeatureName__Alternatives"
    // InternalSTFunctionParser.g:2992:1: rule__STFeatureName__Alternatives : ( ( ruleQualifiedName ) | ( LT ) | ( AND ) | ( OR ) | ( XOR ) | ( MOD ) | ( D ) | ( DT ) | ( LD ) );
    public final void rule__STFeatureName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2996:1: ( ( ruleQualifiedName ) | ( LT ) | ( AND ) | ( OR ) | ( XOR ) | ( MOD ) | ( D ) | ( DT ) | ( LD ) )
            int alt13=9;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt13=1;
                }
                break;
            case LT:
                {
                alt13=2;
                }
                break;
            case AND:
                {
                alt13=3;
                }
                break;
            case OR:
                {
                alt13=4;
                }
                break;
            case XOR:
                {
                alt13=5;
                }
                break;
            case MOD:
                {
                alt13=6;
                }
                break;
            case D:
                {
                alt13=7;
                }
                break;
            case DT:
                {
                alt13=8;
                }
                break;
            case LD:
                {
                alt13=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTFunctionParser.g:2997:2: ( ruleQualifiedName )
                    {
                    // InternalSTFunctionParser.g:2997:2: ( ruleQualifiedName )
                    // InternalSTFunctionParser.g:2998:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getQualifiedNameParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getQualifiedNameParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3003:2: ( LT )
                    {
                    // InternalSTFunctionParser.g:3003:2: ( LT )
                    // InternalSTFunctionParser.g:3004:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getLTKeyword_1()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getLTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3009:2: ( AND )
                    {
                    // InternalSTFunctionParser.g:3009:2: ( AND )
                    // InternalSTFunctionParser.g:3010:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getANDKeyword_2()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getANDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3015:2: ( OR )
                    {
                    // InternalSTFunctionParser.g:3015:2: ( OR )
                    // InternalSTFunctionParser.g:3016:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getORKeyword_3()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getORKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3021:2: ( XOR )
                    {
                    // InternalSTFunctionParser.g:3021:2: ( XOR )
                    // InternalSTFunctionParser.g:3022:3: XOR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getXORKeyword_4()); 
                    }
                    match(input,XOR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getXORKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:3027:2: ( MOD )
                    {
                    // InternalSTFunctionParser.g:3027:2: ( MOD )
                    // InternalSTFunctionParser.g:3028:3: MOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getMODKeyword_5()); 
                    }
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getMODKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:3033:2: ( D )
                    {
                    // InternalSTFunctionParser.g:3033:2: ( D )
                    // InternalSTFunctionParser.g:3034:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getDKeyword_6()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getDKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:3039:2: ( DT )
                    {
                    // InternalSTFunctionParser.g:3039:2: ( DT )
                    // InternalSTFunctionParser.g:3040:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getDTKeyword_7()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getDTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:3045:2: ( LD )
                    {
                    // InternalSTFunctionParser.g:3045:2: ( LD )
                    // InternalSTFunctionParser.g:3046:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getLDKeyword_8()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getLDKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureName__Alternatives"


    // $ANTLR start "rule__STMultibitPartialExpression__Alternatives_2"
    // InternalSTFunctionParser.g:3055:1: rule__STMultibitPartialExpression__Alternatives_2 : ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) );
    public final void rule__STMultibitPartialExpression__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3059:1: ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_INT) ) {
                alt14=1;
            }
            else if ( (LA14_0==LeftParenthesis) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSTFunctionParser.g:3060:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    {
                    // InternalSTFunctionParser.g:3060:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    // InternalSTFunctionParser.g:3061:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }
                    // InternalSTFunctionParser.g:3062:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    // InternalSTFunctionParser.g:3062:4: rule__STMultibitPartialExpression__IndexAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__IndexAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3066:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:3066:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    // InternalSTFunctionParser.g:3067:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSTFunctionParser.g:3068:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    // InternalSTFunctionParser.g:3068:4: rule__STMultibitPartialExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Alternatives_2"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTFunctionParser.g:3076:1: rule__STLiteralExpressions__Alternatives : ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) | ( ruleSTEnumLiteral ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3080:1: ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) | ( ruleSTEnumLiteral ) )
            int alt15=7;
            switch ( input.LA(1) ) {
            case DWORD:
            case FALSE:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt15=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt15=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt15=3;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt15=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt15=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt15=6;
                }
                break;
            case RULE_ID:
                {
                alt15=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTFunctionParser.g:3081:2: ( ruleSTNumericLiteral )
                    {
                    // InternalSTFunctionParser.g:3081:2: ( ruleSTNumericLiteral )
                    // InternalSTFunctionParser.g:3082:3: ruleSTNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTNumericLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3087:2: ( ruleSTDateLiteral )
                    {
                    // InternalSTFunctionParser.g:3087:2: ( ruleSTDateLiteral )
                    // InternalSTFunctionParser.g:3088:3: ruleSTDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3093:2: ( ruleSTTimeLiteral )
                    {
                    // InternalSTFunctionParser.g:3093:2: ( ruleSTTimeLiteral )
                    // InternalSTFunctionParser.g:3094:3: ruleSTTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3099:2: ( ruleSTTimeOfDayLiteral )
                    {
                    // InternalSTFunctionParser.g:3099:2: ( ruleSTTimeOfDayLiteral )
                    // InternalSTFunctionParser.g:3100:3: ruleSTTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3105:2: ( ruleSTDateAndTimeLiteral )
                    {
                    // InternalSTFunctionParser.g:3105:2: ( ruleSTDateAndTimeLiteral )
                    // InternalSTFunctionParser.g:3106:3: ruleSTDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:3111:2: ( ruleSTStringLiteral )
                    {
                    // InternalSTFunctionParser.g:3111:2: ( ruleSTStringLiteral )
                    // InternalSTFunctionParser.g:3112:3: ruleSTStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:3117:2: ( ruleSTEnumLiteral )
                    {
                    // InternalSTFunctionParser.g:3117:2: ( ruleSTEnumLiteral )
                    // InternalSTFunctionParser.g:3118:3: ruleSTEnumLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTEnumLiteralParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTEnumLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTEnumLiteralParserRuleCall_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__STNumericLiteralType__Alternatives"
    // InternalSTFunctionParser.g:3127:1: rule__STNumericLiteralType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) );
    public final void rule__STNumericLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3131:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==DWORD||LA16_0==LWORD||(LA16_0>=BOOL && LA16_0<=BYTE)||LA16_0==WORD) ) {
                alt16=1;
            }
            else if ( (LA16_0==LREAL||(LA16_0>=UDINT && LA16_0<=ULINT)||LA16_0==USINT||LA16_0==DINT||LA16_0==LINT||(LA16_0>=REAL && LA16_0<=SINT)||LA16_0==UINT||LA16_0==INT) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSTFunctionParser.g:3132:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTFunctionParser.g:3132:2: ( ruleSTAnyBitType )
                    // InternalSTFunctionParser.g:3133:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3138:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTFunctionParser.g:3138:2: ( ruleSTAnyNumType )
                    // InternalSTFunctionParser.g:3139:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteralType__Alternatives"


    // $ANTLR start "rule__STNumericLiteral__Alternatives"
    // InternalSTFunctionParser.g:3148:1: rule__STNumericLiteral__Alternatives : ( ( ( rule__STNumericLiteral__Group_0__0 ) ) | ( ( rule__STNumericLiteral__Group_1__0 ) ) );
    public final void rule__STNumericLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3152:1: ( ( ( rule__STNumericLiteral__Group_0__0 ) ) | ( ( rule__STNumericLiteral__Group_1__0 ) ) )
            int alt17=2;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalSTFunctionParser.g:3153:2: ( ( rule__STNumericLiteral__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:3153:2: ( ( rule__STNumericLiteral__Group_0__0 ) )
                    // InternalSTFunctionParser.g:3154:3: ( rule__STNumericLiteral__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:3155:3: ( rule__STNumericLiteral__Group_0__0 )
                    // InternalSTFunctionParser.g:3155:4: rule__STNumericLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3159:2: ( ( rule__STNumericLiteral__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:3159:2: ( ( rule__STNumericLiteral__Group_1__0 ) )
                    // InternalSTFunctionParser.g:3160:3: ( rule__STNumericLiteral__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:3161:3: ( rule__STNumericLiteral__Group_1__0 )
                    // InternalSTFunctionParser.g:3161:4: rule__STNumericLiteral__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Alternatives"


    // $ANTLR start "rule__STDateLiteralType__Alternatives"
    // InternalSTFunctionParser.g:3169:1: rule__STDateLiteralType__Alternatives : ( ( ruleSTDateType ) | ( D ) | ( LD ) );
    public final void rule__STDateLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3173:1: ( ( ruleSTDateType ) | ( D ) | ( LD ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt18=1;
                }
                break;
            case D:
                {
                alt18=2;
                }
                break;
            case LD:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSTFunctionParser.g:3174:2: ( ruleSTDateType )
                    {
                    // InternalSTFunctionParser.g:3174:2: ( ruleSTDateType )
                    // InternalSTFunctionParser.g:3175:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3180:2: ( D )
                    {
                    // InternalSTFunctionParser.g:3180:2: ( D )
                    // InternalSTFunctionParser.g:3181:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3186:2: ( LD )
                    {
                    // InternalSTFunctionParser.g:3186:2: ( LD )
                    // InternalSTFunctionParser.g:3187:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeLiteralType__Alternatives"
    // InternalSTFunctionParser.g:3196:1: rule__STTimeLiteralType__Alternatives : ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) );
    public final void rule__STTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3200:1: ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) )
            int alt19=3;
            switch ( input.LA(1) ) {
            case LTIME:
            case TIME:
                {
                alt19=1;
                }
                break;
            case T:
                {
                alt19=2;
                }
                break;
            case LT:
                {
                alt19=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalSTFunctionParser.g:3201:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTFunctionParser.g:3201:2: ( ruleSTAnyDurationType )
                    // InternalSTFunctionParser.g:3202:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3207:2: ( T )
                    {
                    // InternalSTFunctionParser.g:3207:2: ( T )
                    // InternalSTFunctionParser.g:3208:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3213:2: ( LT )
                    {
                    // InternalSTFunctionParser.g:3213:2: ( LT )
                    // InternalSTFunctionParser.g:3214:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STAnyType__Alternatives"
    // InternalSTFunctionParser.g:3223:1: rule__STAnyType__Alternatives : ( ( ruleQualifiedName ) | ( ruleSTAnyBuiltinType ) );
    public final void rule__STAnyType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3227:1: ( ( ruleQualifiedName ) | ( ruleSTAnyBuiltinType ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_ID) ) {
                alt20=1;
            }
            else if ( (LA20_0==LDATE_AND_TIME||LA20_0==DATE_AND_TIME||LA20_0==LTIME_OF_DAY||LA20_0==TIME_OF_DAY||LA20_0==WSTRING||LA20_0==STRING||LA20_0==DWORD||(LA20_0>=LDATE && LA20_0<=LWORD)||(LA20_0>=UDINT && LA20_0<=ULINT)||(LA20_0>=USINT && LA20_0<=WCHAR)||(LA20_0>=BOOL && LA20_0<=BYTE)||(LA20_0>=CHAR && LA20_0<=DINT)||(LA20_0>=LINT && LA20_0<=LTOD)||(LA20_0>=REAL && LA20_0<=SINT)||LA20_0==TIME||LA20_0==UINT||LA20_0==WORD||(LA20_0>=INT && LA20_0<=LDT)||LA20_0==TOD||LA20_0==DT) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSTFunctionParser.g:3228:2: ( ruleQualifiedName )
                    {
                    // InternalSTFunctionParser.g:3228:2: ( ruleQualifiedName )
                    // InternalSTFunctionParser.g:3229:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getQualifiedNameParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getQualifiedNameParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3234:2: ( ruleSTAnyBuiltinType )
                    {
                    // InternalSTFunctionParser.g:3234:2: ( ruleSTAnyBuiltinType )
                    // InternalSTFunctionParser.g:3235:3: ruleSTAnyBuiltinType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBuiltinType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyType__Alternatives"


    // $ANTLR start "rule__STAnyBuiltinType__Alternatives"
    // InternalSTFunctionParser.g:3244:1: rule__STAnyBuiltinType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) );
    public final void rule__STAnyBuiltinType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3248:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) )
            int alt21=5;
            switch ( input.LA(1) ) {
            case DWORD:
            case LWORD:
            case BOOL:
            case BYTE:
            case WORD:
                {
                alt21=1;
                }
                break;
            case LREAL:
            case UDINT:
            case ULINT:
            case USINT:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case INT:
                {
                alt21=2;
                }
                break;
            case LTIME:
            case TIME:
                {
                alt21=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LDATE:
            case DATE:
            case LTOD:
            case LDT:
            case TOD:
            case DT:
                {
                alt21=4;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
                {
                alt21=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTFunctionParser.g:3249:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTFunctionParser.g:3249:2: ( ruleSTAnyBitType )
                    // InternalSTFunctionParser.g:3250:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3255:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTFunctionParser.g:3255:2: ( ruleSTAnyNumType )
                    // InternalSTFunctionParser.g:3256:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3261:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTFunctionParser.g:3261:2: ( ruleSTAnyDurationType )
                    // InternalSTFunctionParser.g:3262:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3267:2: ( ruleSTAnyDateType )
                    {
                    // InternalSTFunctionParser.g:3267:2: ( ruleSTAnyDateType )
                    // InternalSTFunctionParser.g:3268:3: ruleSTAnyDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3273:2: ( ruleSTAnyCharsType )
                    {
                    // InternalSTFunctionParser.g:3273:2: ( ruleSTAnyCharsType )
                    // InternalSTFunctionParser.g:3274:3: ruleSTAnyCharsType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyCharsType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBuiltinType__Alternatives"


    // $ANTLR start "rule__STAnyBitType__Alternatives"
    // InternalSTFunctionParser.g:3283:1: rule__STAnyBitType__Alternatives : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) );
    public final void rule__STAnyBitType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3287:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) )
            int alt22=5;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt22=1;
                }
                break;
            case BYTE:
                {
                alt22=2;
                }
                break;
            case WORD:
                {
                alt22=3;
                }
                break;
            case DWORD:
                {
                alt22=4;
                }
                break;
            case LWORD:
                {
                alt22=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTFunctionParser.g:3288:2: ( BOOL )
                    {
                    // InternalSTFunctionParser.g:3288:2: ( BOOL )
                    // InternalSTFunctionParser.g:3289:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3294:2: ( BYTE )
                    {
                    // InternalSTFunctionParser.g:3294:2: ( BYTE )
                    // InternalSTFunctionParser.g:3295:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3300:2: ( WORD )
                    {
                    // InternalSTFunctionParser.g:3300:2: ( WORD )
                    // InternalSTFunctionParser.g:3301:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3306:2: ( DWORD )
                    {
                    // InternalSTFunctionParser.g:3306:2: ( DWORD )
                    // InternalSTFunctionParser.g:3307:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3312:2: ( LWORD )
                    {
                    // InternalSTFunctionParser.g:3312:2: ( LWORD )
                    // InternalSTFunctionParser.g:3313:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBitType__Alternatives"


    // $ANTLR start "rule__STAnyNumType__Alternatives"
    // InternalSTFunctionParser.g:3322:1: rule__STAnyNumType__Alternatives : ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__STAnyNumType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3326:1: ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt23=10;
            switch ( input.LA(1) ) {
            case SINT:
                {
                alt23=1;
                }
                break;
            case INT:
                {
                alt23=2;
                }
                break;
            case DINT:
                {
                alt23=3;
                }
                break;
            case LINT:
                {
                alt23=4;
                }
                break;
            case USINT:
                {
                alt23=5;
                }
                break;
            case UINT:
                {
                alt23=6;
                }
                break;
            case UDINT:
                {
                alt23=7;
                }
                break;
            case ULINT:
                {
                alt23=8;
                }
                break;
            case REAL:
                {
                alt23=9;
                }
                break;
            case LREAL:
                {
                alt23=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSTFunctionParser.g:3327:2: ( SINT )
                    {
                    // InternalSTFunctionParser.g:3327:2: ( SINT )
                    // InternalSTFunctionParser.g:3328:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3333:2: ( INT )
                    {
                    // InternalSTFunctionParser.g:3333:2: ( INT )
                    // InternalSTFunctionParser.g:3334:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3339:2: ( DINT )
                    {
                    // InternalSTFunctionParser.g:3339:2: ( DINT )
                    // InternalSTFunctionParser.g:3340:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3345:2: ( LINT )
                    {
                    // InternalSTFunctionParser.g:3345:2: ( LINT )
                    // InternalSTFunctionParser.g:3346:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3351:2: ( USINT )
                    {
                    // InternalSTFunctionParser.g:3351:2: ( USINT )
                    // InternalSTFunctionParser.g:3352:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:3357:2: ( UINT )
                    {
                    // InternalSTFunctionParser.g:3357:2: ( UINT )
                    // InternalSTFunctionParser.g:3358:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:3363:2: ( UDINT )
                    {
                    // InternalSTFunctionParser.g:3363:2: ( UDINT )
                    // InternalSTFunctionParser.g:3364:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:3369:2: ( ULINT )
                    {
                    // InternalSTFunctionParser.g:3369:2: ( ULINT )
                    // InternalSTFunctionParser.g:3370:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:3375:2: ( REAL )
                    {
                    // InternalSTFunctionParser.g:3375:2: ( REAL )
                    // InternalSTFunctionParser.g:3376:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTFunctionParser.g:3381:2: ( LREAL )
                    {
                    // InternalSTFunctionParser.g:3381:2: ( LREAL )
                    // InternalSTFunctionParser.g:3382:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyNumType__Alternatives"


    // $ANTLR start "rule__STAnyDurationType__Alternatives"
    // InternalSTFunctionParser.g:3391:1: rule__STAnyDurationType__Alternatives : ( ( TIME ) | ( LTIME ) );
    public final void rule__STAnyDurationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3395:1: ( ( TIME ) | ( LTIME ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==TIME) ) {
                alt24=1;
            }
            else if ( (LA24_0==LTIME) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalSTFunctionParser.g:3396:2: ( TIME )
                    {
                    // InternalSTFunctionParser.g:3396:2: ( TIME )
                    // InternalSTFunctionParser.g:3397:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3402:2: ( LTIME )
                    {
                    // InternalSTFunctionParser.g:3402:2: ( LTIME )
                    // InternalSTFunctionParser.g:3403:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDurationType__Alternatives"


    // $ANTLR start "rule__STAnyDateType__Alternatives"
    // InternalSTFunctionParser.g:3412:1: rule__STAnyDateType__Alternatives : ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) );
    public final void rule__STAnyDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3416:1: ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt25=1;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt25=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt25=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSTFunctionParser.g:3417:2: ( ruleSTDateType )
                    {
                    // InternalSTFunctionParser.g:3417:2: ( ruleSTDateType )
                    // InternalSTFunctionParser.g:3418:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3423:2: ( ruleSTTimeOfDayType )
                    {
                    // InternalSTFunctionParser.g:3423:2: ( ruleSTTimeOfDayType )
                    // InternalSTFunctionParser.g:3424:3: ruleSTTimeOfDayType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3429:2: ( ruleSTDateAndTimeType )
                    {
                    // InternalSTFunctionParser.g:3429:2: ( ruleSTDateAndTimeType )
                    // InternalSTFunctionParser.g:3430:3: ruleSTDateAndTimeType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDateType__Alternatives"


    // $ANTLR start "rule__STDateType__Alternatives"
    // InternalSTFunctionParser.g:3439:1: rule__STDateType__Alternatives : ( ( DATE ) | ( LDATE ) );
    public final void rule__STDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3443:1: ( ( DATE ) | ( LDATE ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==DATE) ) {
                alt26=1;
            }
            else if ( (LA26_0==LDATE) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSTFunctionParser.g:3444:2: ( DATE )
                    {
                    // InternalSTFunctionParser.g:3444:2: ( DATE )
                    // InternalSTFunctionParser.g:3445:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3450:2: ( LDATE )
                    {
                    // InternalSTFunctionParser.g:3450:2: ( LDATE )
                    // InternalSTFunctionParser.g:3451:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateType__Alternatives"


    // $ANTLR start "rule__STTimeOfDayType__Alternatives"
    // InternalSTFunctionParser.g:3460:1: rule__STTimeOfDayType__Alternatives : ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__STTimeOfDayType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3464:1: ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt27=1;
                }
                break;
            case LTIME_OF_DAY:
                {
                alt27=2;
                }
                break;
            case TOD:
                {
                alt27=3;
                }
                break;
            case LTOD:
                {
                alt27=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSTFunctionParser.g:3465:2: ( TIME_OF_DAY )
                    {
                    // InternalSTFunctionParser.g:3465:2: ( TIME_OF_DAY )
                    // InternalSTFunctionParser.g:3466:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3471:2: ( LTIME_OF_DAY )
                    {
                    // InternalSTFunctionParser.g:3471:2: ( LTIME_OF_DAY )
                    // InternalSTFunctionParser.g:3472:3: LTIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }
                    match(input,LTIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3477:2: ( TOD )
                    {
                    // InternalSTFunctionParser.g:3477:2: ( TOD )
                    // InternalSTFunctionParser.g:3478:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3483:2: ( LTOD )
                    {
                    // InternalSTFunctionParser.g:3483:2: ( LTOD )
                    // InternalSTFunctionParser.g:3484:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayType__Alternatives"


    // $ANTLR start "rule__STDateAndTimeType__Alternatives"
    // InternalSTFunctionParser.g:3493:1: rule__STDateAndTimeType__Alternatives : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__STDateAndTimeType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3497:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt28=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt28=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt28=2;
                }
                break;
            case DT:
                {
                alt28=3;
                }
                break;
            case LDT:
                {
                alt28=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSTFunctionParser.g:3498:2: ( DATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:3498:2: ( DATE_AND_TIME )
                    // InternalSTFunctionParser.g:3499:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3504:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:3504:2: ( LDATE_AND_TIME )
                    // InternalSTFunctionParser.g:3505:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3510:2: ( DT )
                    {
                    // InternalSTFunctionParser.g:3510:2: ( DT )
                    // InternalSTFunctionParser.g:3511:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3516:2: ( LDT )
                    {
                    // InternalSTFunctionParser.g:3516:2: ( LDT )
                    // InternalSTFunctionParser.g:3517:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeType__Alternatives"


    // $ANTLR start "rule__STAnyCharsType__Alternatives"
    // InternalSTFunctionParser.g:3526:1: rule__STAnyCharsType__Alternatives : ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STAnyCharsType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3530:1: ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt29=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt29=1;
                }
                break;
            case WSTRING:
                {
                alt29=2;
                }
                break;
            case CHAR:
                {
                alt29=3;
                }
                break;
            case WCHAR:
                {
                alt29=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSTFunctionParser.g:3531:2: ( STRING )
                    {
                    // InternalSTFunctionParser.g:3531:2: ( STRING )
                    // InternalSTFunctionParser.g:3532:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3537:2: ( WSTRING )
                    {
                    // InternalSTFunctionParser.g:3537:2: ( WSTRING )
                    // InternalSTFunctionParser.g:3538:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3543:2: ( CHAR )
                    {
                    // InternalSTFunctionParser.g:3543:2: ( CHAR )
                    // InternalSTFunctionParser.g:3544:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3549:2: ( WCHAR )
                    {
                    // InternalSTFunctionParser.g:3549:2: ( WCHAR )
                    // InternalSTFunctionParser.g:3550:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyCharsType__Alternatives"


    // $ANTLR start "rule__Numeric__Alternatives"
    // InternalSTFunctionParser.g:3559:1: rule__Numeric__Alternatives : ( ( TRUE ) | ( FALSE ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) );
    public final void rule__Numeric__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3563:1: ( ( TRUE ) | ( FALSE ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) )
            int alt30=4;
            switch ( input.LA(1) ) {
            case TRUE:
                {
                alt30=1;
                }
                break;
            case FALSE:
                {
                alt30=2;
                }
                break;
            case RULE_INT:
                {
                alt30=3;
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt30=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSTFunctionParser.g:3564:2: ( TRUE )
                    {
                    // InternalSTFunctionParser.g:3564:2: ( TRUE )
                    // InternalSTFunctionParser.g:3565:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3570:2: ( FALSE )
                    {
                    // InternalSTFunctionParser.g:3570:2: ( FALSE )
                    // InternalSTFunctionParser.g:3571:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3576:2: ( ruleNumber )
                    {
                    // InternalSTFunctionParser.g:3576:2: ( ruleNumber )
                    // InternalSTFunctionParser.g:3577:3: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getNumberParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getNumberParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3582:2: ( RULE_NON_DECIMAL )
                    {
                    // InternalSTFunctionParser.g:3582:2: ( RULE_NON_DECIMAL )
                    // InternalSTFunctionParser.g:3583:3: RULE_NON_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getNON_DECIMALTerminalRuleCall_3()); 
                    }
                    match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getNON_DECIMALTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Numeric__Alternatives"


    // $ANTLR start "rule__Number__Alternatives_1_1"
    // InternalSTFunctionParser.g:3592:1: rule__Number__Alternatives_1_1 : ( ( RULE_INT ) | ( RULE_DECIMAL ) );
    public final void rule__Number__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3596:1: ( ( RULE_INT ) | ( RULE_DECIMAL ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_INT) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_DECIMAL) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSTFunctionParser.g:3597:2: ( RULE_INT )
                    {
                    // InternalSTFunctionParser.g:3597:2: ( RULE_INT )
                    // InternalSTFunctionParser.g:3598:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3603:2: ( RULE_DECIMAL )
                    {
                    // InternalSTFunctionParser.g:3603:2: ( RULE_DECIMAL )
                    // InternalSTFunctionParser.g:3604:3: RULE_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_1_1"


    // $ANTLR start "rule__SignedNumber__Alternatives_0"
    // InternalSTFunctionParser.g:3613:1: rule__SignedNumber__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__SignedNumber__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3617:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==PlusSign) ) {
                alt32=1;
            }
            else if ( (LA32_0==HyphenMinus) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSTFunctionParser.g:3618:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:3618:2: ( PlusSign )
                    // InternalSTFunctionParser.g:3619:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedNumberAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedNumberAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3624:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:3624:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:3625:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Alternatives_0"


    // $ANTLR start "rule__SignedNumber__Alternatives_2_1"
    // InternalSTFunctionParser.g:3634:1: rule__SignedNumber__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_DECIMAL ) );
    public final void rule__SignedNumber__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3638:1: ( ( RULE_INT ) | ( RULE_DECIMAL ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_INT) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_DECIMAL) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSTFunctionParser.g:3639:2: ( RULE_INT )
                    {
                    // InternalSTFunctionParser.g:3639:2: ( RULE_INT )
                    // InternalSTFunctionParser.g:3640:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedNumberAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedNumberAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3645:2: ( RULE_DECIMAL )
                    {
                    // InternalSTFunctionParser.g:3645:2: ( RULE_DECIMAL )
                    // InternalSTFunctionParser.g:3646:3: RULE_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedNumberAccess().getDECIMALTerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedNumberAccess().getDECIMALTerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Alternatives_2_1"


    // $ANTLR start "rule__Time__Alternatives_0"
    // InternalSTFunctionParser.g:3655:1: rule__Time__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Time__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3659:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==PlusSign) ) {
                alt34=1;
            }
            else if ( (LA34_0==HyphenMinus) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSTFunctionParser.g:3660:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:3660:2: ( PlusSign )
                    // InternalSTFunctionParser.g:3661:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3666:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:3666:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:3667:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Alternatives_0"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTFunctionParser.g:3676:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3680:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==AND) ) {
                alt35=1;
            }
            else if ( (LA35_0==Ampersand) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSTFunctionParser.g:3681:2: ( ( AND ) )
                    {
                    // InternalSTFunctionParser.g:3681:2: ( ( AND ) )
                    // InternalSTFunctionParser.g:3682:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3683:3: ( AND )
                    // InternalSTFunctionParser.g:3683:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3687:2: ( ( Ampersand ) )
                    {
                    // InternalSTFunctionParser.g:3687:2: ( ( Ampersand ) )
                    // InternalSTFunctionParser.g:3688:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3689:3: ( Ampersand )
                    // InternalSTFunctionParser.g:3689:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTFunctionParser.g:3697:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3701:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==EqualsSign) ) {
                alt36=1;
            }
            else if ( (LA36_0==LessThanSignGreaterThanSign) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSTFunctionParser.g:3702:2: ( ( EqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:3702:2: ( ( EqualsSign ) )
                    // InternalSTFunctionParser.g:3703:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3704:3: ( EqualsSign )
                    // InternalSTFunctionParser.g:3704:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3708:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTFunctionParser.g:3708:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTFunctionParser.g:3709:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3710:3: ( LessThanSignGreaterThanSign )
                    // InternalSTFunctionParser.g:3710:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTFunctionParser.g:3718:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3722:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt37=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt37=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt37=2;
                }
                break;
            case GreaterThanSign:
                {
                alt37=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt37=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalSTFunctionParser.g:3723:2: ( ( LessThanSign ) )
                    {
                    // InternalSTFunctionParser.g:3723:2: ( ( LessThanSign ) )
                    // InternalSTFunctionParser.g:3724:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3725:3: ( LessThanSign )
                    // InternalSTFunctionParser.g:3725:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3729:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:3729:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTFunctionParser.g:3730:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3731:3: ( LessThanSignEqualsSign )
                    // InternalSTFunctionParser.g:3731:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3735:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTFunctionParser.g:3735:2: ( ( GreaterThanSign ) )
                    // InternalSTFunctionParser.g:3736:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:3737:3: ( GreaterThanSign )
                    // InternalSTFunctionParser.g:3737:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3741:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:3741:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTFunctionParser.g:3742:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:3743:3: ( GreaterThanSignEqualsSign )
                    // InternalSTFunctionParser.g:3743:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTFunctionParser.g:3751:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3755:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==PlusSign) ) {
                alt38=1;
            }
            else if ( (LA38_0==HyphenMinus) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSTFunctionParser.g:3756:2: ( ( PlusSign ) )
                    {
                    // InternalSTFunctionParser.g:3756:2: ( ( PlusSign ) )
                    // InternalSTFunctionParser.g:3757:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3758:3: ( PlusSign )
                    // InternalSTFunctionParser.g:3758:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3762:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTFunctionParser.g:3762:2: ( ( HyphenMinus ) )
                    // InternalSTFunctionParser.g:3763:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3764:3: ( HyphenMinus )
                    // InternalSTFunctionParser.g:3764:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTFunctionParser.g:3772:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3776:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt39=1;
                }
                break;
            case Solidus:
                {
                alt39=2;
                }
                break;
            case MOD:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalSTFunctionParser.g:3777:2: ( ( Asterisk ) )
                    {
                    // InternalSTFunctionParser.g:3777:2: ( ( Asterisk ) )
                    // InternalSTFunctionParser.g:3778:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3779:3: ( Asterisk )
                    // InternalSTFunctionParser.g:3779:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3783:2: ( ( Solidus ) )
                    {
                    // InternalSTFunctionParser.g:3783:2: ( ( Solidus ) )
                    // InternalSTFunctionParser.g:3784:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3785:3: ( Solidus )
                    // InternalSTFunctionParser.g:3785:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3789:2: ( ( MOD ) )
                    {
                    // InternalSTFunctionParser.g:3789:2: ( ( MOD ) )
                    // InternalSTFunctionParser.g:3790:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:3791:3: ( MOD )
                    // InternalSTFunctionParser.g:3791:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTFunctionParser.g:3799:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3803:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt40=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt40=1;
                }
                break;
            case PlusSign:
                {
                alt40=2;
                }
                break;
            case NOT:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalSTFunctionParser.g:3804:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTFunctionParser.g:3804:2: ( ( HyphenMinus ) )
                    // InternalSTFunctionParser.g:3805:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3806:3: ( HyphenMinus )
                    // InternalSTFunctionParser.g:3806:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3810:2: ( ( PlusSign ) )
                    {
                    // InternalSTFunctionParser.g:3810:2: ( ( PlusSign ) )
                    // InternalSTFunctionParser.g:3811:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3812:3: ( PlusSign )
                    // InternalSTFunctionParser.g:3812:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3816:2: ( ( NOT ) )
                    {
                    // InternalSTFunctionParser.g:3816:2: ( ( NOT ) )
                    // InternalSTFunctionParser.g:3817:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:3818:3: ( NOT )
                    // InternalSTFunctionParser.g:3818:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__STMultiBitAccessSpecifier__Alternatives"
    // InternalSTFunctionParser.g:3826:1: rule__STMultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) );
    public final void rule__STMultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3830:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) )
            int alt41=5;
            switch ( input.LA(1) ) {
            case L:
                {
                alt41=1;
                }
                break;
            case D_1:
                {
                alt41=2;
                }
                break;
            case W:
                {
                alt41=3;
                }
                break;
            case B:
                {
                alt41=4;
                }
                break;
            case X:
                {
                alt41=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalSTFunctionParser.g:3831:2: ( ( L ) )
                    {
                    // InternalSTFunctionParser.g:3831:2: ( ( L ) )
                    // InternalSTFunctionParser.g:3832:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3833:3: ( L )
                    // InternalSTFunctionParser.g:3833:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3837:2: ( ( D_1 ) )
                    {
                    // InternalSTFunctionParser.g:3837:2: ( ( D_1 ) )
                    // InternalSTFunctionParser.g:3838:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3839:3: ( D_1 )
                    // InternalSTFunctionParser.g:3839:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3843:2: ( ( W ) )
                    {
                    // InternalSTFunctionParser.g:3843:2: ( ( W ) )
                    // InternalSTFunctionParser.g:3844:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:3845:3: ( W )
                    // InternalSTFunctionParser.g:3845:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3849:2: ( ( B ) )
                    {
                    // InternalSTFunctionParser.g:3849:2: ( ( B ) )
                    // InternalSTFunctionParser.g:3850:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:3851:3: ( B )
                    // InternalSTFunctionParser.g:3851:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3855:2: ( ( X ) )
                    {
                    // InternalSTFunctionParser.g:3855:2: ( ( X ) )
                    // InternalSTFunctionParser.g:3856:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTFunctionParser.g:3857:3: ( X )
                    // InternalSTFunctionParser.g:3857:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__STFunctionSource__Group__0"
    // InternalSTFunctionParser.g:3865:1: rule__STFunctionSource__Group__0 : rule__STFunctionSource__Group__0__Impl rule__STFunctionSource__Group__1 ;
    public final void rule__STFunctionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3869:1: ( rule__STFunctionSource__Group__0__Impl rule__STFunctionSource__Group__1 )
            // InternalSTFunctionParser.g:3870:2: rule__STFunctionSource__Group__0__Impl rule__STFunctionSource__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__STFunctionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__0"


    // $ANTLR start "rule__STFunctionSource__Group__0__Impl"
    // InternalSTFunctionParser.g:3877:1: rule__STFunctionSource__Group__0__Impl : ( () ) ;
    public final void rule__STFunctionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3881:1: ( ( () ) )
            // InternalSTFunctionParser.g:3882:1: ( () )
            {
            // InternalSTFunctionParser.g:3882:1: ( () )
            // InternalSTFunctionParser.g:3883:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getSTFunctionSourceAction_0()); 
            }
            // InternalSTFunctionParser.g:3884:2: ()
            // InternalSTFunctionParser.g:3884:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getSTFunctionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__0__Impl"


    // $ANTLR start "rule__STFunctionSource__Group__1"
    // InternalSTFunctionParser.g:3892:1: rule__STFunctionSource__Group__1 : rule__STFunctionSource__Group__1__Impl rule__STFunctionSource__Group__2 ;
    public final void rule__STFunctionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3896:1: ( rule__STFunctionSource__Group__1__Impl rule__STFunctionSource__Group__2 )
            // InternalSTFunctionParser.g:3897:2: rule__STFunctionSource__Group__1__Impl rule__STFunctionSource__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__STFunctionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__1"


    // $ANTLR start "rule__STFunctionSource__Group__1__Impl"
    // InternalSTFunctionParser.g:3904:1: rule__STFunctionSource__Group__1__Impl : ( ( rule__STFunctionSource__Group_1__0 )? ) ;
    public final void rule__STFunctionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3908:1: ( ( ( rule__STFunctionSource__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:3909:1: ( ( rule__STFunctionSource__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:3909:1: ( ( rule__STFunctionSource__Group_1__0 )? )
            // InternalSTFunctionParser.g:3910:2: ( rule__STFunctionSource__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:3911:2: ( rule__STFunctionSource__Group_1__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==PACKAGE) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSTFunctionParser.g:3911:3: rule__STFunctionSource__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFunctionSource__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__1__Impl"


    // $ANTLR start "rule__STFunctionSource__Group__2"
    // InternalSTFunctionParser.g:3919:1: rule__STFunctionSource__Group__2 : rule__STFunctionSource__Group__2__Impl rule__STFunctionSource__Group__3 ;
    public final void rule__STFunctionSource__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3923:1: ( rule__STFunctionSource__Group__2__Impl rule__STFunctionSource__Group__3 )
            // InternalSTFunctionParser.g:3924:2: rule__STFunctionSource__Group__2__Impl rule__STFunctionSource__Group__3
            {
            pushFollow(FOLLOW_3);
            rule__STFunctionSource__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__2"


    // $ANTLR start "rule__STFunctionSource__Group__2__Impl"
    // InternalSTFunctionParser.g:3931:1: rule__STFunctionSource__Group__2__Impl : ( ( rule__STFunctionSource__ImportsAssignment_2 )* ) ;
    public final void rule__STFunctionSource__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3935:1: ( ( ( rule__STFunctionSource__ImportsAssignment_2 )* ) )
            // InternalSTFunctionParser.g:3936:1: ( ( rule__STFunctionSource__ImportsAssignment_2 )* )
            {
            // InternalSTFunctionParser.g:3936:1: ( ( rule__STFunctionSource__ImportsAssignment_2 )* )
            // InternalSTFunctionParser.g:3937:2: ( rule__STFunctionSource__ImportsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getImportsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3938:2: ( rule__STFunctionSource__ImportsAssignment_2 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==IMPORT) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3938:3: rule__STFunctionSource__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__STFunctionSource__ImportsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getImportsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__2__Impl"


    // $ANTLR start "rule__STFunctionSource__Group__3"
    // InternalSTFunctionParser.g:3946:1: rule__STFunctionSource__Group__3 : rule__STFunctionSource__Group__3__Impl ;
    public final void rule__STFunctionSource__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3950:1: ( rule__STFunctionSource__Group__3__Impl )
            // InternalSTFunctionParser.g:3951:2: rule__STFunctionSource__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__3"


    // $ANTLR start "rule__STFunctionSource__Group__3__Impl"
    // InternalSTFunctionParser.g:3957:1: rule__STFunctionSource__Group__3__Impl : ( ( rule__STFunctionSource__FunctionsAssignment_3 )* ) ;
    public final void rule__STFunctionSource__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3961:1: ( ( ( rule__STFunctionSource__FunctionsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:3962:1: ( ( rule__STFunctionSource__FunctionsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:3962:1: ( ( rule__STFunctionSource__FunctionsAssignment_3 )* )
            // InternalSTFunctionParser.g:3963:2: ( rule__STFunctionSource__FunctionsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getFunctionsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:3964:2: ( rule__STFunctionSource__FunctionsAssignment_3 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==FUNCTION) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3964:3: rule__STFunctionSource__FunctionsAssignment_3
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__STFunctionSource__FunctionsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getFunctionsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group__3__Impl"


    // $ANTLR start "rule__STFunctionSource__Group_1__0"
    // InternalSTFunctionParser.g:3973:1: rule__STFunctionSource__Group_1__0 : rule__STFunctionSource__Group_1__0__Impl rule__STFunctionSource__Group_1__1 ;
    public final void rule__STFunctionSource__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3977:1: ( rule__STFunctionSource__Group_1__0__Impl rule__STFunctionSource__Group_1__1 )
            // InternalSTFunctionParser.g:3978:2: rule__STFunctionSource__Group_1__0__Impl rule__STFunctionSource__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__STFunctionSource__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group_1__0"


    // $ANTLR start "rule__STFunctionSource__Group_1__0__Impl"
    // InternalSTFunctionParser.g:3985:1: rule__STFunctionSource__Group_1__0__Impl : ( PACKAGE ) ;
    public final void rule__STFunctionSource__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3989:1: ( ( PACKAGE ) )
            // InternalSTFunctionParser.g:3990:1: ( PACKAGE )
            {
            // InternalSTFunctionParser.g:3990:1: ( PACKAGE )
            // InternalSTFunctionParser.g:3991:2: PACKAGE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getPACKAGEKeyword_1_0()); 
            }
            match(input,PACKAGE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getPACKAGEKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group_1__0__Impl"


    // $ANTLR start "rule__STFunctionSource__Group_1__1"
    // InternalSTFunctionParser.g:4000:1: rule__STFunctionSource__Group_1__1 : rule__STFunctionSource__Group_1__1__Impl rule__STFunctionSource__Group_1__2 ;
    public final void rule__STFunctionSource__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4004:1: ( rule__STFunctionSource__Group_1__1__Impl rule__STFunctionSource__Group_1__2 )
            // InternalSTFunctionParser.g:4005:2: rule__STFunctionSource__Group_1__1__Impl rule__STFunctionSource__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__STFunctionSource__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group_1__1"


    // $ANTLR start "rule__STFunctionSource__Group_1__1__Impl"
    // InternalSTFunctionParser.g:4012:1: rule__STFunctionSource__Group_1__1__Impl : ( ( rule__STFunctionSource__NameAssignment_1_1 ) ) ;
    public final void rule__STFunctionSource__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4016:1: ( ( ( rule__STFunctionSource__NameAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:4017:1: ( ( rule__STFunctionSource__NameAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:4017:1: ( ( rule__STFunctionSource__NameAssignment_1_1 ) )
            // InternalSTFunctionParser.g:4018:2: ( rule__STFunctionSource__NameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getNameAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:4019:2: ( rule__STFunctionSource__NameAssignment_1_1 )
            // InternalSTFunctionParser.g:4019:3: rule__STFunctionSource__NameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__NameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group_1__1__Impl"


    // $ANTLR start "rule__STFunctionSource__Group_1__2"
    // InternalSTFunctionParser.g:4027:1: rule__STFunctionSource__Group_1__2 : rule__STFunctionSource__Group_1__2__Impl ;
    public final void rule__STFunctionSource__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4031:1: ( rule__STFunctionSource__Group_1__2__Impl )
            // InternalSTFunctionParser.g:4032:2: rule__STFunctionSource__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFunctionSource__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group_1__2"


    // $ANTLR start "rule__STFunctionSource__Group_1__2__Impl"
    // InternalSTFunctionParser.g:4038:1: rule__STFunctionSource__Group_1__2__Impl : ( Semicolon ) ;
    public final void rule__STFunctionSource__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4042:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4043:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4043:1: ( Semicolon )
            // InternalSTFunctionParser.g:4044:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getSemicolonKeyword_1_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getSemicolonKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__Group_1__2__Impl"


    // $ANTLR start "rule__STFunction__Group__0"
    // InternalSTFunctionParser.g:4054:1: rule__STFunction__Group__0 : rule__STFunction__Group__0__Impl rule__STFunction__Group__1 ;
    public final void rule__STFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4058:1: ( rule__STFunction__Group__0__Impl rule__STFunction__Group__1 )
            // InternalSTFunctionParser.g:4059:2: rule__STFunction__Group__0__Impl rule__STFunction__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__STFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__0"


    // $ANTLR start "rule__STFunction__Group__0__Impl"
    // InternalSTFunctionParser.g:4066:1: rule__STFunction__Group__0__Impl : ( () ) ;
    public final void rule__STFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4070:1: ( ( () ) )
            // InternalSTFunctionParser.g:4071:1: ( () )
            {
            // InternalSTFunctionParser.g:4071:1: ( () )
            // InternalSTFunctionParser.g:4072:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getSTFunctionAction_0()); 
            }
            // InternalSTFunctionParser.g:4073:2: ()
            // InternalSTFunctionParser.g:4073:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getSTFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__0__Impl"


    // $ANTLR start "rule__STFunction__Group__1"
    // InternalSTFunctionParser.g:4081:1: rule__STFunction__Group__1 : rule__STFunction__Group__1__Impl rule__STFunction__Group__2 ;
    public final void rule__STFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4085:1: ( rule__STFunction__Group__1__Impl rule__STFunction__Group__2 )
            // InternalSTFunctionParser.g:4086:2: rule__STFunction__Group__1__Impl rule__STFunction__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__STFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__1"


    // $ANTLR start "rule__STFunction__Group__1__Impl"
    // InternalSTFunctionParser.g:4093:1: rule__STFunction__Group__1__Impl : ( FUNCTION ) ;
    public final void rule__STFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4097:1: ( ( FUNCTION ) )
            // InternalSTFunctionParser.g:4098:1: ( FUNCTION )
            {
            // InternalSTFunctionParser.g:4098:1: ( FUNCTION )
            // InternalSTFunctionParser.g:4099:2: FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFUNCTIONKeyword_1()); 
            }
            match(input,FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFUNCTIONKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__1__Impl"


    // $ANTLR start "rule__STFunction__Group__2"
    // InternalSTFunctionParser.g:4108:1: rule__STFunction__Group__2 : rule__STFunction__Group__2__Impl rule__STFunction__Group__3 ;
    public final void rule__STFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4112:1: ( rule__STFunction__Group__2__Impl rule__STFunction__Group__3 )
            // InternalSTFunctionParser.g:4113:2: rule__STFunction__Group__2__Impl rule__STFunction__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__STFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__2"


    // $ANTLR start "rule__STFunction__Group__2__Impl"
    // InternalSTFunctionParser.g:4120:1: rule__STFunction__Group__2__Impl : ( ( rule__STFunction__NameAssignment_2 ) ) ;
    public final void rule__STFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4124:1: ( ( ( rule__STFunction__NameAssignment_2 ) ) )
            // InternalSTFunctionParser.g:4125:1: ( ( rule__STFunction__NameAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:4125:1: ( ( rule__STFunction__NameAssignment_2 ) )
            // InternalSTFunctionParser.g:4126:2: ( rule__STFunction__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getNameAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4127:2: ( rule__STFunction__NameAssignment_2 )
            // InternalSTFunctionParser.g:4127:3: rule__STFunction__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STFunction__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__2__Impl"


    // $ANTLR start "rule__STFunction__Group__3"
    // InternalSTFunctionParser.g:4135:1: rule__STFunction__Group__3 : rule__STFunction__Group__3__Impl rule__STFunction__Group__4 ;
    public final void rule__STFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4139:1: ( rule__STFunction__Group__3__Impl rule__STFunction__Group__4 )
            // InternalSTFunctionParser.g:4140:2: rule__STFunction__Group__3__Impl rule__STFunction__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__STFunction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__3"


    // $ANTLR start "rule__STFunction__Group__3__Impl"
    // InternalSTFunctionParser.g:4147:1: rule__STFunction__Group__3__Impl : ( ( rule__STFunction__Group_3__0 )? ) ;
    public final void rule__STFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4151:1: ( ( ( rule__STFunction__Group_3__0 )? ) )
            // InternalSTFunctionParser.g:4152:1: ( ( rule__STFunction__Group_3__0 )? )
            {
            // InternalSTFunctionParser.g:4152:1: ( ( rule__STFunction__Group_3__0 )? )
            // InternalSTFunctionParser.g:4153:2: ( rule__STFunction__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:4154:2: ( rule__STFunction__Group_3__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==Colon) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSTFunctionParser.g:4154:3: rule__STFunction__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFunction__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__3__Impl"


    // $ANTLR start "rule__STFunction__Group__4"
    // InternalSTFunctionParser.g:4162:1: rule__STFunction__Group__4 : rule__STFunction__Group__4__Impl rule__STFunction__Group__5 ;
    public final void rule__STFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4166:1: ( rule__STFunction__Group__4__Impl rule__STFunction__Group__5 )
            // InternalSTFunctionParser.g:4167:2: rule__STFunction__Group__4__Impl rule__STFunction__Group__5
            {
            pushFollow(FOLLOW_9);
            rule__STFunction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__4"


    // $ANTLR start "rule__STFunction__Group__4__Impl"
    // InternalSTFunctionParser.g:4174:1: rule__STFunction__Group__4__Impl : ( ( rule__STFunction__VarDeclarationsAssignment_4 )* ) ;
    public final void rule__STFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4178:1: ( ( ( rule__STFunction__VarDeclarationsAssignment_4 )* ) )
            // InternalSTFunctionParser.g:4179:1: ( ( rule__STFunction__VarDeclarationsAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:4179:1: ( ( rule__STFunction__VarDeclarationsAssignment_4 )* )
            // InternalSTFunctionParser.g:4180:2: ( rule__STFunction__VarDeclarationsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getVarDeclarationsAssignment_4()); 
            }
            // InternalSTFunctionParser.g:4181:2: ( rule__STFunction__VarDeclarationsAssignment_4 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( ((LA46_0>=VAR_IN_OUT && LA46_0<=VAR_OUTPUT)||LA46_0==VAR_INPUT||LA46_0==VAR_TEMP||LA46_0==VAR) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4181:3: rule__STFunction__VarDeclarationsAssignment_4
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STFunction__VarDeclarationsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getVarDeclarationsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__4__Impl"


    // $ANTLR start "rule__STFunction__Group__5"
    // InternalSTFunctionParser.g:4189:1: rule__STFunction__Group__5 : rule__STFunction__Group__5__Impl rule__STFunction__Group__6 ;
    public final void rule__STFunction__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4193:1: ( rule__STFunction__Group__5__Impl rule__STFunction__Group__6 )
            // InternalSTFunctionParser.g:4194:2: rule__STFunction__Group__5__Impl rule__STFunction__Group__6
            {
            pushFollow(FOLLOW_9);
            rule__STFunction__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__5"


    // $ANTLR start "rule__STFunction__Group__5__Impl"
    // InternalSTFunctionParser.g:4201:1: rule__STFunction__Group__5__Impl : ( ( rule__STFunction__CodeAssignment_5 )* ) ;
    public final void rule__STFunction__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4205:1: ( ( ( rule__STFunction__CodeAssignment_5 )* ) )
            // InternalSTFunctionParser.g:4206:1: ( ( rule__STFunction__CodeAssignment_5 )* )
            {
            // InternalSTFunctionParser.g:4206:1: ( ( rule__STFunction__CodeAssignment_5 )* )
            // InternalSTFunctionParser.g:4207:2: ( rule__STFunction__CodeAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getCodeAssignment_5()); 
            }
            // InternalSTFunctionParser.g:4208:2: ( rule__STFunction__CodeAssignment_5 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==LDATE_AND_TIME||LA47_0==DATE_AND_TIME||LA47_0==LTIME_OF_DAY||LA47_0==TIME_OF_DAY||LA47_0==CONTINUE||LA47_0==WSTRING||LA47_0==REPEAT||LA47_0==RETURN||LA47_0==STRING||LA47_0==DWORD||LA47_0==FALSE||(LA47_0>=LDATE && LA47_0<=LWORD)||(LA47_0>=UDINT && LA47_0<=ULINT)||(LA47_0>=USINT && LA47_0<=DINT)||LA47_0==EXIT||(LA47_0>=LINT && LA47_0<=LTOD)||(LA47_0>=REAL && LA47_0<=SINT)||(LA47_0>=THIS && LA47_0<=TRUE)||LA47_0==UINT||LA47_0==WORD||(LA47_0>=AND && LA47_0<=NOT)||LA47_0==TOD||LA47_0==XOR||(LA47_0>=DT && LA47_0<=LT)||LA47_0==OR||LA47_0==LeftParenthesis||LA47_0==PlusSign||LA47_0==HyphenMinus||LA47_0==Semicolon||(LA47_0>=D && LA47_0<=T)||(LA47_0>=RULE_NON_DECIMAL && LA47_0<=RULE_INT)||(LA47_0>=RULE_ID && LA47_0<=RULE_STRING)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4208:3: rule__STFunction__CodeAssignment_5
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STFunction__CodeAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getCodeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__5__Impl"


    // $ANTLR start "rule__STFunction__Group__6"
    // InternalSTFunctionParser.g:4216:1: rule__STFunction__Group__6 : rule__STFunction__Group__6__Impl ;
    public final void rule__STFunction__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4220:1: ( rule__STFunction__Group__6__Impl )
            // InternalSTFunctionParser.g:4221:2: rule__STFunction__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFunction__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__6"


    // $ANTLR start "rule__STFunction__Group__6__Impl"
    // InternalSTFunctionParser.g:4227:1: rule__STFunction__Group__6__Impl : ( END_FUNCTION ) ;
    public final void rule__STFunction__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4231:1: ( ( END_FUNCTION ) )
            // InternalSTFunctionParser.g:4232:1: ( END_FUNCTION )
            {
            // InternalSTFunctionParser.g:4232:1: ( END_FUNCTION )
            // InternalSTFunctionParser.g:4233:2: END_FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getEND_FUNCTIONKeyword_6()); 
            }
            match(input,END_FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getEND_FUNCTIONKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group__6__Impl"


    // $ANTLR start "rule__STFunction__Group_3__0"
    // InternalSTFunctionParser.g:4243:1: rule__STFunction__Group_3__0 : rule__STFunction__Group_3__0__Impl rule__STFunction__Group_3__1 ;
    public final void rule__STFunction__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4247:1: ( rule__STFunction__Group_3__0__Impl rule__STFunction__Group_3__1 )
            // InternalSTFunctionParser.g:4248:2: rule__STFunction__Group_3__0__Impl rule__STFunction__Group_3__1
            {
            pushFollow(FOLLOW_12);
            rule__STFunction__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFunction__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group_3__0"


    // $ANTLR start "rule__STFunction__Group_3__0__Impl"
    // InternalSTFunctionParser.g:4255:1: rule__STFunction__Group_3__0__Impl : ( Colon ) ;
    public final void rule__STFunction__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4259:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:4260:1: ( Colon )
            {
            // InternalSTFunctionParser.g:4260:1: ( Colon )
            // InternalSTFunctionParser.g:4261:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getColonKeyword_3_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getColonKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group_3__0__Impl"


    // $ANTLR start "rule__STFunction__Group_3__1"
    // InternalSTFunctionParser.g:4270:1: rule__STFunction__Group_3__1 : rule__STFunction__Group_3__1__Impl ;
    public final void rule__STFunction__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4274:1: ( rule__STFunction__Group_3__1__Impl )
            // InternalSTFunctionParser.g:4275:2: rule__STFunction__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFunction__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group_3__1"


    // $ANTLR start "rule__STFunction__Group_3__1__Impl"
    // InternalSTFunctionParser.g:4281:1: rule__STFunction__Group_3__1__Impl : ( ( rule__STFunction__ReturnTypeAssignment_3_1 ) ) ;
    public final void rule__STFunction__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4285:1: ( ( ( rule__STFunction__ReturnTypeAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:4286:1: ( ( rule__STFunction__ReturnTypeAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:4286:1: ( ( rule__STFunction__ReturnTypeAssignment_3_1 ) )
            // InternalSTFunctionParser.g:4287:2: ( rule__STFunction__ReturnTypeAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getReturnTypeAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:4288:2: ( rule__STFunction__ReturnTypeAssignment_3_1 )
            // InternalSTFunctionParser.g:4288:3: rule__STFunction__ReturnTypeAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STFunction__ReturnTypeAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getReturnTypeAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__Group_3__1__Impl"


    // $ANTLR start "rule__STExpressionSource__Group__0"
    // InternalSTFunctionParser.g:4297:1: rule__STExpressionSource__Group__0 : rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1 ;
    public final void rule__STExpressionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4301:1: ( rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1 )
            // InternalSTFunctionParser.g:4302:2: rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__STExpressionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__0"


    // $ANTLR start "rule__STExpressionSource__Group__0__Impl"
    // InternalSTFunctionParser.g:4309:1: rule__STExpressionSource__Group__0__Impl : ( () ) ;
    public final void rule__STExpressionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4313:1: ( ( () ) )
            // InternalSTFunctionParser.g:4314:1: ( () )
            {
            // InternalSTFunctionParser.g:4314:1: ( () )
            // InternalSTFunctionParser.g:4315:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getSTExpressionSourceAction_0()); 
            }
            // InternalSTFunctionParser.g:4316:2: ()
            // InternalSTFunctionParser.g:4316:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getSTExpressionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__0__Impl"


    // $ANTLR start "rule__STExpressionSource__Group__1"
    // InternalSTFunctionParser.g:4324:1: rule__STExpressionSource__Group__1 : rule__STExpressionSource__Group__1__Impl ;
    public final void rule__STExpressionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4328:1: ( rule__STExpressionSource__Group__1__Impl )
            // InternalSTFunctionParser.g:4329:2: rule__STExpressionSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__1"


    // $ANTLR start "rule__STExpressionSource__Group__1__Impl"
    // InternalSTFunctionParser.g:4335:1: rule__STExpressionSource__Group__1__Impl : ( ( rule__STExpressionSource__ExpressionAssignment_1 )? ) ;
    public final void rule__STExpressionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4339:1: ( ( ( rule__STExpressionSource__ExpressionAssignment_1 )? ) )
            // InternalSTFunctionParser.g:4340:1: ( ( rule__STExpressionSource__ExpressionAssignment_1 )? )
            {
            // InternalSTFunctionParser.g:4340:1: ( ( rule__STExpressionSource__ExpressionAssignment_1 )? )
            // InternalSTFunctionParser.g:4341:2: ( rule__STExpressionSource__ExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getExpressionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4342:2: ( rule__STExpressionSource__ExpressionAssignment_1 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==LDATE_AND_TIME||LA48_0==DATE_AND_TIME||LA48_0==LTIME_OF_DAY||LA48_0==TIME_OF_DAY||LA48_0==WSTRING||LA48_0==STRING||LA48_0==DWORD||LA48_0==FALSE||(LA48_0>=LDATE && LA48_0<=LWORD)||(LA48_0>=UDINT && LA48_0<=ULINT)||(LA48_0>=USINT && LA48_0<=WCHAR)||(LA48_0>=BOOL && LA48_0<=BYTE)||(LA48_0>=CHAR && LA48_0<=DINT)||(LA48_0>=LINT && LA48_0<=LTOD)||(LA48_0>=REAL && LA48_0<=SINT)||(LA48_0>=THIS && LA48_0<=TRUE)||LA48_0==UINT||LA48_0==WORD||LA48_0==AND||(LA48_0>=INT && LA48_0<=NOT)||LA48_0==TOD||LA48_0==XOR||LA48_0==DT||(LA48_0>=LD && LA48_0<=LT)||LA48_0==OR||LA48_0==LeftParenthesis||LA48_0==PlusSign||LA48_0==HyphenMinus||(LA48_0>=D && LA48_0<=T)||(LA48_0>=RULE_NON_DECIMAL && LA48_0<=RULE_INT)||(LA48_0>=RULE_ID && LA48_0<=RULE_STRING)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSTFunctionParser.g:4342:3: rule__STExpressionSource__ExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STExpressionSource__ExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__1__Impl"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__0"
    // InternalSTFunctionParser.g:4351:1: rule__STInitializerExpressionSource__Group__0 : rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1 ;
    public final void rule__STInitializerExpressionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4355:1: ( rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1 )
            // InternalSTFunctionParser.g:4356:2: rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STInitializerExpressionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__0"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__0__Impl"
    // InternalSTFunctionParser.g:4363:1: rule__STInitializerExpressionSource__Group__0__Impl : ( () ) ;
    public final void rule__STInitializerExpressionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4367:1: ( ( () ) )
            // InternalSTFunctionParser.g:4368:1: ( () )
            {
            // InternalSTFunctionParser.g:4368:1: ( () )
            // InternalSTFunctionParser.g:4369:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getSTInitializerExpressionSourceAction_0()); 
            }
            // InternalSTFunctionParser.g:4370:2: ()
            // InternalSTFunctionParser.g:4370:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getSTInitializerExpressionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__0__Impl"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__1"
    // InternalSTFunctionParser.g:4378:1: rule__STInitializerExpressionSource__Group__1 : rule__STInitializerExpressionSource__Group__1__Impl ;
    public final void rule__STInitializerExpressionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4382:1: ( rule__STInitializerExpressionSource__Group__1__Impl )
            // InternalSTFunctionParser.g:4383:2: rule__STInitializerExpressionSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__1"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__1__Impl"
    // InternalSTFunctionParser.g:4389:1: rule__STInitializerExpressionSource__Group__1__Impl : ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? ) ;
    public final void rule__STInitializerExpressionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4393:1: ( ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? ) )
            // InternalSTFunctionParser.g:4394:1: ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? )
            {
            // InternalSTFunctionParser.g:4394:1: ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? )
            // InternalSTFunctionParser.g:4395:2: ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4396:2: ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==LDATE_AND_TIME||LA49_0==DATE_AND_TIME||LA49_0==LTIME_OF_DAY||LA49_0==TIME_OF_DAY||LA49_0==WSTRING||LA49_0==STRING||LA49_0==DWORD||LA49_0==FALSE||(LA49_0>=LDATE && LA49_0<=LWORD)||(LA49_0>=UDINT && LA49_0<=ULINT)||(LA49_0>=USINT && LA49_0<=WCHAR)||(LA49_0>=BOOL && LA49_0<=BYTE)||(LA49_0>=CHAR && LA49_0<=DINT)||(LA49_0>=LINT && LA49_0<=LTOD)||(LA49_0>=REAL && LA49_0<=SINT)||(LA49_0>=THIS && LA49_0<=TRUE)||LA49_0==UINT||LA49_0==WORD||LA49_0==AND||(LA49_0>=INT && LA49_0<=NOT)||LA49_0==TOD||LA49_0==XOR||LA49_0==DT||(LA49_0>=LD && LA49_0<=LT)||LA49_0==OR||LA49_0==LeftParenthesis||LA49_0==PlusSign||LA49_0==HyphenMinus||(LA49_0>=D && LA49_0<=LeftSquareBracket)||(LA49_0>=RULE_NON_DECIMAL && LA49_0<=RULE_INT)||(LA49_0>=RULE_ID && LA49_0<=RULE_STRING)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSTFunctionParser.g:4396:3: rule__STInitializerExpressionSource__InitializerExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STInitializerExpressionSource__InitializerExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__1__Impl"


    // $ANTLR start "rule__STImport__Group__0"
    // InternalSTFunctionParser.g:4405:1: rule__STImport__Group__0 : rule__STImport__Group__0__Impl rule__STImport__Group__1 ;
    public final void rule__STImport__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4409:1: ( rule__STImport__Group__0__Impl rule__STImport__Group__1 )
            // InternalSTFunctionParser.g:4410:2: rule__STImport__Group__0__Impl rule__STImport__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STImport__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STImport__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__Group__0"


    // $ANTLR start "rule__STImport__Group__0__Impl"
    // InternalSTFunctionParser.g:4417:1: rule__STImport__Group__0__Impl : ( IMPORT ) ;
    public final void rule__STImport__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4421:1: ( ( IMPORT ) )
            // InternalSTFunctionParser.g:4422:1: ( IMPORT )
            {
            // InternalSTFunctionParser.g:4422:1: ( IMPORT )
            // InternalSTFunctionParser.g:4423:2: IMPORT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTImportAccess().getIMPORTKeyword_0()); 
            }
            match(input,IMPORT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTImportAccess().getIMPORTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__Group__0__Impl"


    // $ANTLR start "rule__STImport__Group__1"
    // InternalSTFunctionParser.g:4432:1: rule__STImport__Group__1 : rule__STImport__Group__1__Impl rule__STImport__Group__2 ;
    public final void rule__STImport__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4436:1: ( rule__STImport__Group__1__Impl rule__STImport__Group__2 )
            // InternalSTFunctionParser.g:4437:2: rule__STImport__Group__1__Impl rule__STImport__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__STImport__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STImport__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__Group__1"


    // $ANTLR start "rule__STImport__Group__1__Impl"
    // InternalSTFunctionParser.g:4444:1: rule__STImport__Group__1__Impl : ( ( rule__STImport__ImportedNamespaceAssignment_1 ) ) ;
    public final void rule__STImport__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4448:1: ( ( ( rule__STImport__ImportedNamespaceAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4449:1: ( ( rule__STImport__ImportedNamespaceAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4449:1: ( ( rule__STImport__ImportedNamespaceAssignment_1 ) )
            // InternalSTFunctionParser.g:4450:2: ( rule__STImport__ImportedNamespaceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTImportAccess().getImportedNamespaceAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4451:2: ( rule__STImport__ImportedNamespaceAssignment_1 )
            // InternalSTFunctionParser.g:4451:3: rule__STImport__ImportedNamespaceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STImport__ImportedNamespaceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTImportAccess().getImportedNamespaceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__Group__1__Impl"


    // $ANTLR start "rule__STImport__Group__2"
    // InternalSTFunctionParser.g:4459:1: rule__STImport__Group__2 : rule__STImport__Group__2__Impl ;
    public final void rule__STImport__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4463:1: ( rule__STImport__Group__2__Impl )
            // InternalSTFunctionParser.g:4464:2: rule__STImport__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STImport__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__Group__2"


    // $ANTLR start "rule__STImport__Group__2__Impl"
    // InternalSTFunctionParser.g:4470:1: rule__STImport__Group__2__Impl : ( Semicolon ) ;
    public final void rule__STImport__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4474:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4475:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4475:1: ( Semicolon )
            // InternalSTFunctionParser.g:4476:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTImportAccess().getSemicolonKeyword_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTImportAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__Group__2__Impl"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:4486:1: rule__STVarDeclarationBlock__Group__0 : rule__STVarDeclarationBlock__Group__0__Impl rule__STVarDeclarationBlock__Group__1 ;
    public final void rule__STVarDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4490:1: ( rule__STVarDeclarationBlock__Group__0__Impl rule__STVarDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:4491:2: rule__STVarDeclarationBlock__Group__0__Impl rule__STVarDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:4498:1: rule__STVarDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4502:1: ( ( () ) )
            // InternalSTFunctionParser.g:4503:1: ( () )
            {
            // InternalSTFunctionParser.g:4503:1: ( () )
            // InternalSTFunctionParser.g:4504:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getSTVarPlainDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:4505:2: ()
            // InternalSTFunctionParser.g:4505:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getSTVarPlainDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:4513:1: rule__STVarDeclarationBlock__Group__1 : rule__STVarDeclarationBlock__Group__1__Impl rule__STVarDeclarationBlock__Group__2 ;
    public final void rule__STVarDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4517:1: ( rule__STVarDeclarationBlock__Group__1__Impl rule__STVarDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:4518:2: rule__STVarDeclarationBlock__Group__1__Impl rule__STVarDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__STVarDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:4525:1: rule__STVarDeclarationBlock__Group__1__Impl : ( VAR ) ;
    public final void rule__STVarDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4529:1: ( ( VAR ) )
            // InternalSTFunctionParser.g:4530:1: ( VAR )
            {
            // InternalSTFunctionParser.g:4530:1: ( VAR )
            // InternalSTFunctionParser.g:4531:2: VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getVARKeyword_1()); 
            }
            match(input,VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getVARKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:4540:1: rule__STVarDeclarationBlock__Group__2 : rule__STVarDeclarationBlock__Group__2__Impl rule__STVarDeclarationBlock__Group__3 ;
    public final void rule__STVarDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4544:1: ( rule__STVarDeclarationBlock__Group__2__Impl rule__STVarDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:4545:2: rule__STVarDeclarationBlock__Group__2__Impl rule__STVarDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__STVarDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:4552:1: rule__STVarDeclarationBlock__Group__2__Impl : ( ( rule__STVarDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4556:1: ( ( ( rule__STVarDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:4557:1: ( ( rule__STVarDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:4557:1: ( ( rule__STVarDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:4558:2: ( rule__STVarDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4559:2: ( rule__STVarDeclarationBlock__ConstantAssignment_2 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==CONSTANT) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalSTFunctionParser.g:4559:3: rule__STVarDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:4567:1: rule__STVarDeclarationBlock__Group__3 : rule__STVarDeclarationBlock__Group__3__Impl rule__STVarDeclarationBlock__Group__4 ;
    public final void rule__STVarDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4571:1: ( rule__STVarDeclarationBlock__Group__3__Impl rule__STVarDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:4572:2: rule__STVarDeclarationBlock__Group__3__Impl rule__STVarDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__STVarDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:4579:1: rule__STVarDeclarationBlock__Group__3__Impl : ( ( rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4583:1: ( ( ( rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4584:1: ( ( rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4584:1: ( ( rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:4585:2: ( rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4586:2: ( rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==RULE_ID) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4586:3: rule__STVarDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__STVarDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:4594:1: rule__STVarDeclarationBlock__Group__4 : rule__STVarDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4598:1: ( rule__STVarDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:4599:2: rule__STVarDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:4605:1: rule__STVarDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4609:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:4610:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:4610:1: ( END_VAR )
            // InternalSTFunctionParser.g:4611:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:4621:1: rule__STVarTempDeclarationBlock__Group__0 : rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1 ;
    public final void rule__STVarTempDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4625:1: ( rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:4626:2: rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__STVarTempDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:4633:1: rule__STVarTempDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarTempDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4637:1: ( ( () ) )
            // InternalSTFunctionParser.g:4638:1: ( () )
            {
            // InternalSTFunctionParser.g:4638:1: ( () )
            // InternalSTFunctionParser.g:4639:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getSTVarTempDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:4640:2: ()
            // InternalSTFunctionParser.g:4640:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getSTVarTempDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:4648:1: rule__STVarTempDeclarationBlock__Group__1 : rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2 ;
    public final void rule__STVarTempDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4652:1: ( rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:4653:2: rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__STVarTempDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:4660:1: rule__STVarTempDeclarationBlock__Group__1__Impl : ( VAR_TEMP ) ;
    public final void rule__STVarTempDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4664:1: ( ( VAR_TEMP ) )
            // InternalSTFunctionParser.g:4665:1: ( VAR_TEMP )
            {
            // InternalSTFunctionParser.g:4665:1: ( VAR_TEMP )
            // InternalSTFunctionParser.g:4666:2: VAR_TEMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }
            match(input,VAR_TEMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:4675:1: rule__STVarTempDeclarationBlock__Group__2 : rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3 ;
    public final void rule__STVarTempDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4679:1: ( rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:4680:2: rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__STVarTempDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:4687:1: rule__STVarTempDeclarationBlock__Group__2__Impl : ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarTempDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4691:1: ( ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:4692:1: ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:4692:1: ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:4693:2: ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4694:2: ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==CONSTANT) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSTFunctionParser.g:4694:3: rule__STVarTempDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarTempDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:4702:1: rule__STVarTempDeclarationBlock__Group__3 : rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4 ;
    public final void rule__STVarTempDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4706:1: ( rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:4707:2: rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__STVarTempDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:4714:1: rule__STVarTempDeclarationBlock__Group__3__Impl : ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarTempDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4718:1: ( ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4719:1: ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4719:1: ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:4720:2: ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4721:2: ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==RULE_ID) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4721:3: rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:4729:1: rule__STVarTempDeclarationBlock__Group__4 : rule__STVarTempDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarTempDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4733:1: ( rule__STVarTempDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:4734:2: rule__STVarTempDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:4740:1: rule__STVarTempDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarTempDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4744:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:4745:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:4745:1: ( END_VAR )
            // InternalSTFunctionParser.g:4746:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:4756:1: rule__STVarInputDeclarationBlock__Group__0 : rule__STVarInputDeclarationBlock__Group__0__Impl rule__STVarInputDeclarationBlock__Group__1 ;
    public final void rule__STVarInputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4760:1: ( rule__STVarInputDeclarationBlock__Group__0__Impl rule__STVarInputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:4761:2: rule__STVarInputDeclarationBlock__Group__0__Impl rule__STVarInputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STVarInputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:4768:1: rule__STVarInputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarInputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4772:1: ( ( () ) )
            // InternalSTFunctionParser.g:4773:1: ( () )
            {
            // InternalSTFunctionParser.g:4773:1: ( () )
            // InternalSTFunctionParser.g:4774:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getSTVarInputDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:4775:2: ()
            // InternalSTFunctionParser.g:4775:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getSTVarInputDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:4783:1: rule__STVarInputDeclarationBlock__Group__1 : rule__STVarInputDeclarationBlock__Group__1__Impl rule__STVarInputDeclarationBlock__Group__2 ;
    public final void rule__STVarInputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4787:1: ( rule__STVarInputDeclarationBlock__Group__1__Impl rule__STVarInputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:4788:2: rule__STVarInputDeclarationBlock__Group__1__Impl rule__STVarInputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__STVarInputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:4795:1: rule__STVarInputDeclarationBlock__Group__1__Impl : ( VAR_INPUT ) ;
    public final void rule__STVarInputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4799:1: ( ( VAR_INPUT ) )
            // InternalSTFunctionParser.g:4800:1: ( VAR_INPUT )
            {
            // InternalSTFunctionParser.g:4800:1: ( VAR_INPUT )
            // InternalSTFunctionParser.g:4801:2: VAR_INPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }
            match(input,VAR_INPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:4810:1: rule__STVarInputDeclarationBlock__Group__2 : rule__STVarInputDeclarationBlock__Group__2__Impl rule__STVarInputDeclarationBlock__Group__3 ;
    public final void rule__STVarInputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4814:1: ( rule__STVarInputDeclarationBlock__Group__2__Impl rule__STVarInputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:4815:2: rule__STVarInputDeclarationBlock__Group__2__Impl rule__STVarInputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__STVarInputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:4822:1: rule__STVarInputDeclarationBlock__Group__2__Impl : ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarInputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4826:1: ( ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:4827:1: ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:4827:1: ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:4828:2: ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4829:2: ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==CONSTANT) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSTFunctionParser.g:4829:3: rule__STVarInputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarInputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:4837:1: rule__STVarInputDeclarationBlock__Group__3 : rule__STVarInputDeclarationBlock__Group__3__Impl rule__STVarInputDeclarationBlock__Group__4 ;
    public final void rule__STVarInputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4841:1: ( rule__STVarInputDeclarationBlock__Group__3__Impl rule__STVarInputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:4842:2: rule__STVarInputDeclarationBlock__Group__3__Impl rule__STVarInputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__STVarInputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:4849:1: rule__STVarInputDeclarationBlock__Group__3__Impl : ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarInputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4853:1: ( ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4854:1: ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4854:1: ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:4855:2: ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4856:2: ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_ID) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4856:3: rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:4864:1: rule__STVarInputDeclarationBlock__Group__4 : rule__STVarInputDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarInputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4868:1: ( rule__STVarInputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:4869:2: rule__STVarInputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:4875:1: rule__STVarInputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarInputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4879:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:4880:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:4880:1: ( END_VAR )
            // InternalSTFunctionParser.g:4881:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:4891:1: rule__STVarOutputDeclarationBlock__Group__0 : rule__STVarOutputDeclarationBlock__Group__0__Impl rule__STVarOutputDeclarationBlock__Group__1 ;
    public final void rule__STVarOutputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4895:1: ( rule__STVarOutputDeclarationBlock__Group__0__Impl rule__STVarOutputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:4896:2: rule__STVarOutputDeclarationBlock__Group__0__Impl rule__STVarOutputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__STVarOutputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:4903:1: rule__STVarOutputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4907:1: ( ( () ) )
            // InternalSTFunctionParser.g:4908:1: ( () )
            {
            // InternalSTFunctionParser.g:4908:1: ( () )
            // InternalSTFunctionParser.g:4909:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getSTVarOutputDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:4910:2: ()
            // InternalSTFunctionParser.g:4910:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getSTVarOutputDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:4918:1: rule__STVarOutputDeclarationBlock__Group__1 : rule__STVarOutputDeclarationBlock__Group__1__Impl rule__STVarOutputDeclarationBlock__Group__2 ;
    public final void rule__STVarOutputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4922:1: ( rule__STVarOutputDeclarationBlock__Group__1__Impl rule__STVarOutputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:4923:2: rule__STVarOutputDeclarationBlock__Group__1__Impl rule__STVarOutputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__STVarOutputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:4930:1: rule__STVarOutputDeclarationBlock__Group__1__Impl : ( VAR_OUTPUT ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4934:1: ( ( VAR_OUTPUT ) )
            // InternalSTFunctionParser.g:4935:1: ( VAR_OUTPUT )
            {
            // InternalSTFunctionParser.g:4935:1: ( VAR_OUTPUT )
            // InternalSTFunctionParser.g:4936:2: VAR_OUTPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }
            match(input,VAR_OUTPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:4945:1: rule__STVarOutputDeclarationBlock__Group__2 : rule__STVarOutputDeclarationBlock__Group__2__Impl rule__STVarOutputDeclarationBlock__Group__3 ;
    public final void rule__STVarOutputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4949:1: ( rule__STVarOutputDeclarationBlock__Group__2__Impl rule__STVarOutputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:4950:2: rule__STVarOutputDeclarationBlock__Group__2__Impl rule__STVarOutputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__STVarOutputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:4957:1: rule__STVarOutputDeclarationBlock__Group__2__Impl : ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4961:1: ( ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:4962:1: ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:4962:1: ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:4963:2: ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4964:2: ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==CONSTANT) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSTFunctionParser.g:4964:3: rule__STVarOutputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarOutputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:4972:1: rule__STVarOutputDeclarationBlock__Group__3 : rule__STVarOutputDeclarationBlock__Group__3__Impl rule__STVarOutputDeclarationBlock__Group__4 ;
    public final void rule__STVarOutputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4976:1: ( rule__STVarOutputDeclarationBlock__Group__3__Impl rule__STVarOutputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:4977:2: rule__STVarOutputDeclarationBlock__Group__3__Impl rule__STVarOutputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__STVarOutputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:4984:1: rule__STVarOutputDeclarationBlock__Group__3__Impl : ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4988:1: ( ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4989:1: ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4989:1: ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:4990:2: ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4991:2: ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_ID) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4991:3: rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:4999:1: rule__STVarOutputDeclarationBlock__Group__4 : rule__STVarOutputDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarOutputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5003:1: ( rule__STVarOutputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:5004:2: rule__STVarOutputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:5010:1: rule__STVarOutputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5014:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:5015:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:5015:1: ( END_VAR )
            // InternalSTFunctionParser.g:5016:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:5026:1: rule__STVarInOutDeclarationBlock__Group__0 : rule__STVarInOutDeclarationBlock__Group__0__Impl rule__STVarInOutDeclarationBlock__Group__1 ;
    public final void rule__STVarInOutDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5030:1: ( rule__STVarInOutDeclarationBlock__Group__0__Impl rule__STVarInOutDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:5031:2: rule__STVarInOutDeclarationBlock__Group__0__Impl rule__STVarInOutDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STVarInOutDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:5038:1: rule__STVarInOutDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5042:1: ( ( () ) )
            // InternalSTFunctionParser.g:5043:1: ( () )
            {
            // InternalSTFunctionParser.g:5043:1: ( () )
            // InternalSTFunctionParser.g:5044:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getSTVarInOutDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:5045:2: ()
            // InternalSTFunctionParser.g:5045:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getSTVarInOutDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:5053:1: rule__STVarInOutDeclarationBlock__Group__1 : rule__STVarInOutDeclarationBlock__Group__1__Impl rule__STVarInOutDeclarationBlock__Group__2 ;
    public final void rule__STVarInOutDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5057:1: ( rule__STVarInOutDeclarationBlock__Group__1__Impl rule__STVarInOutDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:5058:2: rule__STVarInOutDeclarationBlock__Group__1__Impl rule__STVarInOutDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__STVarInOutDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:5065:1: rule__STVarInOutDeclarationBlock__Group__1__Impl : ( VAR_IN_OUT ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5069:1: ( ( VAR_IN_OUT ) )
            // InternalSTFunctionParser.g:5070:1: ( VAR_IN_OUT )
            {
            // InternalSTFunctionParser.g:5070:1: ( VAR_IN_OUT )
            // InternalSTFunctionParser.g:5071:2: VAR_IN_OUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVAR_IN_OUTKeyword_1()); 
            }
            match(input,VAR_IN_OUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVAR_IN_OUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:5080:1: rule__STVarInOutDeclarationBlock__Group__2 : rule__STVarInOutDeclarationBlock__Group__2__Impl rule__STVarInOutDeclarationBlock__Group__3 ;
    public final void rule__STVarInOutDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5084:1: ( rule__STVarInOutDeclarationBlock__Group__2__Impl rule__STVarInOutDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:5085:2: rule__STVarInOutDeclarationBlock__Group__2__Impl rule__STVarInOutDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__STVarInOutDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:5092:1: rule__STVarInOutDeclarationBlock__Group__2__Impl : ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5096:1: ( ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:5097:1: ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:5097:1: ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:5098:2: ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:5099:2: ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==CONSTANT) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSTFunctionParser.g:5099:3: rule__STVarInOutDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarInOutDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:5107:1: rule__STVarInOutDeclarationBlock__Group__3 : rule__STVarInOutDeclarationBlock__Group__3__Impl rule__STVarInOutDeclarationBlock__Group__4 ;
    public final void rule__STVarInOutDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5111:1: ( rule__STVarInOutDeclarationBlock__Group__3__Impl rule__STVarInOutDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:5112:2: rule__STVarInOutDeclarationBlock__Group__3__Impl rule__STVarInOutDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__STVarInOutDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:5119:1: rule__STVarInOutDeclarationBlock__Group__3__Impl : ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5123:1: ( ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5124:1: ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5124:1: ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:5125:2: ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5126:2: ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_ID) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5126:3: rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:5134:1: rule__STVarInOutDeclarationBlock__Group__4 : rule__STVarInOutDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarInOutDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5138:1: ( rule__STVarInOutDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:5139:2: rule__STVarInOutDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:5145:1: rule__STVarInOutDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5149:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:5150:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:5150:1: ( END_VAR )
            // InternalSTFunctionParser.g:5151:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__0"
    // InternalSTFunctionParser.g:5161:1: rule__STVarDeclaration__Group__0 : rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 ;
    public final void rule__STVarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5165:1: ( rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 )
            // InternalSTFunctionParser.g:5166:2: rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STVarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0"


    // $ANTLR start "rule__STVarDeclaration__Group__0__Impl"
    // InternalSTFunctionParser.g:5173:1: rule__STVarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STVarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5177:1: ( ( () ) )
            // InternalSTFunctionParser.g:5178:1: ( () )
            {
            // InternalSTFunctionParser.g:5178:1: ( () )
            // InternalSTFunctionParser.g:5179:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }
            // InternalSTFunctionParser.g:5180:2: ()
            // InternalSTFunctionParser.g:5180:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__1"
    // InternalSTFunctionParser.g:5188:1: rule__STVarDeclaration__Group__1 : rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 ;
    public final void rule__STVarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5192:1: ( rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 )
            // InternalSTFunctionParser.g:5193:2: rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__STVarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1"


    // $ANTLR start "rule__STVarDeclaration__Group__1__Impl"
    // InternalSTFunctionParser.g:5200:1: rule__STVarDeclaration__Group__1__Impl : ( ( rule__STVarDeclaration__NameAssignment_1 ) ) ;
    public final void rule__STVarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5204:1: ( ( ( rule__STVarDeclaration__NameAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5205:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5205:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            // InternalSTFunctionParser.g:5206:2: ( rule__STVarDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5207:2: ( rule__STVarDeclaration__NameAssignment_1 )
            // InternalSTFunctionParser.g:5207:3: rule__STVarDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__2"
    // InternalSTFunctionParser.g:5215:1: rule__STVarDeclaration__Group__2 : rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 ;
    public final void rule__STVarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5219:1: ( rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 )
            // InternalSTFunctionParser.g:5220:2: rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STVarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2"


    // $ANTLR start "rule__STVarDeclaration__Group__2__Impl"
    // InternalSTFunctionParser.g:5227:1: rule__STVarDeclaration__Group__2__Impl : ( ( rule__STVarDeclaration__Group_2__0 )? ) ;
    public final void rule__STVarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5231:1: ( ( ( rule__STVarDeclaration__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:5232:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:5232:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            // InternalSTFunctionParser.g:5233:2: ( rule__STVarDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:5234:2: ( rule__STVarDeclaration__Group_2__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==AT) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSTFunctionParser.g:5234:3: rule__STVarDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__3"
    // InternalSTFunctionParser.g:5242:1: rule__STVarDeclaration__Group__3 : rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 ;
    public final void rule__STVarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5246:1: ( rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 )
            // InternalSTFunctionParser.g:5247:2: rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__STVarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3"


    // $ANTLR start "rule__STVarDeclaration__Group__3__Impl"
    // InternalSTFunctionParser.g:5254:1: rule__STVarDeclaration__Group__3__Impl : ( Colon ) ;
    public final void rule__STVarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5258:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:5259:1: ( Colon )
            {
            // InternalSTFunctionParser.g:5259:1: ( Colon )
            // InternalSTFunctionParser.g:5260:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__4"
    // InternalSTFunctionParser.g:5269:1: rule__STVarDeclaration__Group__4 : rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 ;
    public final void rule__STVarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5273:1: ( rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 )
            // InternalSTFunctionParser.g:5274:2: rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5
            {
            pushFollow(FOLLOW_23);
            rule__STVarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4"


    // $ANTLR start "rule__STVarDeclaration__Group__4__Impl"
    // InternalSTFunctionParser.g:5281:1: rule__STVarDeclaration__Group__4__Impl : ( ( rule__STVarDeclaration__Group_4__0 )? ) ;
    public final void rule__STVarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5285:1: ( ( ( rule__STVarDeclaration__Group_4__0 )? ) )
            // InternalSTFunctionParser.g:5286:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            {
            // InternalSTFunctionParser.g:5286:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            // InternalSTFunctionParser.g:5287:2: ( rule__STVarDeclaration__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }
            // InternalSTFunctionParser.g:5288:2: ( rule__STVarDeclaration__Group_4__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==ARRAY) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSTFunctionParser.g:5288:3: rule__STVarDeclaration__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__5"
    // InternalSTFunctionParser.g:5296:1: rule__STVarDeclaration__Group__5 : rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 ;
    public final void rule__STVarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5300:1: ( rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 )
            // InternalSTFunctionParser.g:5301:2: rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5"


    // $ANTLR start "rule__STVarDeclaration__Group__5__Impl"
    // InternalSTFunctionParser.g:5308:1: rule__STVarDeclaration__Group__5__Impl : ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) ;
    public final void rule__STVarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5312:1: ( ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) )
            // InternalSTFunctionParser.g:5313:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            {
            // InternalSTFunctionParser.g:5313:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            // InternalSTFunctionParser.g:5314:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }
            // InternalSTFunctionParser.g:5315:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            // InternalSTFunctionParser.g:5315:3: rule__STVarDeclaration__TypeAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__TypeAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__6"
    // InternalSTFunctionParser.g:5323:1: rule__STVarDeclaration__Group__6 : rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 ;
    public final void rule__STVarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5327:1: ( rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 )
            // InternalSTFunctionParser.g:5328:2: rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6"


    // $ANTLR start "rule__STVarDeclaration__Group__6__Impl"
    // InternalSTFunctionParser.g:5335:1: rule__STVarDeclaration__Group__6__Impl : ( ( rule__STVarDeclaration__Group_6__0 )? ) ;
    public final void rule__STVarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5339:1: ( ( ( rule__STVarDeclaration__Group_6__0 )? ) )
            // InternalSTFunctionParser.g:5340:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            {
            // InternalSTFunctionParser.g:5340:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            // InternalSTFunctionParser.g:5341:2: ( rule__STVarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTFunctionParser.g:5342:2: ( rule__STVarDeclaration__Group_6__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==LeftSquareBracket) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSTFunctionParser.g:5342:3: rule__STVarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__7"
    // InternalSTFunctionParser.g:5350:1: rule__STVarDeclaration__Group__7 : rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 ;
    public final void rule__STVarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5354:1: ( rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 )
            // InternalSTFunctionParser.g:5355:2: rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7"


    // $ANTLR start "rule__STVarDeclaration__Group__7__Impl"
    // InternalSTFunctionParser.g:5362:1: rule__STVarDeclaration__Group__7__Impl : ( ( rule__STVarDeclaration__Group_7__0 )? ) ;
    public final void rule__STVarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5366:1: ( ( ( rule__STVarDeclaration__Group_7__0 )? ) )
            // InternalSTFunctionParser.g:5367:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            {
            // InternalSTFunctionParser.g:5367:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            // InternalSTFunctionParser.g:5368:2: ( rule__STVarDeclaration__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }
            // InternalSTFunctionParser.g:5369:2: ( rule__STVarDeclaration__Group_7__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==ColonEqualsSign) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSTFunctionParser.g:5369:3: rule__STVarDeclaration__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__8"
    // InternalSTFunctionParser.g:5377:1: rule__STVarDeclaration__Group__8 : rule__STVarDeclaration__Group__8__Impl rule__STVarDeclaration__Group__9 ;
    public final void rule__STVarDeclaration__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5381:1: ( rule__STVarDeclaration__Group__8__Impl rule__STVarDeclaration__Group__9 )
            // InternalSTFunctionParser.g:5382:2: rule__STVarDeclaration__Group__8__Impl rule__STVarDeclaration__Group__9
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8"


    // $ANTLR start "rule__STVarDeclaration__Group__8__Impl"
    // InternalSTFunctionParser.g:5389:1: rule__STVarDeclaration__Group__8__Impl : ( ( rule__STVarDeclaration__PragmaAssignment_8 )? ) ;
    public final void rule__STVarDeclaration__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5393:1: ( ( ( rule__STVarDeclaration__PragmaAssignment_8 )? ) )
            // InternalSTFunctionParser.g:5394:1: ( ( rule__STVarDeclaration__PragmaAssignment_8 )? )
            {
            // InternalSTFunctionParser.g:5394:1: ( ( rule__STVarDeclaration__PragmaAssignment_8 )? )
            // InternalSTFunctionParser.g:5395:2: ( rule__STVarDeclaration__PragmaAssignment_8 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getPragmaAssignment_8()); 
            }
            // InternalSTFunctionParser.g:5396:2: ( rule__STVarDeclaration__PragmaAssignment_8 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==LeftCurlyBracket) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSTFunctionParser.g:5396:3: rule__STVarDeclaration__PragmaAssignment_8
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__PragmaAssignment_8();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getPragmaAssignment_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__9"
    // InternalSTFunctionParser.g:5404:1: rule__STVarDeclaration__Group__9 : rule__STVarDeclaration__Group__9__Impl ;
    public final void rule__STVarDeclaration__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5408:1: ( rule__STVarDeclaration__Group__9__Impl )
            // InternalSTFunctionParser.g:5409:2: rule__STVarDeclaration__Group__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__9"


    // $ANTLR start "rule__STVarDeclaration__Group__9__Impl"
    // InternalSTFunctionParser.g:5415:1: rule__STVarDeclaration__Group__9__Impl : ( Semicolon ) ;
    public final void rule__STVarDeclaration__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5419:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:5420:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:5420:1: ( Semicolon )
            // InternalSTFunctionParser.g:5421:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_9()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__9__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0"
    // InternalSTFunctionParser.g:5431:1: rule__STVarDeclaration__Group_2__0 : rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 ;
    public final void rule__STVarDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5435:1: ( rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 )
            // InternalSTFunctionParser.g:5436:2: rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__STVarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0__Impl"
    // InternalSTFunctionParser.g:5443:1: rule__STVarDeclaration__Group_2__0__Impl : ( AT ) ;
    public final void rule__STVarDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5447:1: ( ( AT ) )
            // InternalSTFunctionParser.g:5448:1: ( AT )
            {
            // InternalSTFunctionParser.g:5448:1: ( AT )
            // InternalSTFunctionParser.g:5449:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1"
    // InternalSTFunctionParser.g:5458:1: rule__STVarDeclaration__Group_2__1 : rule__STVarDeclaration__Group_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5462:1: ( rule__STVarDeclaration__Group_2__1__Impl )
            // InternalSTFunctionParser.g:5463:2: rule__STVarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1__Impl"
    // InternalSTFunctionParser.g:5469:1: rule__STVarDeclaration__Group_2__1__Impl : ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5473:1: ( ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:5474:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:5474:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            // InternalSTFunctionParser.g:5475:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:5476:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            // InternalSTFunctionParser.g:5476:3: rule__STVarDeclaration__LocatedAtAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__LocatedAtAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0"
    // InternalSTFunctionParser.g:5485:1: rule__STVarDeclaration__Group_4__0 : rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 ;
    public final void rule__STVarDeclaration__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5489:1: ( rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 )
            // InternalSTFunctionParser.g:5490:2: rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1
            {
            pushFollow(FOLLOW_25);
            rule__STVarDeclaration__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0__Impl"
    // InternalSTFunctionParser.g:5497:1: rule__STVarDeclaration__Group_4__0__Impl : ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) ;
    public final void rule__STVarDeclaration__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5501:1: ( ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) )
            // InternalSTFunctionParser.g:5502:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            {
            // InternalSTFunctionParser.g:5502:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            // InternalSTFunctionParser.g:5503:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }
            // InternalSTFunctionParser.g:5504:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            // InternalSTFunctionParser.g:5504:3: rule__STVarDeclaration__ArrayAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__ArrayAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1"
    // InternalSTFunctionParser.g:5512:1: rule__STVarDeclaration__Group_4__1 : rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 ;
    public final void rule__STVarDeclaration__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5516:1: ( rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 )
            // InternalSTFunctionParser.g:5517:2: rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2
            {
            pushFollow(FOLLOW_26);
            rule__STVarDeclaration__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1__Impl"
    // InternalSTFunctionParser.g:5524:1: rule__STVarDeclaration__Group_4__1__Impl : ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5528:1: ( ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) )
            // InternalSTFunctionParser.g:5529:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            {
            // InternalSTFunctionParser.g:5529:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            // InternalSTFunctionParser.g:5530:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }
            // InternalSTFunctionParser.g:5531:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            // InternalSTFunctionParser.g:5531:3: rule__STVarDeclaration__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2"
    // InternalSTFunctionParser.g:5539:1: rule__STVarDeclaration__Group_4__2 : rule__STVarDeclaration__Group_4__2__Impl ;
    public final void rule__STVarDeclaration__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5543:1: ( rule__STVarDeclaration__Group_4__2__Impl )
            // InternalSTFunctionParser.g:5544:2: rule__STVarDeclaration__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2__Impl"
    // InternalSTFunctionParser.g:5550:1: rule__STVarDeclaration__Group_4__2__Impl : ( OF ) ;
    public final void rule__STVarDeclaration__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5554:1: ( ( OF ) )
            // InternalSTFunctionParser.g:5555:1: ( OF )
            {
            // InternalSTFunctionParser.g:5555:1: ( OF )
            // InternalSTFunctionParser.g:5556:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0"
    // InternalSTFunctionParser.g:5566:1: rule__STVarDeclaration__Group_4_1_0__0 : rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5570:1: ( rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 )
            // InternalSTFunctionParser.g:5571:2: rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__STVarDeclaration__Group_4_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0__Impl"
    // InternalSTFunctionParser.g:5578:1: rule__STVarDeclaration__Group_4_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5582:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:5583:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:5583:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:5584:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1"
    // InternalSTFunctionParser.g:5593:1: rule__STVarDeclaration__Group_4_1_0__1 : rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 ;
    public final void rule__STVarDeclaration__Group_4_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5597:1: ( rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 )
            // InternalSTFunctionParser.g:5598:2: rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1__Impl"
    // InternalSTFunctionParser.g:5605:1: rule__STVarDeclaration__Group_4_1_0__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5609:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) )
            // InternalSTFunctionParser.g:5610:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:5610:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            // InternalSTFunctionParser.g:5611:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }
            // InternalSTFunctionParser.g:5612:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            // InternalSTFunctionParser.g:5612:3: rule__STVarDeclaration__RangesAssignment_4_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2"
    // InternalSTFunctionParser.g:5620:1: rule__STVarDeclaration__Group_4_1_0__2 : rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 ;
    public final void rule__STVarDeclaration__Group_4_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5624:1: ( rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 )
            // InternalSTFunctionParser.g:5625:2: rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2__Impl"
    // InternalSTFunctionParser.g:5632:1: rule__STVarDeclaration__Group_4_1_0__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5636:1: ( ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) )
            // InternalSTFunctionParser.g:5637:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            {
            // InternalSTFunctionParser.g:5637:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            // InternalSTFunctionParser.g:5638:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }
            // InternalSTFunctionParser.g:5639:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==Comma) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5639:3: rule__STVarDeclaration__Group_4_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STVarDeclaration__Group_4_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3"
    // InternalSTFunctionParser.g:5647:1: rule__STVarDeclaration__Group_4_1_0__3 : rule__STVarDeclaration__Group_4_1_0__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5651:1: ( rule__STVarDeclaration__Group_4_1_0__3__Impl )
            // InternalSTFunctionParser.g:5652:2: rule__STVarDeclaration__Group_4_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3__Impl"
    // InternalSTFunctionParser.g:5658:1: rule__STVarDeclaration__Group_4_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5662:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:5663:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:5663:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:5664:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0"
    // InternalSTFunctionParser.g:5674:1: rule__STVarDeclaration__Group_4_1_0_2__0 : rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5678:1: ( rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 )
            // InternalSTFunctionParser.g:5679:2: rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1
            {
            pushFollow(FOLLOW_13);
            rule__STVarDeclaration__Group_4_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"
    // InternalSTFunctionParser.g:5686:1: rule__STVarDeclaration__Group_4_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5690:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:5691:1: ( Comma )
            {
            // InternalSTFunctionParser.g:5691:1: ( Comma )
            // InternalSTFunctionParser.g:5692:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1"
    // InternalSTFunctionParser.g:5701:1: rule__STVarDeclaration__Group_4_1_0_2__1 : rule__STVarDeclaration__Group_4_1_0_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5705:1: ( rule__STVarDeclaration__Group_4_1_0_2__1__Impl )
            // InternalSTFunctionParser.g:5706:2: rule__STVarDeclaration__Group_4_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"
    // InternalSTFunctionParser.g:5712:1: rule__STVarDeclaration__Group_4_1_0_2__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5716:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) )
            // InternalSTFunctionParser.g:5717:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            {
            // InternalSTFunctionParser.g:5717:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            // InternalSTFunctionParser.g:5718:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }
            // InternalSTFunctionParser.g:5719:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            // InternalSTFunctionParser.g:5719:3: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0"
    // InternalSTFunctionParser.g:5728:1: rule__STVarDeclaration__Group_4_1_1__0 : rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5732:1: ( rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 )
            // InternalSTFunctionParser.g:5733:2: rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1
            {
            pushFollow(FOLLOW_29);
            rule__STVarDeclaration__Group_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0__Impl"
    // InternalSTFunctionParser.g:5740:1: rule__STVarDeclaration__Group_4_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5744:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:5745:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:5745:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:5746:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1"
    // InternalSTFunctionParser.g:5755:1: rule__STVarDeclaration__Group_4_1_1__1 : rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 ;
    public final void rule__STVarDeclaration__Group_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5759:1: ( rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 )
            // InternalSTFunctionParser.g:5760:2: rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1__Impl"
    // InternalSTFunctionParser.g:5767:1: rule__STVarDeclaration__Group_4_1_1__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5771:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) )
            // InternalSTFunctionParser.g:5772:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:5772:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            // InternalSTFunctionParser.g:5773:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }
            // InternalSTFunctionParser.g:5774:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            // InternalSTFunctionParser.g:5774:3: rule__STVarDeclaration__CountAssignment_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2"
    // InternalSTFunctionParser.g:5782:1: rule__STVarDeclaration__Group_4_1_1__2 : rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 ;
    public final void rule__STVarDeclaration__Group_4_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5786:1: ( rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 )
            // InternalSTFunctionParser.g:5787:2: rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2__Impl"
    // InternalSTFunctionParser.g:5794:1: rule__STVarDeclaration__Group_4_1_1__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5798:1: ( ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) )
            // InternalSTFunctionParser.g:5799:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            {
            // InternalSTFunctionParser.g:5799:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            // InternalSTFunctionParser.g:5800:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }
            // InternalSTFunctionParser.g:5801:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==Comma) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5801:3: rule__STVarDeclaration__Group_4_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STVarDeclaration__Group_4_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3"
    // InternalSTFunctionParser.g:5809:1: rule__STVarDeclaration__Group_4_1_1__3 : rule__STVarDeclaration__Group_4_1_1__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5813:1: ( rule__STVarDeclaration__Group_4_1_1__3__Impl )
            // InternalSTFunctionParser.g:5814:2: rule__STVarDeclaration__Group_4_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3__Impl"
    // InternalSTFunctionParser.g:5820:1: rule__STVarDeclaration__Group_4_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5824:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:5825:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:5825:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:5826:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0"
    // InternalSTFunctionParser.g:5836:1: rule__STVarDeclaration__Group_4_1_1_2__0 : rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5840:1: ( rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 )
            // InternalSTFunctionParser.g:5841:2: rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__STVarDeclaration__Group_4_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"
    // InternalSTFunctionParser.g:5848:1: rule__STVarDeclaration__Group_4_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5852:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:5853:1: ( Comma )
            {
            // InternalSTFunctionParser.g:5853:1: ( Comma )
            // InternalSTFunctionParser.g:5854:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1"
    // InternalSTFunctionParser.g:5863:1: rule__STVarDeclaration__Group_4_1_1_2__1 : rule__STVarDeclaration__Group_4_1_1_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5867:1: ( rule__STVarDeclaration__Group_4_1_1_2__1__Impl )
            // InternalSTFunctionParser.g:5868:2: rule__STVarDeclaration__Group_4_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"
    // InternalSTFunctionParser.g:5874:1: rule__STVarDeclaration__Group_4_1_1_2__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5878:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) )
            // InternalSTFunctionParser.g:5879:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            {
            // InternalSTFunctionParser.g:5879:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            // InternalSTFunctionParser.g:5880:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }
            // InternalSTFunctionParser.g:5881:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            // InternalSTFunctionParser.g:5881:3: rule__STVarDeclaration__CountAssignment_4_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0"
    // InternalSTFunctionParser.g:5890:1: rule__STVarDeclaration__Group_6__0 : rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 ;
    public final void rule__STVarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5894:1: ( rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 )
            // InternalSTFunctionParser.g:5895:2: rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_13);
            rule__STVarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0__Impl"
    // InternalSTFunctionParser.g:5902:1: rule__STVarDeclaration__Group_6__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5906:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:5907:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:5907:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:5908:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1"
    // InternalSTFunctionParser.g:5917:1: rule__STVarDeclaration__Group_6__1 : rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 ;
    public final void rule__STVarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5921:1: ( rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 )
            // InternalSTFunctionParser.g:5922:2: rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2
            {
            pushFollow(FOLLOW_30);
            rule__STVarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1__Impl"
    // InternalSTFunctionParser.g:5929:1: rule__STVarDeclaration__Group_6__1__Impl : ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) ;
    public final void rule__STVarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5933:1: ( ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:5934:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:5934:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            // InternalSTFunctionParser.g:5935:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:5936:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            // InternalSTFunctionParser.g:5936:3: rule__STVarDeclaration__MaxLengthAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__MaxLengthAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2"
    // InternalSTFunctionParser.g:5944:1: rule__STVarDeclaration__Group_6__2 : rule__STVarDeclaration__Group_6__2__Impl ;
    public final void rule__STVarDeclaration__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5948:1: ( rule__STVarDeclaration__Group_6__2__Impl )
            // InternalSTFunctionParser.g:5949:2: rule__STVarDeclaration__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2__Impl"
    // InternalSTFunctionParser.g:5955:1: rule__STVarDeclaration__Group_6__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5959:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:5960:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:5960:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:5961:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0"
    // InternalSTFunctionParser.g:5971:1: rule__STVarDeclaration__Group_7__0 : rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 ;
    public final void rule__STVarDeclaration__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5975:1: ( rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 )
            // InternalSTFunctionParser.g:5976:2: rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0__Impl"
    // InternalSTFunctionParser.g:5983:1: rule__STVarDeclaration__Group_7__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__STVarDeclaration__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5987:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:5988:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:5988:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:5989:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1"
    // InternalSTFunctionParser.g:5998:1: rule__STVarDeclaration__Group_7__1 : rule__STVarDeclaration__Group_7__1__Impl ;
    public final void rule__STVarDeclaration__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6002:1: ( rule__STVarDeclaration__Group_7__1__Impl )
            // InternalSTFunctionParser.g:6003:2: rule__STVarDeclaration__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1__Impl"
    // InternalSTFunctionParser.g:6009:1: rule__STVarDeclaration__Group_7__1__Impl : ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) ;
    public final void rule__STVarDeclaration__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6013:1: ( ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) )
            // InternalSTFunctionParser.g:6014:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            {
            // InternalSTFunctionParser.g:6014:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            // InternalSTFunctionParser.g:6015:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }
            // InternalSTFunctionParser.g:6016:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            // InternalSTFunctionParser.g:6016:3: rule__STVarDeclaration__DefaultValueAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__DefaultValueAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__0"
    // InternalSTFunctionParser.g:6025:1: rule__STTypeDeclaration__Group__0 : rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1 ;
    public final void rule__STTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6029:1: ( rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1 )
            // InternalSTFunctionParser.g:6030:2: rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__STTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__0"


    // $ANTLR start "rule__STTypeDeclaration__Group__0__Impl"
    // InternalSTFunctionParser.g:6037:1: rule__STTypeDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6041:1: ( ( () ) )
            // InternalSTFunctionParser.g:6042:1: ( () )
            {
            // InternalSTFunctionParser.g:6042:1: ( () )
            // InternalSTFunctionParser.g:6043:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getSTTypeDeclarationAction_0()); 
            }
            // InternalSTFunctionParser.g:6044:2: ()
            // InternalSTFunctionParser.g:6044:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getSTTypeDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__1"
    // InternalSTFunctionParser.g:6052:1: rule__STTypeDeclaration__Group__1 : rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2 ;
    public final void rule__STTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6056:1: ( rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2 )
            // InternalSTFunctionParser.g:6057:2: rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__STTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__1"


    // $ANTLR start "rule__STTypeDeclaration__Group__1__Impl"
    // InternalSTFunctionParser.g:6064:1: rule__STTypeDeclaration__Group__1__Impl : ( ( rule__STTypeDeclaration__Group_1__0 )? ) ;
    public final void rule__STTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6068:1: ( ( ( rule__STTypeDeclaration__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:6069:1: ( ( rule__STTypeDeclaration__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:6069:1: ( ( rule__STTypeDeclaration__Group_1__0 )? )
            // InternalSTFunctionParser.g:6070:2: ( rule__STTypeDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6071:2: ( rule__STTypeDeclaration__Group_1__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==ARRAY) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSTFunctionParser.g:6071:3: rule__STTypeDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__2"
    // InternalSTFunctionParser.g:6079:1: rule__STTypeDeclaration__Group__2 : rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3 ;
    public final void rule__STTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6083:1: ( rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3 )
            // InternalSTFunctionParser.g:6084:2: rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__STTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__2"


    // $ANTLR start "rule__STTypeDeclaration__Group__2__Impl"
    // InternalSTFunctionParser.g:6091:1: rule__STTypeDeclaration__Group__2__Impl : ( ( rule__STTypeDeclaration__TypeAssignment_2 ) ) ;
    public final void rule__STTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6095:1: ( ( ( rule__STTypeDeclaration__TypeAssignment_2 ) ) )
            // InternalSTFunctionParser.g:6096:1: ( ( rule__STTypeDeclaration__TypeAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:6096:1: ( ( rule__STTypeDeclaration__TypeAssignment_2 ) )
            // InternalSTFunctionParser.g:6097:2: ( rule__STTypeDeclaration__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeAssignment_2()); 
            }
            // InternalSTFunctionParser.g:6098:2: ( rule__STTypeDeclaration__TypeAssignment_2 )
            // InternalSTFunctionParser.g:6098:3: rule__STTypeDeclaration__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__3"
    // InternalSTFunctionParser.g:6106:1: rule__STTypeDeclaration__Group__3 : rule__STTypeDeclaration__Group__3__Impl ;
    public final void rule__STTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6110:1: ( rule__STTypeDeclaration__Group__3__Impl )
            // InternalSTFunctionParser.g:6111:2: rule__STTypeDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__3"


    // $ANTLR start "rule__STTypeDeclaration__Group__3__Impl"
    // InternalSTFunctionParser.g:6117:1: rule__STTypeDeclaration__Group__3__Impl : ( ( rule__STTypeDeclaration__Group_3__0 )? ) ;
    public final void rule__STTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6121:1: ( ( ( rule__STTypeDeclaration__Group_3__0 )? ) )
            // InternalSTFunctionParser.g:6122:1: ( ( rule__STTypeDeclaration__Group_3__0 )? )
            {
            // InternalSTFunctionParser.g:6122:1: ( ( rule__STTypeDeclaration__Group_3__0 )? )
            // InternalSTFunctionParser.g:6123:2: ( rule__STTypeDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:6124:2: ( rule__STTypeDeclaration__Group_3__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LeftSquareBracket) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSTFunctionParser.g:6124:3: rule__STTypeDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__0"
    // InternalSTFunctionParser.g:6133:1: rule__STTypeDeclaration__Group_1__0 : rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1 ;
    public final void rule__STTypeDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6137:1: ( rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1 )
            // InternalSTFunctionParser.g:6138:2: rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__STTypeDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6145:1: rule__STTypeDeclaration__Group_1__0__Impl : ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) ) ;
    public final void rule__STTypeDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6149:1: ( ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) ) )
            // InternalSTFunctionParser.g:6150:1: ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) )
            {
            // InternalSTFunctionParser.g:6150:1: ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) )
            // InternalSTFunctionParser.g:6151:2: ( rule__STTypeDeclaration__ArrayAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayAssignment_1_0()); 
            }
            // InternalSTFunctionParser.g:6152:2: ( rule__STTypeDeclaration__ArrayAssignment_1_0 )
            // InternalSTFunctionParser.g:6152:3: rule__STTypeDeclaration__ArrayAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__ArrayAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__1"
    // InternalSTFunctionParser.g:6160:1: rule__STTypeDeclaration__Group_1__1 : rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2 ;
    public final void rule__STTypeDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6164:1: ( rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2 )
            // InternalSTFunctionParser.g:6165:2: rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2
            {
            pushFollow(FOLLOW_26);
            rule__STTypeDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6172:1: rule__STTypeDeclaration__Group_1__1__Impl : ( ( rule__STTypeDeclaration__Alternatives_1_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6176:1: ( ( ( rule__STTypeDeclaration__Alternatives_1_1 ) ) )
            // InternalSTFunctionParser.g:6177:1: ( ( rule__STTypeDeclaration__Alternatives_1_1 ) )
            {
            // InternalSTFunctionParser.g:6177:1: ( ( rule__STTypeDeclaration__Alternatives_1_1 ) )
            // InternalSTFunctionParser.g:6178:2: ( rule__STTypeDeclaration__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getAlternatives_1_1()); 
            }
            // InternalSTFunctionParser.g:6179:2: ( rule__STTypeDeclaration__Alternatives_1_1 )
            // InternalSTFunctionParser.g:6179:3: rule__STTypeDeclaration__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__2"
    // InternalSTFunctionParser.g:6187:1: rule__STTypeDeclaration__Group_1__2 : rule__STTypeDeclaration__Group_1__2__Impl ;
    public final void rule__STTypeDeclaration__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6191:1: ( rule__STTypeDeclaration__Group_1__2__Impl )
            // InternalSTFunctionParser.g:6192:2: rule__STTypeDeclaration__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__2__Impl"
    // InternalSTFunctionParser.g:6198:1: rule__STTypeDeclaration__Group_1__2__Impl : ( OF ) ;
    public final void rule__STTypeDeclaration__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6202:1: ( ( OF ) )
            // InternalSTFunctionParser.g:6203:1: ( OF )
            {
            // InternalSTFunctionParser.g:6203:1: ( OF )
            // InternalSTFunctionParser.g:6204:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getOFKeyword_1_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getOFKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__0"
    // InternalSTFunctionParser.g:6214:1: rule__STTypeDeclaration__Group_1_1_0__0 : rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6218:1: ( rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1 )
            // InternalSTFunctionParser.g:6219:2: rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__STTypeDeclaration__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__0__Impl"
    // InternalSTFunctionParser.g:6226:1: rule__STTypeDeclaration__Group_1_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6230:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:6231:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:6231:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:6232:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__1"
    // InternalSTFunctionParser.g:6241:1: rule__STTypeDeclaration__Group_1_1_0__1 : rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6245:1: ( rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2 )
            // InternalSTFunctionParser.g:6246:2: rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__1__Impl"
    // InternalSTFunctionParser.g:6253:1: rule__STTypeDeclaration__Group_1_1_0__1__Impl : ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6257:1: ( ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6258:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6258:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) )
            // InternalSTFunctionParser.g:6259:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6260:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 )
            // InternalSTFunctionParser.g:6260:3: rule__STTypeDeclaration__RangesAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__RangesAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__2"
    // InternalSTFunctionParser.g:6268:1: rule__STTypeDeclaration__Group_1_1_0__2 : rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6272:1: ( rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3 )
            // InternalSTFunctionParser.g:6273:2: rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__2__Impl"
    // InternalSTFunctionParser.g:6280:1: rule__STTypeDeclaration__Group_1_1_0__2__Impl : ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6284:1: ( ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* ) )
            // InternalSTFunctionParser.g:6285:1: ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* )
            {
            // InternalSTFunctionParser.g:6285:1: ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* )
            // InternalSTFunctionParser.g:6286:2: ( rule__STTypeDeclaration__Group_1_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0_2()); 
            }
            // InternalSTFunctionParser.g:6287:2: ( rule__STTypeDeclaration__Group_1_1_0_2__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==Comma) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6287:3: rule__STTypeDeclaration__Group_1_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STTypeDeclaration__Group_1_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__3"
    // InternalSTFunctionParser.g:6295:1: rule__STTypeDeclaration__Group_1_1_0__3 : rule__STTypeDeclaration__Group_1_1_0__3__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6299:1: ( rule__STTypeDeclaration__Group_1_1_0__3__Impl )
            // InternalSTFunctionParser.g:6300:2: rule__STTypeDeclaration__Group_1_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__3"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__3__Impl"
    // InternalSTFunctionParser.g:6306:1: rule__STTypeDeclaration__Group_1_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6310:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:6311:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:6311:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:6312:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__0"
    // InternalSTFunctionParser.g:6322:1: rule__STTypeDeclaration__Group_1_1_0_2__0 : rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6326:1: ( rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1 )
            // InternalSTFunctionParser.g:6327:2: rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1
            {
            pushFollow(FOLLOW_13);
            rule__STTypeDeclaration__Group_1_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__0__Impl"
    // InternalSTFunctionParser.g:6334:1: rule__STTypeDeclaration__Group_1_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6338:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:6339:1: ( Comma )
            {
            // InternalSTFunctionParser.g:6339:1: ( Comma )
            // InternalSTFunctionParser.g:6340:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__1"
    // InternalSTFunctionParser.g:6349:1: rule__STTypeDeclaration__Group_1_1_0_2__1 : rule__STTypeDeclaration__Group_1_1_0_2__1__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6353:1: ( rule__STTypeDeclaration__Group_1_1_0_2__1__Impl )
            // InternalSTFunctionParser.g:6354:2: rule__STTypeDeclaration__Group_1_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__1__Impl"
    // InternalSTFunctionParser.g:6360:1: rule__STTypeDeclaration__Group_1_1_0_2__1__Impl : ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6364:1: ( ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) ) )
            // InternalSTFunctionParser.g:6365:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) )
            {
            // InternalSTFunctionParser.g:6365:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) )
            // InternalSTFunctionParser.g:6366:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_2_1()); 
            }
            // InternalSTFunctionParser.g:6367:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 )
            // InternalSTFunctionParser.g:6367:3: rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__0"
    // InternalSTFunctionParser.g:6376:1: rule__STTypeDeclaration__Group_1_1_1__0 : rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6380:1: ( rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1 )
            // InternalSTFunctionParser.g:6381:2: rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1
            {
            pushFollow(FOLLOW_29);
            rule__STTypeDeclaration__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__0__Impl"
    // InternalSTFunctionParser.g:6388:1: rule__STTypeDeclaration__Group_1_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6392:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:6393:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:6393:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:6394:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__1"
    // InternalSTFunctionParser.g:6403:1: rule__STTypeDeclaration__Group_1_1_1__1 : rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6407:1: ( rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2 )
            // InternalSTFunctionParser.g:6408:2: rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__1__Impl"
    // InternalSTFunctionParser.g:6415:1: rule__STTypeDeclaration__Group_1_1_1__1__Impl : ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6419:1: ( ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) ) )
            // InternalSTFunctionParser.g:6420:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:6420:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) )
            // InternalSTFunctionParser.g:6421:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_1()); 
            }
            // InternalSTFunctionParser.g:6422:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 )
            // InternalSTFunctionParser.g:6422:3: rule__STTypeDeclaration__CountAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__CountAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__2"
    // InternalSTFunctionParser.g:6430:1: rule__STTypeDeclaration__Group_1_1_1__2 : rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6434:1: ( rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3 )
            // InternalSTFunctionParser.g:6435:2: rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__2__Impl"
    // InternalSTFunctionParser.g:6442:1: rule__STTypeDeclaration__Group_1_1_1__2__Impl : ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6446:1: ( ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* ) )
            // InternalSTFunctionParser.g:6447:1: ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* )
            {
            // InternalSTFunctionParser.g:6447:1: ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* )
            // InternalSTFunctionParser.g:6448:2: ( rule__STTypeDeclaration__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTFunctionParser.g:6449:2: ( rule__STTypeDeclaration__Group_1_1_1_2__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==Comma) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6449:3: rule__STTypeDeclaration__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STTypeDeclaration__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__3"
    // InternalSTFunctionParser.g:6457:1: rule__STTypeDeclaration__Group_1_1_1__3 : rule__STTypeDeclaration__Group_1_1_1__3__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6461:1: ( rule__STTypeDeclaration__Group_1_1_1__3__Impl )
            // InternalSTFunctionParser.g:6462:2: rule__STTypeDeclaration__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__3"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__3__Impl"
    // InternalSTFunctionParser.g:6468:1: rule__STTypeDeclaration__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6472:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:6473:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:6473:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:6474:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__0"
    // InternalSTFunctionParser.g:6484:1: rule__STTypeDeclaration__Group_1_1_1_2__0 : rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6488:1: ( rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1 )
            // InternalSTFunctionParser.g:6489:2: rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__STTypeDeclaration__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__0__Impl"
    // InternalSTFunctionParser.g:6496:1: rule__STTypeDeclaration__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6500:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:6501:1: ( Comma )
            {
            // InternalSTFunctionParser.g:6501:1: ( Comma )
            // InternalSTFunctionParser.g:6502:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__1"
    // InternalSTFunctionParser.g:6511:1: rule__STTypeDeclaration__Group_1_1_1_2__1 : rule__STTypeDeclaration__Group_1_1_1_2__1__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6515:1: ( rule__STTypeDeclaration__Group_1_1_1_2__1__Impl )
            // InternalSTFunctionParser.g:6516:2: rule__STTypeDeclaration__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__1__Impl"
    // InternalSTFunctionParser.g:6522:1: rule__STTypeDeclaration__Group_1_1_1_2__1__Impl : ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6526:1: ( ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) ) )
            // InternalSTFunctionParser.g:6527:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) )
            {
            // InternalSTFunctionParser.g:6527:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) )
            // InternalSTFunctionParser.g:6528:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_2_1()); 
            }
            // InternalSTFunctionParser.g:6529:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 )
            // InternalSTFunctionParser.g:6529:3: rule__STTypeDeclaration__CountAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__CountAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__0"
    // InternalSTFunctionParser.g:6538:1: rule__STTypeDeclaration__Group_3__0 : rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1 ;
    public final void rule__STTypeDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6542:1: ( rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1 )
            // InternalSTFunctionParser.g:6543:2: rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_13);
            rule__STTypeDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__0__Impl"
    // InternalSTFunctionParser.g:6550:1: rule__STTypeDeclaration__Group_3__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6554:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:6555:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:6555:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:6556:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_3_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__1"
    // InternalSTFunctionParser.g:6565:1: rule__STTypeDeclaration__Group_3__1 : rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2 ;
    public final void rule__STTypeDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6569:1: ( rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2 )
            // InternalSTFunctionParser.g:6570:2: rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_30);
            rule__STTypeDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__1__Impl"
    // InternalSTFunctionParser.g:6577:1: rule__STTypeDeclaration__Group_3__1__Impl : ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6581:1: ( ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:6582:1: ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:6582:1: ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) )
            // InternalSTFunctionParser.g:6583:2: ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:6584:2: ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 )
            // InternalSTFunctionParser.g:6584:3: rule__STTypeDeclaration__MaxLengthAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__MaxLengthAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__2"
    // InternalSTFunctionParser.g:6592:1: rule__STTypeDeclaration__Group_3__2 : rule__STTypeDeclaration__Group_3__2__Impl ;
    public final void rule__STTypeDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6596:1: ( rule__STTypeDeclaration__Group_3__2__Impl )
            // InternalSTFunctionParser.g:6597:2: rule__STTypeDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__2__Impl"
    // InternalSTFunctionParser.g:6603:1: rule__STTypeDeclaration__Group_3__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6607:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:6608:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:6608:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:6609:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_3_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0"
    // InternalSTFunctionParser.g:6619:1: rule__STArrayInitializerExpression__Group__0 : rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 ;
    public final void rule__STArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6623:1: ( rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 )
            // InternalSTFunctionParser.g:6624:2: rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6631:1: rule__STArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6635:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:6636:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:6636:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:6637:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1"
    // InternalSTFunctionParser.g:6646:1: rule__STArrayInitializerExpression__Group__1 : rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 ;
    public final void rule__STArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6650:1: ( rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 )
            // InternalSTFunctionParser.g:6651:2: rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__STArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6658:1: rule__STArrayInitializerExpression__Group__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6662:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTFunctionParser.g:6663:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:6663:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTFunctionParser.g:6664:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTFunctionParser.g:6665:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTFunctionParser.g:6665:3: rule__STArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2"
    // InternalSTFunctionParser.g:6673:1: rule__STArrayInitializerExpression__Group__2 : rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 ;
    public final void rule__STArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6677:1: ( rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 )
            // InternalSTFunctionParser.g:6678:2: rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__STArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:6685:1: rule__STArrayInitializerExpression__Group__2__Impl : ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__STArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6689:1: ( ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTFunctionParser.g:6690:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTFunctionParser.g:6690:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            // InternalSTFunctionParser.g:6691:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:6692:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==Comma) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6692:3: rule__STArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3"
    // InternalSTFunctionParser.g:6700:1: rule__STArrayInitializerExpression__Group__3 : rule__STArrayInitializerExpression__Group__3__Impl ;
    public final void rule__STArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6704:1: ( rule__STArrayInitializerExpression__Group__3__Impl )
            // InternalSTFunctionParser.g:6705:2: rule__STArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3__Impl"
    // InternalSTFunctionParser.g:6711:1: rule__STArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6715:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:6716:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:6716:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:6717:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0"
    // InternalSTFunctionParser.g:6727:1: rule__STArrayInitializerExpression__Group_2__0 : rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 ;
    public final void rule__STArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6731:1: ( rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 )
            // InternalSTFunctionParser.g:6732:2: rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_14);
            rule__STArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:6739:1: rule__STArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6743:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:6744:1: ( Comma )
            {
            // InternalSTFunctionParser.g:6744:1: ( Comma )
            // InternalSTFunctionParser.g:6745:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1"
    // InternalSTFunctionParser.g:6754:1: rule__STArrayInitializerExpression__Group_2__1 : rule__STArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__STArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6758:1: ( rule__STArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTFunctionParser.g:6759:2: rule__STArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:6765:1: rule__STArrayInitializerExpression__Group_2__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6769:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:6770:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:6770:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTFunctionParser.g:6771:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:6772:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTFunctionParser.g:6772:3: rule__STArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__0"
    // InternalSTFunctionParser.g:6781:1: rule__STRepeatArrayInitElement__Group__0 : rule__STRepeatArrayInitElement__Group__0__Impl rule__STRepeatArrayInitElement__Group__1 ;
    public final void rule__STRepeatArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6785:1: ( rule__STRepeatArrayInitElement__Group__0__Impl rule__STRepeatArrayInitElement__Group__1 )
            // InternalSTFunctionParser.g:6786:2: rule__STRepeatArrayInitElement__Group__0__Impl rule__STRepeatArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__STRepeatArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__0"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__0__Impl"
    // InternalSTFunctionParser.g:6793:1: rule__STRepeatArrayInitElement__Group__0__Impl : ( ( rule__STRepeatArrayInitElement__RepetitionsAssignment_0 ) ) ;
    public final void rule__STRepeatArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6797:1: ( ( ( rule__STRepeatArrayInitElement__RepetitionsAssignment_0 ) ) )
            // InternalSTFunctionParser.g:6798:1: ( ( rule__STRepeatArrayInitElement__RepetitionsAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:6798:1: ( ( rule__STRepeatArrayInitElement__RepetitionsAssignment_0 ) )
            // InternalSTFunctionParser.g:6799:2: ( rule__STRepeatArrayInitElement__RepetitionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getRepetitionsAssignment_0()); 
            }
            // InternalSTFunctionParser.g:6800:2: ( rule__STRepeatArrayInitElement__RepetitionsAssignment_0 )
            // InternalSTFunctionParser.g:6800:3: rule__STRepeatArrayInitElement__RepetitionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__RepetitionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getRepetitionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__1"
    // InternalSTFunctionParser.g:6808:1: rule__STRepeatArrayInitElement__Group__1 : rule__STRepeatArrayInitElement__Group__1__Impl rule__STRepeatArrayInitElement__Group__2 ;
    public final void rule__STRepeatArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6812:1: ( rule__STRepeatArrayInitElement__Group__1__Impl rule__STRepeatArrayInitElement__Group__2 )
            // InternalSTFunctionParser.g:6813:2: rule__STRepeatArrayInitElement__Group__1__Impl rule__STRepeatArrayInitElement__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STRepeatArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__1"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__1__Impl"
    // InternalSTFunctionParser.g:6820:1: rule__STRepeatArrayInitElement__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__STRepeatArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6824:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:6825:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:6825:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:6826:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__2"
    // InternalSTFunctionParser.g:6835:1: rule__STRepeatArrayInitElement__Group__2 : rule__STRepeatArrayInitElement__Group__2__Impl rule__STRepeatArrayInitElement__Group__3 ;
    public final void rule__STRepeatArrayInitElement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6839:1: ( rule__STRepeatArrayInitElement__Group__2__Impl rule__STRepeatArrayInitElement__Group__3 )
            // InternalSTFunctionParser.g:6840:2: rule__STRepeatArrayInitElement__Group__2__Impl rule__STRepeatArrayInitElement__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STRepeatArrayInitElement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__2"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__2__Impl"
    // InternalSTFunctionParser.g:6847:1: rule__STRepeatArrayInitElement__Group__2__Impl : ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 ) ) ;
    public final void rule__STRepeatArrayInitElement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6851:1: ( ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 ) ) )
            // InternalSTFunctionParser.g:6852:1: ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:6852:1: ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 ) )
            // InternalSTFunctionParser.g:6853:2: ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:6854:2: ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 )
            // InternalSTFunctionParser.g:6854:3: rule__STRepeatArrayInitElement__InitExpressionsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__InitExpressionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__3"
    // InternalSTFunctionParser.g:6862:1: rule__STRepeatArrayInitElement__Group__3 : rule__STRepeatArrayInitElement__Group__3__Impl rule__STRepeatArrayInitElement__Group__4 ;
    public final void rule__STRepeatArrayInitElement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6866:1: ( rule__STRepeatArrayInitElement__Group__3__Impl rule__STRepeatArrayInitElement__Group__4 )
            // InternalSTFunctionParser.g:6867:2: rule__STRepeatArrayInitElement__Group__3__Impl rule__STRepeatArrayInitElement__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__STRepeatArrayInitElement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__3"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__3__Impl"
    // InternalSTFunctionParser.g:6874:1: rule__STRepeatArrayInitElement__Group__3__Impl : ( ( rule__STRepeatArrayInitElement__Group_3__0 )* ) ;
    public final void rule__STRepeatArrayInitElement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6878:1: ( ( ( rule__STRepeatArrayInitElement__Group_3__0 )* ) )
            // InternalSTFunctionParser.g:6879:1: ( ( rule__STRepeatArrayInitElement__Group_3__0 )* )
            {
            // InternalSTFunctionParser.g:6879:1: ( ( rule__STRepeatArrayInitElement__Group_3__0 )* )
            // InternalSTFunctionParser.g:6880:2: ( rule__STRepeatArrayInitElement__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:6881:2: ( rule__STRepeatArrayInitElement__Group_3__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==Comma) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6881:3: rule__STRepeatArrayInitElement__Group_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STRepeatArrayInitElement__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__4"
    // InternalSTFunctionParser.g:6889:1: rule__STRepeatArrayInitElement__Group__4 : rule__STRepeatArrayInitElement__Group__4__Impl ;
    public final void rule__STRepeatArrayInitElement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6893:1: ( rule__STRepeatArrayInitElement__Group__4__Impl )
            // InternalSTFunctionParser.g:6894:2: rule__STRepeatArrayInitElement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__4"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group__4__Impl"
    // InternalSTFunctionParser.g:6900:1: rule__STRepeatArrayInitElement__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__STRepeatArrayInitElement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6904:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:6905:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:6905:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:6906:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group_3__0"
    // InternalSTFunctionParser.g:6916:1: rule__STRepeatArrayInitElement__Group_3__0 : rule__STRepeatArrayInitElement__Group_3__0__Impl rule__STRepeatArrayInitElement__Group_3__1 ;
    public final void rule__STRepeatArrayInitElement__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6920:1: ( rule__STRepeatArrayInitElement__Group_3__0__Impl rule__STRepeatArrayInitElement__Group_3__1 )
            // InternalSTFunctionParser.g:6921:2: rule__STRepeatArrayInitElement__Group_3__0__Impl rule__STRepeatArrayInitElement__Group_3__1
            {
            pushFollow(FOLLOW_14);
            rule__STRepeatArrayInitElement__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group_3__0"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group_3__0__Impl"
    // InternalSTFunctionParser.g:6928:1: rule__STRepeatArrayInitElement__Group_3__0__Impl : ( Comma ) ;
    public final void rule__STRepeatArrayInitElement__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6932:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:6933:1: ( Comma )
            {
            // InternalSTFunctionParser.g:6933:1: ( Comma )
            // InternalSTFunctionParser.g:6934:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getCommaKeyword_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group_3__0__Impl"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group_3__1"
    // InternalSTFunctionParser.g:6943:1: rule__STRepeatArrayInitElement__Group_3__1 : rule__STRepeatArrayInitElement__Group_3__1__Impl ;
    public final void rule__STRepeatArrayInitElement__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6947:1: ( rule__STRepeatArrayInitElement__Group_3__1__Impl )
            // InternalSTFunctionParser.g:6948:2: rule__STRepeatArrayInitElement__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group_3__1"


    // $ANTLR start "rule__STRepeatArrayInitElement__Group_3__1__Impl"
    // InternalSTFunctionParser.g:6954:1: rule__STRepeatArrayInitElement__Group_3__1__Impl : ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 ) ) ;
    public final void rule__STRepeatArrayInitElement__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6958:1: ( ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:6959:1: ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:6959:1: ( ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 ) )
            // InternalSTFunctionParser.g:6960:2: ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:6961:2: ( rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 )
            // InternalSTFunctionParser.g:6961:3: rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__Group_3__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__0"
    // InternalSTFunctionParser.g:6970:1: rule__STStructInitializerExpression__Group__0 : rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1 ;
    public final void rule__STStructInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6974:1: ( rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1 )
            // InternalSTFunctionParser.g:6975:2: rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STStructInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6982:1: rule__STStructInitializerExpression__Group__0__Impl : ( ( rule__STStructInitializerExpression__Group_0__0 )? ) ;
    public final void rule__STStructInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6986:1: ( ( ( rule__STStructInitializerExpression__Group_0__0 )? ) )
            // InternalSTFunctionParser.g:6987:1: ( ( rule__STStructInitializerExpression__Group_0__0 )? )
            {
            // InternalSTFunctionParser.g:6987:1: ( ( rule__STStructInitializerExpression__Group_0__0 )? )
            // InternalSTFunctionParser.g:6988:2: ( rule__STStructInitializerExpression__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_0()); 
            }
            // InternalSTFunctionParser.g:6989:2: ( rule__STStructInitializerExpression__Group_0__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_ID) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSTFunctionParser.g:6989:3: rule__STStructInitializerExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStructInitializerExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__1"
    // InternalSTFunctionParser.g:6997:1: rule__STStructInitializerExpression__Group__1 : rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2 ;
    public final void rule__STStructInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7001:1: ( rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2 )
            // InternalSTFunctionParser.g:7002:2: rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STStructInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7009:1: rule__STStructInitializerExpression__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__STStructInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7013:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:7014:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:7014:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:7015:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__2"
    // InternalSTFunctionParser.g:7024:1: rule__STStructInitializerExpression__Group__2 : rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3 ;
    public final void rule__STStructInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7028:1: ( rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3 )
            // InternalSTFunctionParser.g:7029:2: rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STStructInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__2"


    // $ANTLR start "rule__STStructInitializerExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:7036:1: rule__STStructInitializerExpression__Group__2__Impl : ( ( rule__STStructInitializerExpression__ValuesAssignment_2 ) ) ;
    public final void rule__STStructInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7040:1: ( ( ( rule__STStructInitializerExpression__ValuesAssignment_2 ) ) )
            // InternalSTFunctionParser.g:7041:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:7041:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_2 ) )
            // InternalSTFunctionParser.g:7042:2: ( rule__STStructInitializerExpression__ValuesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_2()); 
            }
            // InternalSTFunctionParser.g:7043:2: ( rule__STStructInitializerExpression__ValuesAssignment_2 )
            // InternalSTFunctionParser.g:7043:3: rule__STStructInitializerExpression__ValuesAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__ValuesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__3"
    // InternalSTFunctionParser.g:7051:1: rule__STStructInitializerExpression__Group__3 : rule__STStructInitializerExpression__Group__3__Impl rule__STStructInitializerExpression__Group__4 ;
    public final void rule__STStructInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7055:1: ( rule__STStructInitializerExpression__Group__3__Impl rule__STStructInitializerExpression__Group__4 )
            // InternalSTFunctionParser.g:7056:2: rule__STStructInitializerExpression__Group__3__Impl rule__STStructInitializerExpression__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__STStructInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__3"


    // $ANTLR start "rule__STStructInitializerExpression__Group__3__Impl"
    // InternalSTFunctionParser.g:7063:1: rule__STStructInitializerExpression__Group__3__Impl : ( ( rule__STStructInitializerExpression__Group_3__0 )* ) ;
    public final void rule__STStructInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7067:1: ( ( ( rule__STStructInitializerExpression__Group_3__0 )* ) )
            // InternalSTFunctionParser.g:7068:1: ( ( rule__STStructInitializerExpression__Group_3__0 )* )
            {
            // InternalSTFunctionParser.g:7068:1: ( ( rule__STStructInitializerExpression__Group_3__0 )* )
            // InternalSTFunctionParser.g:7069:2: ( rule__STStructInitializerExpression__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:7070:2: ( rule__STStructInitializerExpression__Group_3__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==Comma) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7070:3: rule__STStructInitializerExpression__Group_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STStructInitializerExpression__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__4"
    // InternalSTFunctionParser.g:7078:1: rule__STStructInitializerExpression__Group__4 : rule__STStructInitializerExpression__Group__4__Impl ;
    public final void rule__STStructInitializerExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7082:1: ( rule__STStructInitializerExpression__Group__4__Impl )
            // InternalSTFunctionParser.g:7083:2: rule__STStructInitializerExpression__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__4"


    // $ANTLR start "rule__STStructInitializerExpression__Group__4__Impl"
    // InternalSTFunctionParser.g:7089:1: rule__STStructInitializerExpression__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__STStructInitializerExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7093:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:7094:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:7094:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:7095:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__4__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_0__0"
    // InternalSTFunctionParser.g:7105:1: rule__STStructInitializerExpression__Group_0__0 : rule__STStructInitializerExpression__Group_0__0__Impl rule__STStructInitializerExpression__Group_0__1 ;
    public final void rule__STStructInitializerExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7109:1: ( rule__STStructInitializerExpression__Group_0__0__Impl rule__STStructInitializerExpression__Group_0__1 )
            // InternalSTFunctionParser.g:7110:2: rule__STStructInitializerExpression__Group_0__0__Impl rule__STStructInitializerExpression__Group_0__1
            {
            pushFollow(FOLLOW_34);
            rule__STStructInitializerExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_0__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group_0__0__Impl"
    // InternalSTFunctionParser.g:7117:1: rule__STStructInitializerExpression__Group_0__0__Impl : ( ( rule__STStructInitializerExpression__TypeAssignment_0_0 ) ) ;
    public final void rule__STStructInitializerExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7121:1: ( ( ( rule__STStructInitializerExpression__TypeAssignment_0_0 ) ) )
            // InternalSTFunctionParser.g:7122:1: ( ( rule__STStructInitializerExpression__TypeAssignment_0_0 ) )
            {
            // InternalSTFunctionParser.g:7122:1: ( ( rule__STStructInitializerExpression__TypeAssignment_0_0 ) )
            // InternalSTFunctionParser.g:7123:2: ( rule__STStructInitializerExpression__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTFunctionParser.g:7124:2: ( rule__STStructInitializerExpression__TypeAssignment_0_0 )
            // InternalSTFunctionParser.g:7124:3: rule__STStructInitializerExpression__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_0__1"
    // InternalSTFunctionParser.g:7132:1: rule__STStructInitializerExpression__Group_0__1 : rule__STStructInitializerExpression__Group_0__1__Impl ;
    public final void rule__STStructInitializerExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7136:1: ( rule__STStructInitializerExpression__Group_0__1__Impl )
            // InternalSTFunctionParser.g:7137:2: rule__STStructInitializerExpression__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_0__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group_0__1__Impl"
    // InternalSTFunctionParser.g:7143:1: rule__STStructInitializerExpression__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STStructInitializerExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7147:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:7148:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:7148:1: ( NumberSign )
            // InternalSTFunctionParser.g:7149:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_3__0"
    // InternalSTFunctionParser.g:7159:1: rule__STStructInitializerExpression__Group_3__0 : rule__STStructInitializerExpression__Group_3__0__Impl rule__STStructInitializerExpression__Group_3__1 ;
    public final void rule__STStructInitializerExpression__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7163:1: ( rule__STStructInitializerExpression__Group_3__0__Impl rule__STStructInitializerExpression__Group_3__1 )
            // InternalSTFunctionParser.g:7164:2: rule__STStructInitializerExpression__Group_3__0__Impl rule__STStructInitializerExpression__Group_3__1
            {
            pushFollow(FOLLOW_33);
            rule__STStructInitializerExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_3__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group_3__0__Impl"
    // InternalSTFunctionParser.g:7171:1: rule__STStructInitializerExpression__Group_3__0__Impl : ( Comma ) ;
    public final void rule__STStructInitializerExpression__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7175:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:7176:1: ( Comma )
            {
            // InternalSTFunctionParser.g:7176:1: ( Comma )
            // InternalSTFunctionParser.g:7177:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getCommaKeyword_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_3__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_3__1"
    // InternalSTFunctionParser.g:7186:1: rule__STStructInitializerExpression__Group_3__1 : rule__STStructInitializerExpression__Group_3__1__Impl ;
    public final void rule__STStructInitializerExpression__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7190:1: ( rule__STStructInitializerExpression__Group_3__1__Impl )
            // InternalSTFunctionParser.g:7191:2: rule__STStructInitializerExpression__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_3__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group_3__1__Impl"
    // InternalSTFunctionParser.g:7197:1: rule__STStructInitializerExpression__Group_3__1__Impl : ( ( rule__STStructInitializerExpression__ValuesAssignment_3_1 ) ) ;
    public final void rule__STStructInitializerExpression__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7201:1: ( ( ( rule__STStructInitializerExpression__ValuesAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:7202:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:7202:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_3_1 ) )
            // InternalSTFunctionParser.g:7203:2: ( rule__STStructInitializerExpression__ValuesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:7204:2: ( rule__STStructInitializerExpression__ValuesAssignment_3_1 )
            // InternalSTFunctionParser.g:7204:3: rule__STStructInitializerExpression__ValuesAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__ValuesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_3__1__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__0"
    // InternalSTFunctionParser.g:7213:1: rule__STStructInitElement__Group__0 : rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1 ;
    public final void rule__STStructInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7217:1: ( rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1 )
            // InternalSTFunctionParser.g:7218:2: rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STStructInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__0"


    // $ANTLR start "rule__STStructInitElement__Group__0__Impl"
    // InternalSTFunctionParser.g:7225:1: rule__STStructInitElement__Group__0__Impl : ( ( rule__STStructInitElement__VariableAssignment_0 ) ) ;
    public final void rule__STStructInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7229:1: ( ( ( rule__STStructInitElement__VariableAssignment_0 ) ) )
            // InternalSTFunctionParser.g:7230:1: ( ( rule__STStructInitElement__VariableAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:7230:1: ( ( rule__STStructInitElement__VariableAssignment_0 ) )
            // InternalSTFunctionParser.g:7231:2: ( rule__STStructInitElement__VariableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableAssignment_0()); 
            }
            // InternalSTFunctionParser.g:7232:2: ( rule__STStructInitElement__VariableAssignment_0 )
            // InternalSTFunctionParser.g:7232:3: rule__STStructInitElement__VariableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__VariableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__0__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__1"
    // InternalSTFunctionParser.g:7240:1: rule__STStructInitElement__Group__1 : rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2 ;
    public final void rule__STStructInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7244:1: ( rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2 )
            // InternalSTFunctionParser.g:7245:2: rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STStructInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__1"


    // $ANTLR start "rule__STStructInitElement__Group__1__Impl"
    // InternalSTFunctionParser.g:7252:1: rule__STStructInitElement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STStructInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7256:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:7257:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:7257:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:7258:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__1__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__2"
    // InternalSTFunctionParser.g:7267:1: rule__STStructInitElement__Group__2 : rule__STStructInitElement__Group__2__Impl ;
    public final void rule__STStructInitElement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7271:1: ( rule__STStructInitElement__Group__2__Impl )
            // InternalSTFunctionParser.g:7272:2: rule__STStructInitElement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__2"


    // $ANTLR start "rule__STStructInitElement__Group__2__Impl"
    // InternalSTFunctionParser.g:7278:1: rule__STStructInitElement__Group__2__Impl : ( ( rule__STStructInitElement__ValueAssignment_2 ) ) ;
    public final void rule__STStructInitElement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7282:1: ( ( ( rule__STStructInitElement__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:7283:1: ( ( rule__STStructInitElement__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:7283:1: ( ( rule__STStructInitElement__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:7284:2: ( rule__STStructInitElement__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:7285:2: ( rule__STStructInitElement__ValueAssignment_2 )
            // InternalSTFunctionParser.g:7285:3: rule__STStructInitElement__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__2__Impl"


    // $ANTLR start "rule__STPragma__Group__0"
    // InternalSTFunctionParser.g:7294:1: rule__STPragma__Group__0 : rule__STPragma__Group__0__Impl rule__STPragma__Group__1 ;
    public final void rule__STPragma__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7298:1: ( rule__STPragma__Group__0__Impl rule__STPragma__Group__1 )
            // InternalSTFunctionParser.g:7299:2: rule__STPragma__Group__0__Impl rule__STPragma__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__STPragma__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPragma__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__0"


    // $ANTLR start "rule__STPragma__Group__0__Impl"
    // InternalSTFunctionParser.g:7306:1: rule__STPragma__Group__0__Impl : ( () ) ;
    public final void rule__STPragma__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7310:1: ( ( () ) )
            // InternalSTFunctionParser.g:7311:1: ( () )
            {
            // InternalSTFunctionParser.g:7311:1: ( () )
            // InternalSTFunctionParser.g:7312:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getSTPragmaAction_0()); 
            }
            // InternalSTFunctionParser.g:7313:2: ()
            // InternalSTFunctionParser.g:7313:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getSTPragmaAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__0__Impl"


    // $ANTLR start "rule__STPragma__Group__1"
    // InternalSTFunctionParser.g:7321:1: rule__STPragma__Group__1 : rule__STPragma__Group__1__Impl rule__STPragma__Group__2 ;
    public final void rule__STPragma__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7325:1: ( rule__STPragma__Group__1__Impl rule__STPragma__Group__2 )
            // InternalSTFunctionParser.g:7326:2: rule__STPragma__Group__1__Impl rule__STPragma__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__STPragma__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPragma__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__1"


    // $ANTLR start "rule__STPragma__Group__1__Impl"
    // InternalSTFunctionParser.g:7333:1: rule__STPragma__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__STPragma__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7337:1: ( ( LeftCurlyBracket ) )
            // InternalSTFunctionParser.g:7338:1: ( LeftCurlyBracket )
            {
            // InternalSTFunctionParser.g:7338:1: ( LeftCurlyBracket )
            // InternalSTFunctionParser.g:7339:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__1__Impl"


    // $ANTLR start "rule__STPragma__Group__2"
    // InternalSTFunctionParser.g:7348:1: rule__STPragma__Group__2 : rule__STPragma__Group__2__Impl rule__STPragma__Group__3 ;
    public final void rule__STPragma__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7352:1: ( rule__STPragma__Group__2__Impl rule__STPragma__Group__3 )
            // InternalSTFunctionParser.g:7353:2: rule__STPragma__Group__2__Impl rule__STPragma__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__STPragma__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPragma__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__2"


    // $ANTLR start "rule__STPragma__Group__2__Impl"
    // InternalSTFunctionParser.g:7360:1: rule__STPragma__Group__2__Impl : ( ( rule__STPragma__AttributesAssignment_2 ) ) ;
    public final void rule__STPragma__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7364:1: ( ( ( rule__STPragma__AttributesAssignment_2 ) ) )
            // InternalSTFunctionParser.g:7365:1: ( ( rule__STPragma__AttributesAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:7365:1: ( ( rule__STPragma__AttributesAssignment_2 ) )
            // InternalSTFunctionParser.g:7366:2: ( rule__STPragma__AttributesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getAttributesAssignment_2()); 
            }
            // InternalSTFunctionParser.g:7367:2: ( rule__STPragma__AttributesAssignment_2 )
            // InternalSTFunctionParser.g:7367:3: rule__STPragma__AttributesAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STPragma__AttributesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getAttributesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__2__Impl"


    // $ANTLR start "rule__STPragma__Group__3"
    // InternalSTFunctionParser.g:7375:1: rule__STPragma__Group__3 : rule__STPragma__Group__3__Impl rule__STPragma__Group__4 ;
    public final void rule__STPragma__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7379:1: ( rule__STPragma__Group__3__Impl rule__STPragma__Group__4 )
            // InternalSTFunctionParser.g:7380:2: rule__STPragma__Group__3__Impl rule__STPragma__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__STPragma__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPragma__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__3"


    // $ANTLR start "rule__STPragma__Group__3__Impl"
    // InternalSTFunctionParser.g:7387:1: rule__STPragma__Group__3__Impl : ( ( rule__STPragma__Group_3__0 )* ) ;
    public final void rule__STPragma__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7391:1: ( ( ( rule__STPragma__Group_3__0 )* ) )
            // InternalSTFunctionParser.g:7392:1: ( ( rule__STPragma__Group_3__0 )* )
            {
            // InternalSTFunctionParser.g:7392:1: ( ( rule__STPragma__Group_3__0 )* )
            // InternalSTFunctionParser.g:7393:2: ( rule__STPragma__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:7394:2: ( rule__STPragma__Group_3__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==Comma) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7394:3: rule__STPragma__Group_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STPragma__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__3__Impl"


    // $ANTLR start "rule__STPragma__Group__4"
    // InternalSTFunctionParser.g:7402:1: rule__STPragma__Group__4 : rule__STPragma__Group__4__Impl ;
    public final void rule__STPragma__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7406:1: ( rule__STPragma__Group__4__Impl )
            // InternalSTFunctionParser.g:7407:2: rule__STPragma__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPragma__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__4"


    // $ANTLR start "rule__STPragma__Group__4__Impl"
    // InternalSTFunctionParser.g:7413:1: rule__STPragma__Group__4__Impl : ( RightCurlyBracket ) ;
    public final void rule__STPragma__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7417:1: ( ( RightCurlyBracket ) )
            // InternalSTFunctionParser.g:7418:1: ( RightCurlyBracket )
            {
            // InternalSTFunctionParser.g:7418:1: ( RightCurlyBracket )
            // InternalSTFunctionParser.g:7419:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group__4__Impl"


    // $ANTLR start "rule__STPragma__Group_3__0"
    // InternalSTFunctionParser.g:7429:1: rule__STPragma__Group_3__0 : rule__STPragma__Group_3__0__Impl rule__STPragma__Group_3__1 ;
    public final void rule__STPragma__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7433:1: ( rule__STPragma__Group_3__0__Impl rule__STPragma__Group_3__1 )
            // InternalSTFunctionParser.g:7434:2: rule__STPragma__Group_3__0__Impl rule__STPragma__Group_3__1
            {
            pushFollow(FOLLOW_6);
            rule__STPragma__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPragma__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group_3__0"


    // $ANTLR start "rule__STPragma__Group_3__0__Impl"
    // InternalSTFunctionParser.g:7441:1: rule__STPragma__Group_3__0__Impl : ( Comma ) ;
    public final void rule__STPragma__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7445:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:7446:1: ( Comma )
            {
            // InternalSTFunctionParser.g:7446:1: ( Comma )
            // InternalSTFunctionParser.g:7447:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getCommaKeyword_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group_3__0__Impl"


    // $ANTLR start "rule__STPragma__Group_3__1"
    // InternalSTFunctionParser.g:7456:1: rule__STPragma__Group_3__1 : rule__STPragma__Group_3__1__Impl ;
    public final void rule__STPragma__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7460:1: ( rule__STPragma__Group_3__1__Impl )
            // InternalSTFunctionParser.g:7461:2: rule__STPragma__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPragma__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group_3__1"


    // $ANTLR start "rule__STPragma__Group_3__1__Impl"
    // InternalSTFunctionParser.g:7467:1: rule__STPragma__Group_3__1__Impl : ( ( rule__STPragma__AttributesAssignment_3_1 ) ) ;
    public final void rule__STPragma__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7471:1: ( ( ( rule__STPragma__AttributesAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:7472:1: ( ( rule__STPragma__AttributesAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:7472:1: ( ( rule__STPragma__AttributesAssignment_3_1 ) )
            // InternalSTFunctionParser.g:7473:2: ( rule__STPragma__AttributesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getAttributesAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:7474:2: ( rule__STPragma__AttributesAssignment_3_1 )
            // InternalSTFunctionParser.g:7474:3: rule__STPragma__AttributesAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STPragma__AttributesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getAttributesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__Group_3__1__Impl"


    // $ANTLR start "rule__STAttribute__Group__0"
    // InternalSTFunctionParser.g:7483:1: rule__STAttribute__Group__0 : rule__STAttribute__Group__0__Impl rule__STAttribute__Group__1 ;
    public final void rule__STAttribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7487:1: ( rule__STAttribute__Group__0__Impl rule__STAttribute__Group__1 )
            // InternalSTFunctionParser.g:7488:2: rule__STAttribute__Group__0__Impl rule__STAttribute__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STAttribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAttribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__Group__0"


    // $ANTLR start "rule__STAttribute__Group__0__Impl"
    // InternalSTFunctionParser.g:7495:1: rule__STAttribute__Group__0__Impl : ( ( rule__STAttribute__DeclarationAssignment_0 ) ) ;
    public final void rule__STAttribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7499:1: ( ( ( rule__STAttribute__DeclarationAssignment_0 ) ) )
            // InternalSTFunctionParser.g:7500:1: ( ( rule__STAttribute__DeclarationAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:7500:1: ( ( rule__STAttribute__DeclarationAssignment_0 ) )
            // InternalSTFunctionParser.g:7501:2: ( rule__STAttribute__DeclarationAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getDeclarationAssignment_0()); 
            }
            // InternalSTFunctionParser.g:7502:2: ( rule__STAttribute__DeclarationAssignment_0 )
            // InternalSTFunctionParser.g:7502:3: rule__STAttribute__DeclarationAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAttribute__DeclarationAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getDeclarationAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__Group__0__Impl"


    // $ANTLR start "rule__STAttribute__Group__1"
    // InternalSTFunctionParser.g:7510:1: rule__STAttribute__Group__1 : rule__STAttribute__Group__1__Impl rule__STAttribute__Group__2 ;
    public final void rule__STAttribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7514:1: ( rule__STAttribute__Group__1__Impl rule__STAttribute__Group__2 )
            // InternalSTFunctionParser.g:7515:2: rule__STAttribute__Group__1__Impl rule__STAttribute__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STAttribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAttribute__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__Group__1"


    // $ANTLR start "rule__STAttribute__Group__1__Impl"
    // InternalSTFunctionParser.g:7522:1: rule__STAttribute__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAttribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7526:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:7527:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:7527:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:7528:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__Group__1__Impl"


    // $ANTLR start "rule__STAttribute__Group__2"
    // InternalSTFunctionParser.g:7537:1: rule__STAttribute__Group__2 : rule__STAttribute__Group__2__Impl ;
    public final void rule__STAttribute__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7541:1: ( rule__STAttribute__Group__2__Impl )
            // InternalSTFunctionParser.g:7542:2: rule__STAttribute__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAttribute__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__Group__2"


    // $ANTLR start "rule__STAttribute__Group__2__Impl"
    // InternalSTFunctionParser.g:7548:1: rule__STAttribute__Group__2__Impl : ( ( rule__STAttribute__ValueAssignment_2 ) ) ;
    public final void rule__STAttribute__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7552:1: ( ( ( rule__STAttribute__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:7553:1: ( ( rule__STAttribute__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:7553:1: ( ( rule__STAttribute__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:7554:2: ( rule__STAttribute__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:7555:2: ( rule__STAttribute__ValueAssignment_2 )
            // InternalSTFunctionParser.g:7555:3: rule__STAttribute__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAttribute__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__Group__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTFunctionParser.g:7564:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7568:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTFunctionParser.g:7569:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTFunctionParser.g:7576:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7580:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:7581:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:7581:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTFunctionParser.g:7582:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:7583:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTFunctionParser.g:7583:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTFunctionParser.g:7591:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7595:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTFunctionParser.g:7596:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTFunctionParser.g:7602:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7606:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:7607:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:7607:1: ( Semicolon )
            // InternalSTFunctionParser.g:7608:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0"
    // InternalSTFunctionParser.g:7618:1: rule__STStatement__Group_0_0_6__0 : rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 ;
    public final void rule__STStatement__Group_0_0_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7622:1: ( rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 )
            // InternalSTFunctionParser.g:7623:2: rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1
            {
            pushFollow(FOLLOW_38);
            rule__STStatement__Group_0_0_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0__Impl"
    // InternalSTFunctionParser.g:7630:1: rule__STStatement__Group_0_0_6__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7634:1: ( ( () ) )
            // InternalSTFunctionParser.g:7635:1: ( () )
            {
            // InternalSTFunctionParser.g:7635:1: ( () )
            // InternalSTFunctionParser.g:7636:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }
            // InternalSTFunctionParser.g:7637:2: ()
            // InternalSTFunctionParser.g:7637:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1"
    // InternalSTFunctionParser.g:7645:1: rule__STStatement__Group_0_0_6__1 : rule__STStatement__Group_0_0_6__1__Impl ;
    public final void rule__STStatement__Group_0_0_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7649:1: ( rule__STStatement__Group_0_0_6__1__Impl )
            // InternalSTFunctionParser.g:7650:2: rule__STStatement__Group_0_0_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1__Impl"
    // InternalSTFunctionParser.g:7656:1: rule__STStatement__Group_0_0_6__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7660:1: ( ( RETURN ) )
            // InternalSTFunctionParser.g:7661:1: ( RETURN )
            {
            // InternalSTFunctionParser.g:7661:1: ( RETURN )
            // InternalSTFunctionParser.g:7662:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTFunctionParser.g:7672:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7676:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTFunctionParser.g:7677:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_39);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTFunctionParser.g:7684:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7688:1: ( ( () ) )
            // InternalSTFunctionParser.g:7689:1: ( () )
            {
            // InternalSTFunctionParser.g:7689:1: ( () )
            // InternalSTFunctionParser.g:7690:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }
            // InternalSTFunctionParser.g:7691:2: ()
            // InternalSTFunctionParser.g:7691:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTFunctionParser.g:7699:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7703:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTFunctionParser.g:7704:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTFunctionParser.g:7710:1: rule__STStatement__Group_0_0_7__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7714:1: ( ( CONTINUE ) )
            // InternalSTFunctionParser.g:7715:1: ( CONTINUE )
            {
            // InternalSTFunctionParser.g:7715:1: ( CONTINUE )
            // InternalSTFunctionParser.g:7716:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTFunctionParser.g:7726:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7730:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTFunctionParser.g:7731:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_40);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTFunctionParser.g:7738:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7742:1: ( ( () ) )
            // InternalSTFunctionParser.g:7743:1: ( () )
            {
            // InternalSTFunctionParser.g:7743:1: ( () )
            // InternalSTFunctionParser.g:7744:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }
            // InternalSTFunctionParser.g:7745:2: ()
            // InternalSTFunctionParser.g:7745:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTFunctionParser.g:7753:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7757:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTFunctionParser.g:7758:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTFunctionParser.g:7764:1: rule__STStatement__Group_0_0_8__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7768:1: ( ( EXIT ) )
            // InternalSTFunctionParser.g:7769:1: ( EXIT )
            {
            // InternalSTFunctionParser.g:7769:1: ( EXIT )
            // InternalSTFunctionParser.g:7770:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTFunctionParser.g:7780:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7784:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTFunctionParser.g:7785:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7792:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7796:1: ( ( () ) )
            // InternalSTFunctionParser.g:7797:1: ( () )
            {
            // InternalSTFunctionParser.g:7797:1: ( () )
            // InternalSTFunctionParser.g:7798:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTFunctionParser.g:7799:2: ()
            // InternalSTFunctionParser.g:7799:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTFunctionParser.g:7807:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7811:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7812:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7818:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7822:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:7823:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:7823:1: ( Semicolon )
            // InternalSTFunctionParser.g:7824:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignment__Group__0"
    // InternalSTFunctionParser.g:7834:1: rule__STAssignment__Group__0 : rule__STAssignment__Group__0__Impl rule__STAssignment__Group__1 ;
    public final void rule__STAssignment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7838:1: ( rule__STAssignment__Group__0__Impl rule__STAssignment__Group__1 )
            // InternalSTFunctionParser.g:7839:2: rule__STAssignment__Group__0__Impl rule__STAssignment__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STAssignment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group__0"


    // $ANTLR start "rule__STAssignment__Group__0__Impl"
    // InternalSTFunctionParser.g:7846:1: rule__STAssignment__Group__0__Impl : ( ruleSTExpression ) ;
    public final void rule__STAssignment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7850:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:7851:1: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:7851:1: ( ruleSTExpression )
            // InternalSTFunctionParser.g:7852:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group__0__Impl"


    // $ANTLR start "rule__STAssignment__Group__1"
    // InternalSTFunctionParser.g:7861:1: rule__STAssignment__Group__1 : rule__STAssignment__Group__1__Impl ;
    public final void rule__STAssignment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7865:1: ( rule__STAssignment__Group__1__Impl )
            // InternalSTFunctionParser.g:7866:2: rule__STAssignment__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group__1"


    // $ANTLR start "rule__STAssignment__Group__1__Impl"
    // InternalSTFunctionParser.g:7872:1: rule__STAssignment__Group__1__Impl : ( ( rule__STAssignment__Group_1__0 )? ) ;
    public final void rule__STAssignment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7876:1: ( ( ( rule__STAssignment__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:7877:1: ( ( rule__STAssignment__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:7877:1: ( ( rule__STAssignment__Group_1__0 )? )
            // InternalSTFunctionParser.g:7878:2: ( rule__STAssignment__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7879:2: ( rule__STAssignment__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==ColonEqualsSign) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSTFunctionParser.g:7879:3: rule__STAssignment__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAssignment__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group__1__Impl"


    // $ANTLR start "rule__STAssignment__Group_1__0"
    // InternalSTFunctionParser.g:7888:1: rule__STAssignment__Group_1__0 : rule__STAssignment__Group_1__0__Impl rule__STAssignment__Group_1__1 ;
    public final void rule__STAssignment__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7892:1: ( rule__STAssignment__Group_1__0__Impl rule__STAssignment__Group_1__1 )
            // InternalSTFunctionParser.g:7893:2: rule__STAssignment__Group_1__0__Impl rule__STAssignment__Group_1__1
            {
            pushFollow(FOLLOW_35);
            rule__STAssignment__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignment__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group_1__0"


    // $ANTLR start "rule__STAssignment__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7900:1: rule__STAssignment__Group_1__0__Impl : ( () ) ;
    public final void rule__STAssignment__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7904:1: ( ( () ) )
            // InternalSTFunctionParser.g:7905:1: ( () )
            {
            // InternalSTFunctionParser.g:7905:1: ( () )
            // InternalSTFunctionParser.g:7906:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getSTAssignmentLeftAction_1_0()); 
            }
            // InternalSTFunctionParser.g:7907:2: ()
            // InternalSTFunctionParser.g:7907:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getSTAssignmentLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group_1__0__Impl"


    // $ANTLR start "rule__STAssignment__Group_1__1"
    // InternalSTFunctionParser.g:7915:1: rule__STAssignment__Group_1__1 : rule__STAssignment__Group_1__1__Impl rule__STAssignment__Group_1__2 ;
    public final void rule__STAssignment__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7919:1: ( rule__STAssignment__Group_1__1__Impl rule__STAssignment__Group_1__2 )
            // InternalSTFunctionParser.g:7920:2: rule__STAssignment__Group_1__1__Impl rule__STAssignment__Group_1__2
            {
            pushFollow(FOLLOW_13);
            rule__STAssignment__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignment__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group_1__1"


    // $ANTLR start "rule__STAssignment__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7927:1: rule__STAssignment__Group_1__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignment__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7931:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:7932:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:7932:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:7933:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getColonEqualsSignKeyword_1_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getColonEqualsSignKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignment__Group_1__2"
    // InternalSTFunctionParser.g:7942:1: rule__STAssignment__Group_1__2 : rule__STAssignment__Group_1__2__Impl ;
    public final void rule__STAssignment__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7946:1: ( rule__STAssignment__Group_1__2__Impl )
            // InternalSTFunctionParser.g:7947:2: rule__STAssignment__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignment__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group_1__2"


    // $ANTLR start "rule__STAssignment__Group_1__2__Impl"
    // InternalSTFunctionParser.g:7953:1: rule__STAssignment__Group_1__2__Impl : ( ( rule__STAssignment__RightAssignment_1_2 ) ) ;
    public final void rule__STAssignment__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7957:1: ( ( ( rule__STAssignment__RightAssignment_1_2 ) ) )
            // InternalSTFunctionParser.g:7958:1: ( ( rule__STAssignment__RightAssignment_1_2 ) )
            {
            // InternalSTFunctionParser.g:7958:1: ( ( rule__STAssignment__RightAssignment_1_2 ) )
            // InternalSTFunctionParser.g:7959:2: ( rule__STAssignment__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getRightAssignment_1_2()); 
            }
            // InternalSTFunctionParser.g:7960:2: ( rule__STAssignment__RightAssignment_1_2 )
            // InternalSTFunctionParser.g:7960:3: rule__STAssignment__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignment__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__Group_1__2__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0"
    // InternalSTFunctionParser.g:7969:1: rule__STCallNamedInputArgument__Group__0 : rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 ;
    public final void rule__STCallNamedInputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7973:1: ( rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 )
            // InternalSTFunctionParser.g:7974:2: rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STCallNamedInputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0__Impl"
    // InternalSTFunctionParser.g:7981:1: rule__STCallNamedInputArgument__Group__0__Impl : ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7985:1: ( ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) ) )
            // InternalSTFunctionParser.g:7986:1: ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:7986:1: ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) )
            // InternalSTFunctionParser.g:7987:2: ( rule__STCallNamedInputArgument__ParameterAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterAssignment_0()); 
            }
            // InternalSTFunctionParser.g:7988:2: ( rule__STCallNamedInputArgument__ParameterAssignment_0 )
            // InternalSTFunctionParser.g:7988:3: rule__STCallNamedInputArgument__ParameterAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__ParameterAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1"
    // InternalSTFunctionParser.g:7996:1: rule__STCallNamedInputArgument__Group__1 : rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 ;
    public final void rule__STCallNamedInputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8000:1: ( rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 )
            // InternalSTFunctionParser.g:8001:2: rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__STCallNamedInputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1__Impl"
    // InternalSTFunctionParser.g:8008:1: rule__STCallNamedInputArgument__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STCallNamedInputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8012:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:8013:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:8013:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:8014:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2"
    // InternalSTFunctionParser.g:8023:1: rule__STCallNamedInputArgument__Group__2 : rule__STCallNamedInputArgument__Group__2__Impl ;
    public final void rule__STCallNamedInputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8027:1: ( rule__STCallNamedInputArgument__Group__2__Impl )
            // InternalSTFunctionParser.g:8028:2: rule__STCallNamedInputArgument__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2__Impl"
    // InternalSTFunctionParser.g:8034:1: rule__STCallNamedInputArgument__Group__2__Impl : ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8038:1: ( ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) ) )
            // InternalSTFunctionParser.g:8039:1: ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:8039:1: ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) )
            // InternalSTFunctionParser.g:8040:2: ( rule__STCallNamedInputArgument__ArgumentAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentAssignment_2()); 
            }
            // InternalSTFunctionParser.g:8041:2: ( rule__STCallNamedInputArgument__ArgumentAssignment_2 )
            // InternalSTFunctionParser.g:8041:3: rule__STCallNamedInputArgument__ArgumentAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__ArgumentAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0"
    // InternalSTFunctionParser.g:8050:1: rule__STCallNamedOutputArgument__Group__0 : rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 ;
    public final void rule__STCallNamedOutputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8054:1: ( rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 )
            // InternalSTFunctionParser.g:8055:2: rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STCallNamedOutputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0__Impl"
    // InternalSTFunctionParser.g:8062:1: rule__STCallNamedOutputArgument__Group__0__Impl : ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) ;
    public final void rule__STCallNamedOutputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8066:1: ( ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) )
            // InternalSTFunctionParser.g:8067:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            {
            // InternalSTFunctionParser.g:8067:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            // InternalSTFunctionParser.g:8068:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8069:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==NOT) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSTFunctionParser.g:8069:3: rule__STCallNamedOutputArgument__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCallNamedOutputArgument__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1"
    // InternalSTFunctionParser.g:8077:1: rule__STCallNamedOutputArgument__Group__1 : rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 ;
    public final void rule__STCallNamedOutputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8081:1: ( rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 )
            // InternalSTFunctionParser.g:8082:2: rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__STCallNamedOutputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1__Impl"
    // InternalSTFunctionParser.g:8089:1: rule__STCallNamedOutputArgument__Group__1__Impl : ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8093:1: ( ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8094:1: ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8094:1: ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) )
            // InternalSTFunctionParser.g:8095:2: ( rule__STCallNamedOutputArgument__ParameterAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8096:2: ( rule__STCallNamedOutputArgument__ParameterAssignment_1 )
            // InternalSTFunctionParser.g:8096:3: rule__STCallNamedOutputArgument__ParameterAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__ParameterAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2"
    // InternalSTFunctionParser.g:8104:1: rule__STCallNamedOutputArgument__Group__2 : rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 ;
    public final void rule__STCallNamedOutputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8108:1: ( rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 )
            // InternalSTFunctionParser.g:8109:2: rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__STCallNamedOutputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2__Impl"
    // InternalSTFunctionParser.g:8116:1: rule__STCallNamedOutputArgument__Group__2__Impl : ( EqualsSignGreaterThanSign ) ;
    public final void rule__STCallNamedOutputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8120:1: ( ( EqualsSignGreaterThanSign ) )
            // InternalSTFunctionParser.g:8121:1: ( EqualsSignGreaterThanSign )
            {
            // InternalSTFunctionParser.g:8121:1: ( EqualsSignGreaterThanSign )
            // InternalSTFunctionParser.g:8122:2: EqualsSignGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }
            match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3"
    // InternalSTFunctionParser.g:8131:1: rule__STCallNamedOutputArgument__Group__3 : rule__STCallNamedOutputArgument__Group__3__Impl ;
    public final void rule__STCallNamedOutputArgument__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8135:1: ( rule__STCallNamedOutputArgument__Group__3__Impl )
            // InternalSTFunctionParser.g:8136:2: rule__STCallNamedOutputArgument__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3__Impl"
    // InternalSTFunctionParser.g:8142:1: rule__STCallNamedOutputArgument__Group__3__Impl : ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8146:1: ( ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) ) )
            // InternalSTFunctionParser.g:8147:1: ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:8147:1: ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) )
            // InternalSTFunctionParser.g:8148:2: ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8149:2: ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 )
            // InternalSTFunctionParser.g:8149:3: rule__STCallNamedOutputArgument__ArgumentAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__ArgumentAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__0"
    // InternalSTFunctionParser.g:8158:1: rule__STIfStatement__Group__0 : rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 ;
    public final void rule__STIfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8162:1: ( rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 )
            // InternalSTFunctionParser.g:8163:2: rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__STIfStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0"


    // $ANTLR start "rule__STIfStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:8170:1: rule__STIfStatement__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8174:1: ( ( IF ) )
            // InternalSTFunctionParser.g:8175:1: ( IF )
            {
            // InternalSTFunctionParser.g:8175:1: ( IF )
            // InternalSTFunctionParser.g:8176:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0__Impl"


    // $ANTLR start "rule__STIfStatement__Group__1"
    // InternalSTFunctionParser.g:8185:1: rule__STIfStatement__Group__1 : rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 ;
    public final void rule__STIfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8189:1: ( rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 )
            // InternalSTFunctionParser.g:8190:2: rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__STIfStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1"


    // $ANTLR start "rule__STIfStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:8197:1: rule__STIfStatement__Group__1__Impl : ( ( rule__STIfStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8201:1: ( ( ( rule__STIfStatement__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8202:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8202:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:8203:2: ( rule__STIfStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8204:2: ( rule__STIfStatement__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:8204:3: rule__STIfStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1__Impl"


    // $ANTLR start "rule__STIfStatement__Group__2"
    // InternalSTFunctionParser.g:8212:1: rule__STIfStatement__Group__2 : rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 ;
    public final void rule__STIfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8216:1: ( rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 )
            // InternalSTFunctionParser.g:8217:2: rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3
            {
            pushFollow(FOLLOW_44);
            rule__STIfStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2"


    // $ANTLR start "rule__STIfStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:8224:1: rule__STIfStatement__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8228:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:8229:1: ( THEN )
            {
            // InternalSTFunctionParser.g:8229:1: ( THEN )
            // InternalSTFunctionParser.g:8230:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatement__Group__3"
    // InternalSTFunctionParser.g:8239:1: rule__STIfStatement__Group__3 : rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 ;
    public final void rule__STIfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8243:1: ( rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 )
            // InternalSTFunctionParser.g:8244:2: rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4
            {
            pushFollow(FOLLOW_44);
            rule__STIfStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3"


    // $ANTLR start "rule__STIfStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:8251:1: rule__STIfStatement__Group__3__Impl : ( ( rule__STIfStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8255:1: ( ( ( rule__STIfStatement__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:8256:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:8256:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:8257:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8258:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==LDATE_AND_TIME||LA78_0==DATE_AND_TIME||LA78_0==LTIME_OF_DAY||LA78_0==TIME_OF_DAY||LA78_0==CONTINUE||LA78_0==WSTRING||LA78_0==REPEAT||LA78_0==RETURN||LA78_0==STRING||LA78_0==DWORD||LA78_0==FALSE||(LA78_0>=LDATE && LA78_0<=LWORD)||(LA78_0>=UDINT && LA78_0<=ULINT)||(LA78_0>=USINT && LA78_0<=DINT)||LA78_0==EXIT||(LA78_0>=LINT && LA78_0<=LTOD)||(LA78_0>=REAL && LA78_0<=SINT)||(LA78_0>=THIS && LA78_0<=TRUE)||LA78_0==UINT||LA78_0==WORD||(LA78_0>=AND && LA78_0<=NOT)||LA78_0==TOD||LA78_0==XOR||(LA78_0>=DT && LA78_0<=LT)||LA78_0==OR||LA78_0==LeftParenthesis||LA78_0==PlusSign||LA78_0==HyphenMinus||LA78_0==Semicolon||(LA78_0>=D && LA78_0<=T)||(LA78_0>=RULE_NON_DECIMAL && LA78_0<=RULE_INT)||(LA78_0>=RULE_ID && LA78_0<=RULE_STRING)) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8258:3: rule__STIfStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STIfStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__4"
    // InternalSTFunctionParser.g:8266:1: rule__STIfStatement__Group__4 : rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 ;
    public final void rule__STIfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8270:1: ( rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 )
            // InternalSTFunctionParser.g:8271:2: rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5
            {
            pushFollow(FOLLOW_44);
            rule__STIfStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4"


    // $ANTLR start "rule__STIfStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:8278:1: rule__STIfStatement__Group__4__Impl : ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8282:1: ( ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) )
            // InternalSTFunctionParser.g:8283:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:8283:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            // InternalSTFunctionParser.g:8284:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }
            // InternalSTFunctionParser.g:8285:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==ELSIF) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8285:3: rule__STIfStatement__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__STIfStatement__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4__Impl"


    // $ANTLR start "rule__STIfStatement__Group__5"
    // InternalSTFunctionParser.g:8293:1: rule__STIfStatement__Group__5 : rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 ;
    public final void rule__STIfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8297:1: ( rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 )
            // InternalSTFunctionParser.g:8298:2: rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6
            {
            pushFollow(FOLLOW_44);
            rule__STIfStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5"


    // $ANTLR start "rule__STIfStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:8305:1: rule__STIfStatement__Group__5__Impl : ( ( rule__STIfStatement__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8309:1: ( ( ( rule__STIfStatement__ElseAssignment_5 )? ) )
            // InternalSTFunctionParser.g:8310:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            {
            // InternalSTFunctionParser.g:8310:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            // InternalSTFunctionParser.g:8311:2: ( rule__STIfStatement__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }
            // InternalSTFunctionParser.g:8312:2: ( rule__STIfStatement__ElseAssignment_5 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==ELSE) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSTFunctionParser.g:8312:3: rule__STIfStatement__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatement__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5__Impl"


    // $ANTLR start "rule__STIfStatement__Group__6"
    // InternalSTFunctionParser.g:8320:1: rule__STIfStatement__Group__6 : rule__STIfStatement__Group__6__Impl ;
    public final void rule__STIfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8324:1: ( rule__STIfStatement__Group__6__Impl )
            // InternalSTFunctionParser.g:8325:2: rule__STIfStatement__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6"


    // $ANTLR start "rule__STIfStatement__Group__6__Impl"
    // InternalSTFunctionParser.g:8331:1: rule__STIfStatement__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8335:1: ( ( END_IF ) )
            // InternalSTFunctionParser.g:8336:1: ( END_IF )
            {
            // InternalSTFunctionParser.g:8336:1: ( END_IF )
            // InternalSTFunctionParser.g:8337:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTFunctionParser.g:8347:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8351:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTFunctionParser.g:8352:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTFunctionParser.g:8359:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8363:1: ( ( ELSIF ) )
            // InternalSTFunctionParser.g:8364:1: ( ELSIF )
            {
            // InternalSTFunctionParser.g:8364:1: ( ELSIF )
            // InternalSTFunctionParser.g:8365:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTFunctionParser.g:8374:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8378:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTFunctionParser.g:8379:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTFunctionParser.g:8386:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8390:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8391:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8391:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:8392:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8393:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:8393:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTFunctionParser.g:8401:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8405:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTFunctionParser.g:8406:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTFunctionParser.g:8413:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8417:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:8418:1: ( THEN )
            {
            // InternalSTFunctionParser.g:8418:1: ( THEN )
            // InternalSTFunctionParser.g:8419:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTFunctionParser.g:8428:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8432:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTFunctionParser.g:8433:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTFunctionParser.g:8439:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8443:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:8444:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:8444:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:8445:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8446:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==LDATE_AND_TIME||LA81_0==DATE_AND_TIME||LA81_0==LTIME_OF_DAY||LA81_0==TIME_OF_DAY||LA81_0==CONTINUE||LA81_0==WSTRING||LA81_0==REPEAT||LA81_0==RETURN||LA81_0==STRING||LA81_0==DWORD||LA81_0==FALSE||(LA81_0>=LDATE && LA81_0<=LWORD)||(LA81_0>=UDINT && LA81_0<=ULINT)||(LA81_0>=USINT && LA81_0<=DINT)||LA81_0==EXIT||(LA81_0>=LINT && LA81_0<=LTOD)||(LA81_0>=REAL && LA81_0<=SINT)||(LA81_0>=THIS && LA81_0<=TRUE)||LA81_0==UINT||LA81_0==WORD||(LA81_0>=AND && LA81_0<=NOT)||LA81_0==TOD||LA81_0==XOR||(LA81_0>=DT && LA81_0<=LT)||LA81_0==OR||LA81_0==LeftParenthesis||LA81_0==PlusSign||LA81_0==HyphenMinus||LA81_0==Semicolon||(LA81_0>=D && LA81_0<=T)||(LA81_0>=RULE_NON_DECIMAL && LA81_0<=RULE_INT)||(LA81_0>=RULE_ID && LA81_0<=RULE_STRING)) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8446:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTFunctionParser.g:8455:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8459:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTFunctionParser.g:8460:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:8467:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8471:1: ( ( CASE ) )
            // InternalSTFunctionParser.g:8472:1: ( CASE )
            {
            // InternalSTFunctionParser.g:8472:1: ( CASE )
            // InternalSTFunctionParser.g:8473:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTFunctionParser.g:8482:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8486:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTFunctionParser.g:8487:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:8494:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8498:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8499:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8499:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTFunctionParser.g:8500:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8501:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTFunctionParser.g:8501:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTFunctionParser.g:8509:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8513:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTFunctionParser.g:8514:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:8521:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8525:1: ( ( OF ) )
            // InternalSTFunctionParser.g:8526:1: ( OF )
            {
            // InternalSTFunctionParser.g:8526:1: ( OF )
            // InternalSTFunctionParser.g:8527:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTFunctionParser.g:8536:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8540:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTFunctionParser.g:8541:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_46);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:8548:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8552:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTFunctionParser.g:8553:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTFunctionParser.g:8553:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTFunctionParser.g:8554:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:8554:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTFunctionParser.g:8555:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8556:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTFunctionParser.g:8556:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_47);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTFunctionParser.g:8559:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTFunctionParser.g:8560:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8561:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==LDATE_AND_TIME||LA82_0==DATE_AND_TIME||LA82_0==LTIME_OF_DAY||LA82_0==TIME_OF_DAY||LA82_0==WSTRING||LA82_0==STRING||LA82_0==DWORD||LA82_0==FALSE||(LA82_0>=LDATE && LA82_0<=LWORD)||(LA82_0>=UDINT && LA82_0<=ULINT)||(LA82_0>=USINT && LA82_0<=WCHAR)||(LA82_0>=BOOL && LA82_0<=BYTE)||(LA82_0>=CHAR && LA82_0<=DINT)||(LA82_0>=LINT && LA82_0<=LTOD)||(LA82_0>=REAL && LA82_0<=SINT)||(LA82_0>=THIS && LA82_0<=TRUE)||LA82_0==UINT||LA82_0==WORD||LA82_0==AND||(LA82_0>=INT && LA82_0<=NOT)||LA82_0==TOD||LA82_0==XOR||LA82_0==DT||(LA82_0>=LD && LA82_0<=LT)||LA82_0==OR||LA82_0==LeftParenthesis||LA82_0==PlusSign||LA82_0==HyphenMinus||(LA82_0>=D && LA82_0<=T)||(LA82_0>=RULE_NON_DECIMAL && LA82_0<=RULE_INT)||(LA82_0>=RULE_ID && LA82_0<=RULE_STRING)) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8561:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTFunctionParser.g:8570:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8574:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTFunctionParser.g:8575:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_46);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:8582:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8586:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTFunctionParser.g:8587:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTFunctionParser.g:8587:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTFunctionParser.g:8588:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTFunctionParser.g:8589:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==ELSE) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSTFunctionParser.g:8589:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTFunctionParser.g:8597:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8601:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTFunctionParser.g:8602:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:8608:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8612:1: ( ( END_CASE ) )
            // InternalSTFunctionParser.g:8613:1: ( END_CASE )
            {
            // InternalSTFunctionParser.g:8613:1: ( END_CASE )
            // InternalSTFunctionParser.g:8614:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTFunctionParser.g:8624:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8628:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTFunctionParser.g:8629:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTFunctionParser.g:8636:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8640:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8641:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8641:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTFunctionParser.g:8642:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8643:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTFunctionParser.g:8643:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTFunctionParser.g:8651:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8655:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTFunctionParser.g:8656:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTFunctionParser.g:8663:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8667:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:8668:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:8668:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTFunctionParser.g:8669:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:8670:2: ( rule__STCaseCases__Group_1__0 )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==Comma) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8670:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTFunctionParser.g:8678:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8682:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTFunctionParser.g:8683:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTFunctionParser.g:8690:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8694:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:8695:1: ( Colon )
            {
            // InternalSTFunctionParser.g:8695:1: ( Colon )
            // InternalSTFunctionParser.g:8696:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTFunctionParser.g:8705:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8709:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTFunctionParser.g:8710:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTFunctionParser.g:8716:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8720:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:8721:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:8721:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:8722:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8723:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop85:
            do {
                int alt85=2;
                alt85 = dfa85.predict(input);
                switch (alt85) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8723:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTFunctionParser.g:8732:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8736:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTFunctionParser.g:8737:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTFunctionParser.g:8744:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8748:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:8749:1: ( Comma )
            {
            // InternalSTFunctionParser.g:8749:1: ( Comma )
            // InternalSTFunctionParser.g:8750:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTFunctionParser.g:8759:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8763:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTFunctionParser.g:8764:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTFunctionParser.g:8770:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8774:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:8775:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:8775:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTFunctionParser.g:8776:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:8777:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTFunctionParser.g:8777:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTFunctionParser.g:8786:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8790:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTFunctionParser.g:8791:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTFunctionParser.g:8798:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8802:1: ( ( () ) )
            // InternalSTFunctionParser.g:8803:1: ( () )
            {
            // InternalSTFunctionParser.g:8803:1: ( () )
            // InternalSTFunctionParser.g:8804:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTFunctionParser.g:8805:2: ()
            // InternalSTFunctionParser.g:8805:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTFunctionParser.g:8813:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8817:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTFunctionParser.g:8818:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTFunctionParser.g:8825:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8829:1: ( ( ELSE ) )
            // InternalSTFunctionParser.g:8830:1: ( ELSE )
            {
            // InternalSTFunctionParser.g:8830:1: ( ELSE )
            // InternalSTFunctionParser.g:8831:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTFunctionParser.g:8840:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8844:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTFunctionParser.g:8845:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTFunctionParser.g:8851:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8855:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTFunctionParser.g:8856:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTFunctionParser.g:8856:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTFunctionParser.g:8857:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:8858:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==LDATE_AND_TIME||LA86_0==DATE_AND_TIME||LA86_0==LTIME_OF_DAY||LA86_0==TIME_OF_DAY||LA86_0==CONTINUE||LA86_0==WSTRING||LA86_0==REPEAT||LA86_0==RETURN||LA86_0==STRING||LA86_0==DWORD||LA86_0==FALSE||(LA86_0>=LDATE && LA86_0<=LWORD)||(LA86_0>=UDINT && LA86_0<=ULINT)||(LA86_0>=USINT && LA86_0<=DINT)||LA86_0==EXIT||(LA86_0>=LINT && LA86_0<=LTOD)||(LA86_0>=REAL && LA86_0<=SINT)||(LA86_0>=THIS && LA86_0<=TRUE)||LA86_0==UINT||LA86_0==WORD||(LA86_0>=AND && LA86_0<=NOT)||LA86_0==TOD||LA86_0==XOR||(LA86_0>=DT && LA86_0<=LT)||LA86_0==OR||LA86_0==LeftParenthesis||LA86_0==PlusSign||LA86_0==HyphenMinus||LA86_0==Semicolon||(LA86_0>=D && LA86_0<=T)||(LA86_0>=RULE_NON_DECIMAL && LA86_0<=RULE_INT)||(LA86_0>=RULE_ID && LA86_0<=RULE_STRING)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8858:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTFunctionParser.g:8867:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8871:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTFunctionParser.g:8872:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:8879:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8883:1: ( ( FOR ) )
            // InternalSTFunctionParser.g:8884:1: ( FOR )
            {
            // InternalSTFunctionParser.g:8884:1: ( FOR )
            // InternalSTFunctionParser.g:8885:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTFunctionParser.g:8894:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8898:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTFunctionParser.g:8899:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:8906:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__VariableAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8910:1: ( ( ( rule__STForStatement__VariableAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8911:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8911:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            // InternalSTFunctionParser.g:8912:2: ( rule__STForStatement__VariableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8913:2: ( rule__STForStatement__VariableAssignment_1 )
            // InternalSTFunctionParser.g:8913:3: rule__STForStatement__VariableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__VariableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTFunctionParser.g:8921:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8925:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTFunctionParser.g:8926:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:8933:1: rule__STForStatement__Group__2__Impl : ( ColonEqualsSign ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8937:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:8938:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:8938:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:8939:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTFunctionParser.g:8948:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8952:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTFunctionParser.g:8953:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_50);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:8960:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__FromAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8964:1: ( ( ( rule__STForStatement__FromAssignment_3 ) ) )
            // InternalSTFunctionParser.g:8965:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:8965:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            // InternalSTFunctionParser.g:8966:2: ( rule__STForStatement__FromAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8967:2: ( rule__STForStatement__FromAssignment_3 )
            // InternalSTFunctionParser.g:8967:3: rule__STForStatement__FromAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__FromAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTFunctionParser.g:8975:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8979:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTFunctionParser.g:8980:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_13);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:8987:1: rule__STForStatement__Group__4__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8991:1: ( ( TO ) )
            // InternalSTFunctionParser.g:8992:1: ( TO )
            {
            // InternalSTFunctionParser.g:8992:1: ( TO )
            // InternalSTFunctionParser.g:8993:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTFunctionParser.g:9002:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9006:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTFunctionParser.g:9007:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_51);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:9014:1: rule__STForStatement__Group__5__Impl : ( ( rule__STForStatement__ToAssignment_5 ) ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9018:1: ( ( ( rule__STForStatement__ToAssignment_5 ) ) )
            // InternalSTFunctionParser.g:9019:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            {
            // InternalSTFunctionParser.g:9019:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            // InternalSTFunctionParser.g:9020:2: ( rule__STForStatement__ToAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }
            // InternalSTFunctionParser.g:9021:2: ( rule__STForStatement__ToAssignment_5 )
            // InternalSTFunctionParser.g:9021:3: rule__STForStatement__ToAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTFunctionParser.g:9029:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9033:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTFunctionParser.g:9034:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_51);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTFunctionParser.g:9041:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__Group_6__0 )? ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9045:1: ( ( ( rule__STForStatement__Group_6__0 )? ) )
            // InternalSTFunctionParser.g:9046:1: ( ( rule__STForStatement__Group_6__0 )? )
            {
            // InternalSTFunctionParser.g:9046:1: ( ( rule__STForStatement__Group_6__0 )? )
            // InternalSTFunctionParser.g:9047:2: ( rule__STForStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }
            // InternalSTFunctionParser.g:9048:2: ( rule__STForStatement__Group_6__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==BY) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSTFunctionParser.g:9048:3: rule__STForStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTFunctionParser.g:9056:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9060:1: ( rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 )
            // InternalSTFunctionParser.g:9061:2: rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8
            {
            pushFollow(FOLLOW_52);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTFunctionParser.g:9068:1: rule__STForStatement__Group__7__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9072:1: ( ( DO ) )
            // InternalSTFunctionParser.g:9073:1: ( DO )
            {
            // InternalSTFunctionParser.g:9073:1: ( DO )
            // InternalSTFunctionParser.g:9074:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group__8"
    // InternalSTFunctionParser.g:9083:1: rule__STForStatement__Group__8 : rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 ;
    public final void rule__STForStatement__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9087:1: ( rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 )
            // InternalSTFunctionParser.g:9088:2: rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9
            {
            pushFollow(FOLLOW_52);
            rule__STForStatement__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8"


    // $ANTLR start "rule__STForStatement__Group__8__Impl"
    // InternalSTFunctionParser.g:9095:1: rule__STForStatement__Group__8__Impl : ( ( rule__STForStatement__StatementsAssignment_8 )* ) ;
    public final void rule__STForStatement__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9099:1: ( ( ( rule__STForStatement__StatementsAssignment_8 )* ) )
            // InternalSTFunctionParser.g:9100:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            {
            // InternalSTFunctionParser.g:9100:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            // InternalSTFunctionParser.g:9101:2: ( rule__STForStatement__StatementsAssignment_8 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }
            // InternalSTFunctionParser.g:9102:2: ( rule__STForStatement__StatementsAssignment_8 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==LDATE_AND_TIME||LA88_0==DATE_AND_TIME||LA88_0==LTIME_OF_DAY||LA88_0==TIME_OF_DAY||LA88_0==CONTINUE||LA88_0==WSTRING||LA88_0==REPEAT||LA88_0==RETURN||LA88_0==STRING||LA88_0==DWORD||LA88_0==FALSE||(LA88_0>=LDATE && LA88_0<=LWORD)||(LA88_0>=UDINT && LA88_0<=ULINT)||(LA88_0>=USINT && LA88_0<=DINT)||LA88_0==EXIT||(LA88_0>=LINT && LA88_0<=LTOD)||(LA88_0>=REAL && LA88_0<=SINT)||(LA88_0>=THIS && LA88_0<=TRUE)||LA88_0==UINT||LA88_0==WORD||(LA88_0>=AND && LA88_0<=NOT)||LA88_0==TOD||LA88_0==XOR||(LA88_0>=DT && LA88_0<=LT)||LA88_0==OR||LA88_0==LeftParenthesis||LA88_0==PlusSign||LA88_0==HyphenMinus||LA88_0==Semicolon||(LA88_0>=D && LA88_0<=T)||(LA88_0>=RULE_NON_DECIMAL && LA88_0<=RULE_INT)||(LA88_0>=RULE_ID && LA88_0<=RULE_STRING)) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9102:3: rule__STForStatement__StatementsAssignment_8
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STForStatement__StatementsAssignment_8();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8__Impl"


    // $ANTLR start "rule__STForStatement__Group__9"
    // InternalSTFunctionParser.g:9110:1: rule__STForStatement__Group__9 : rule__STForStatement__Group__9__Impl ;
    public final void rule__STForStatement__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9114:1: ( rule__STForStatement__Group__9__Impl )
            // InternalSTFunctionParser.g:9115:2: rule__STForStatement__Group__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9"


    // $ANTLR start "rule__STForStatement__Group__9__Impl"
    // InternalSTFunctionParser.g:9121:1: rule__STForStatement__Group__9__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9125:1: ( ( END_FOR ) )
            // InternalSTFunctionParser.g:9126:1: ( END_FOR )
            {
            // InternalSTFunctionParser.g:9126:1: ( END_FOR )
            // InternalSTFunctionParser.g:9127:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__0"
    // InternalSTFunctionParser.g:9137:1: rule__STForStatement__Group_6__0 : rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 ;
    public final void rule__STForStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9141:1: ( rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 )
            // InternalSTFunctionParser.g:9142:2: rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1
            {
            pushFollow(FOLLOW_13);
            rule__STForStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0"


    // $ANTLR start "rule__STForStatement__Group_6__0__Impl"
    // InternalSTFunctionParser.g:9149:1: rule__STForStatement__Group_6__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9153:1: ( ( BY ) )
            // InternalSTFunctionParser.g:9154:1: ( BY )
            {
            // InternalSTFunctionParser.g:9154:1: ( BY )
            // InternalSTFunctionParser.g:9155:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__1"
    // InternalSTFunctionParser.g:9164:1: rule__STForStatement__Group_6__1 : rule__STForStatement__Group_6__1__Impl ;
    public final void rule__STForStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9168:1: ( rule__STForStatement__Group_6__1__Impl )
            // InternalSTFunctionParser.g:9169:2: rule__STForStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1"


    // $ANTLR start "rule__STForStatement__Group_6__1__Impl"
    // InternalSTFunctionParser.g:9175:1: rule__STForStatement__Group_6__1__Impl : ( ( rule__STForStatement__ByAssignment_6_1 ) ) ;
    public final void rule__STForStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9179:1: ( ( ( rule__STForStatement__ByAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:9180:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:9180:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            // InternalSTFunctionParser.g:9181:2: ( rule__STForStatement__ByAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:9182:2: ( rule__STForStatement__ByAssignment_6_1 )
            // InternalSTFunctionParser.g:9182:3: rule__STForStatement__ByAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTFunctionParser.g:9191:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9195:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTFunctionParser.g:9196:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:9203:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9207:1: ( ( WHILE ) )
            // InternalSTFunctionParser.g:9208:1: ( WHILE )
            {
            // InternalSTFunctionParser.g:9208:1: ( WHILE )
            // InternalSTFunctionParser.g:9209:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTFunctionParser.g:9218:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9222:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTFunctionParser.g:9223:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:9230:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9234:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:9235:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:9235:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:9236:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9237:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:9237:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTFunctionParser.g:9245:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9249:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTFunctionParser.g:9250:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_54);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:9257:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9261:1: ( ( DO ) )
            // InternalSTFunctionParser.g:9262:1: ( DO )
            {
            // InternalSTFunctionParser.g:9262:1: ( DO )
            // InternalSTFunctionParser.g:9263:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTFunctionParser.g:9272:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9276:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTFunctionParser.g:9277:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_54);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:9284:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9288:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:9289:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:9289:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:9290:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:9291:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==LDATE_AND_TIME||LA89_0==DATE_AND_TIME||LA89_0==LTIME_OF_DAY||LA89_0==TIME_OF_DAY||LA89_0==CONTINUE||LA89_0==WSTRING||LA89_0==REPEAT||LA89_0==RETURN||LA89_0==STRING||LA89_0==DWORD||LA89_0==FALSE||(LA89_0>=LDATE && LA89_0<=LWORD)||(LA89_0>=UDINT && LA89_0<=ULINT)||(LA89_0>=USINT && LA89_0<=DINT)||LA89_0==EXIT||(LA89_0>=LINT && LA89_0<=LTOD)||(LA89_0>=REAL && LA89_0<=SINT)||(LA89_0>=THIS && LA89_0<=TRUE)||LA89_0==UINT||LA89_0==WORD||(LA89_0>=AND && LA89_0<=NOT)||LA89_0==TOD||LA89_0==XOR||(LA89_0>=DT && LA89_0<=LT)||LA89_0==OR||LA89_0==LeftParenthesis||LA89_0==PlusSign||LA89_0==HyphenMinus||LA89_0==Semicolon||(LA89_0>=D && LA89_0<=T)||(LA89_0>=RULE_NON_DECIMAL && LA89_0<=RULE_INT)||(LA89_0>=RULE_ID && LA89_0<=RULE_STRING)) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9291:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTFunctionParser.g:9299:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9303:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:9304:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:9310:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9314:1: ( ( END_WHILE ) )
            // InternalSTFunctionParser.g:9315:1: ( END_WHILE )
            {
            // InternalSTFunctionParser.g:9315:1: ( END_WHILE )
            // InternalSTFunctionParser.g:9316:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTFunctionParser.g:9326:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9330:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTFunctionParser.g:9331:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:9338:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9342:1: ( ( REPEAT ) )
            // InternalSTFunctionParser.g:9343:1: ( REPEAT )
            {
            // InternalSTFunctionParser.g:9343:1: ( REPEAT )
            // InternalSTFunctionParser.g:9344:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTFunctionParser.g:9353:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9357:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTFunctionParser.g:9358:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:9365:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9369:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTFunctionParser.g:9370:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTFunctionParser.g:9370:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTFunctionParser.g:9371:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9372:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==LDATE_AND_TIME||LA90_0==DATE_AND_TIME||LA90_0==LTIME_OF_DAY||LA90_0==TIME_OF_DAY||LA90_0==CONTINUE||LA90_0==WSTRING||LA90_0==REPEAT||LA90_0==RETURN||LA90_0==STRING||LA90_0==DWORD||LA90_0==FALSE||(LA90_0>=LDATE && LA90_0<=LWORD)||(LA90_0>=UDINT && LA90_0<=ULINT)||(LA90_0>=USINT && LA90_0<=DINT)||LA90_0==EXIT||(LA90_0>=LINT && LA90_0<=LTOD)||(LA90_0>=REAL && LA90_0<=SINT)||(LA90_0>=THIS && LA90_0<=TRUE)||LA90_0==UINT||LA90_0==WORD||(LA90_0>=AND && LA90_0<=NOT)||LA90_0==TOD||LA90_0==XOR||(LA90_0>=DT && LA90_0<=LT)||LA90_0==OR||LA90_0==LeftParenthesis||LA90_0==PlusSign||LA90_0==HyphenMinus||LA90_0==Semicolon||(LA90_0>=D && LA90_0<=T)||(LA90_0>=RULE_NON_DECIMAL && LA90_0<=RULE_INT)||(LA90_0>=RULE_ID && LA90_0<=RULE_STRING)) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9372:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTFunctionParser.g:9380:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9384:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTFunctionParser.g:9385:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:9392:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9396:1: ( ( UNTIL ) )
            // InternalSTFunctionParser.g:9397:1: ( UNTIL )
            {
            // InternalSTFunctionParser.g:9397:1: ( UNTIL )
            // InternalSTFunctionParser.g:9398:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTFunctionParser.g:9407:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9411:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTFunctionParser.g:9412:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_56);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:9419:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9423:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTFunctionParser.g:9424:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:9424:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTFunctionParser.g:9425:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTFunctionParser.g:9426:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTFunctionParser.g:9426:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTFunctionParser.g:9434:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9438:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:9439:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:9445:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9449:1: ( ( END_REPEAT ) )
            // InternalSTFunctionParser.g:9450:1: ( END_REPEAT )
            {
            // InternalSTFunctionParser.g:9450:1: ( END_REPEAT )
            // InternalSTFunctionParser.g:9451:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTFunctionParser.g:9461:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9465:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTFunctionParser.g:9466:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:9473:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9477:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:9478:1: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:9478:1: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:9479:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTFunctionParser.g:9488:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9492:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:9493:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:9499:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9503:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:9504:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:9504:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:9505:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:9506:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==FullStopFullStop) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9506:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTFunctionParser.g:9515:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9519:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTFunctionParser.g:9520:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:9527:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9531:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:9532:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:9532:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:9533:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:9534:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:9534:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTFunctionParser.g:9542:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9546:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:9547:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:9553:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9557:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:9558:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:9558:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:9559:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:9560:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:9560:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:9569:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9573:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:9574:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_57);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:9581:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9585:1: ( ( () ) )
            // InternalSTFunctionParser.g:9586:1: ( () )
            {
            // InternalSTFunctionParser.g:9586:1: ( () )
            // InternalSTFunctionParser.g:9587:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:9588:2: ()
            // InternalSTFunctionParser.g:9588:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:9596:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9600:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:9601:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:9607:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9611:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:9612:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:9612:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:9613:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:9614:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:9614:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTFunctionParser.g:9623:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9627:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTFunctionParser.g:9628:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:9635:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9639:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:9640:1: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:9640:1: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:9641:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTFunctionParser.g:9650:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9654:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:9655:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:9661:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9665:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:9666:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:9666:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:9667:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:9668:2: ( rule__STOrExpression__Group_1__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==OR) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9668:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_60);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTFunctionParser.g:9677:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9681:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTFunctionParser.g:9682:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:9689:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9693:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:9694:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:9694:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:9695:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:9696:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:9696:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTFunctionParser.g:9704:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9708:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:9709:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:9715:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9719:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:9720:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:9720:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:9721:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:9722:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:9722:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:9731:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9735:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:9736:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_59);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:9743:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9747:1: ( ( () ) )
            // InternalSTFunctionParser.g:9748:1: ( () )
            {
            // InternalSTFunctionParser.g:9748:1: ( () )
            // InternalSTFunctionParser.g:9749:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:9750:2: ()
            // InternalSTFunctionParser.g:9750:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:9758:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9762:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:9763:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:9769:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9773:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:9774:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:9774:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:9775:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:9776:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:9776:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTFunctionParser.g:9785:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9789:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTFunctionParser.g:9790:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:9797:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9801:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:9802:1: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:9802:1: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:9803:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTFunctionParser.g:9812:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9816:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:9817:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:9823:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9827:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:9828:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:9828:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:9829:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:9830:2: ( rule__STXorExpression__Group_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==XOR) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9830:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTFunctionParser.g:9839:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9843:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTFunctionParser.g:9844:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:9851:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9855:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:9856:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:9856:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:9857:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:9858:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:9858:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTFunctionParser.g:9866:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9870:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:9871:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:9877:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9881:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:9882:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:9882:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:9883:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:9884:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:9884:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:9893:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9897:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:9898:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_61);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:9905:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9909:1: ( ( () ) )
            // InternalSTFunctionParser.g:9910:1: ( () )
            {
            // InternalSTFunctionParser.g:9910:1: ( () )
            // InternalSTFunctionParser.g:9911:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:9912:2: ()
            // InternalSTFunctionParser.g:9912:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:9920:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9924:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:9925:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:9931:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9935:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:9936:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:9936:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:9937:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:9938:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:9938:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTFunctionParser.g:9947:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9951:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTFunctionParser.g:9952:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:9959:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9963:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:9964:1: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:9964:1: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:9965:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTFunctionParser.g:9974:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9978:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:9979:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:9985:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9989:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:9990:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:9990:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:9991:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:9992:2: ( rule__STAndExpression__Group_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==AND||LA94_0==Ampersand) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalSTFunctionParser.g:9992:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_64);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTFunctionParser.g:10001:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10005:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTFunctionParser.g:10006:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:10013:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10017:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:10018:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:10018:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:10019:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:10020:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:10020:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTFunctionParser.g:10028:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10032:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:10033:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:10039:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10043:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:10044:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:10044:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:10045:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:10046:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:10046:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:10055:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10059:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:10060:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_63);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:10067:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10071:1: ( ( () ) )
            // InternalSTFunctionParser.g:10072:1: ( () )
            {
            // InternalSTFunctionParser.g:10072:1: ( () )
            // InternalSTFunctionParser.g:10073:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10074:2: ()
            // InternalSTFunctionParser.g:10074:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:10082:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10086:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:10087:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:10093:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10097:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:10098:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:10098:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:10099:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:10100:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:10100:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTFunctionParser.g:10109:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10113:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTFunctionParser.g:10114:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:10121:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10125:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:10126:1: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:10126:1: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:10127:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTFunctionParser.g:10136:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10140:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:10141:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:10147:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10151:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:10152:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:10152:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:10153:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:10154:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==LessThanSignGreaterThanSign||LA95_0==EqualsSign) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSTFunctionParser.g:10154:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_66);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTFunctionParser.g:10163:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10167:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTFunctionParser.g:10168:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:10175:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10179:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:10180:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:10180:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:10181:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:10182:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:10182:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTFunctionParser.g:10190:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10194:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:10195:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:10201:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10205:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:10206:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:10206:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:10207:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:10208:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:10208:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:10217:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10221:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:10222:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_65);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:10229:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10233:1: ( ( () ) )
            // InternalSTFunctionParser.g:10234:1: ( () )
            {
            // InternalSTFunctionParser.g:10234:1: ( () )
            // InternalSTFunctionParser.g:10235:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10236:2: ()
            // InternalSTFunctionParser.g:10236:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:10244:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10248:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:10249:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:10255:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10259:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:10260:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:10260:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:10261:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:10262:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:10262:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTFunctionParser.g:10271:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10275:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTFunctionParser.g:10276:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:10283:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10287:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:10288:1: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:10288:1: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:10289:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTFunctionParser.g:10298:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10302:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:10303:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:10309:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10313:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:10314:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:10314:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:10315:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:10316:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==LessThanSignEqualsSign||LA96_0==GreaterThanSignEqualsSign||LA96_0==LessThanSign||LA96_0==GreaterThanSign) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalSTFunctionParser.g:10316:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_68);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTFunctionParser.g:10325:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10329:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTFunctionParser.g:10330:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:10337:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10341:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:10342:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:10342:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:10343:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:10344:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:10344:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTFunctionParser.g:10352:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10356:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:10357:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:10363:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10367:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:10368:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:10368:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:10369:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:10370:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:10370:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:10379:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10383:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:10384:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_67);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:10391:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10395:1: ( ( () ) )
            // InternalSTFunctionParser.g:10396:1: ( () )
            {
            // InternalSTFunctionParser.g:10396:1: ( () )
            // InternalSTFunctionParser.g:10397:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10398:2: ()
            // InternalSTFunctionParser.g:10398:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:10406:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10410:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:10411:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:10417:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10421:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:10422:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:10422:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:10423:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:10424:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:10424:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTFunctionParser.g:10433:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10437:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTFunctionParser.g:10438:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:10445:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10449:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:10450:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:10450:1: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:10451:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTFunctionParser.g:10460:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10464:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:10465:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:10471:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10475:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:10476:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:10476:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:10477:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:10478:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==PlusSign||LA97_0==HyphenMinus) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSTFunctionParser.g:10478:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTFunctionParser.g:10487:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10491:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTFunctionParser.g:10492:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:10499:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10503:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:10504:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:10504:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:10505:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:10506:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:10506:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTFunctionParser.g:10514:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10518:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:10519:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:10525:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10529:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:10530:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:10530:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:10531:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:10532:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:10532:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:10541:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10545:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:10546:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_69);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:10553:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10557:1: ( ( () ) )
            // InternalSTFunctionParser.g:10558:1: ( () )
            {
            // InternalSTFunctionParser.g:10558:1: ( () )
            // InternalSTFunctionParser.g:10559:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10560:2: ()
            // InternalSTFunctionParser.g:10560:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:10568:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10572:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:10573:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:10579:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10583:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:10584:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:10584:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:10585:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:10586:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:10586:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTFunctionParser.g:10595:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10599:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTFunctionParser.g:10600:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:10607:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10611:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:10612:1: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:10612:1: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:10613:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTFunctionParser.g:10622:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10626:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:10627:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:10633:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10637:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:10638:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:10638:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:10639:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:10640:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==MOD||LA98_0==Asterisk||LA98_0==Solidus) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSTFunctionParser.g:10640:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_72);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTFunctionParser.g:10649:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10653:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTFunctionParser.g:10654:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:10661:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10665:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:10666:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:10666:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:10667:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:10668:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:10668:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTFunctionParser.g:10676:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10680:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:10681:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:10687:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10691:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:10692:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:10692:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:10693:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:10694:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:10694:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:10703:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10707:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:10708:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_71);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:10715:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10719:1: ( ( () ) )
            // InternalSTFunctionParser.g:10720:1: ( () )
            {
            // InternalSTFunctionParser.g:10720:1: ( () )
            // InternalSTFunctionParser.g:10721:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10722:2: ()
            // InternalSTFunctionParser.g:10722:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:10730:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10734:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:10735:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:10741:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10745:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:10746:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:10746:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:10747:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:10748:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:10748:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTFunctionParser.g:10757:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10761:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTFunctionParser.g:10762:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:10769:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10773:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:10774:1: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:10774:1: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:10775:2: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTFunctionParser.g:10784:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10788:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:10789:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:10795:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10799:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:10800:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:10800:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:10801:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:10802:2: ( rule__STPowerExpression__Group_1__0 )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==AsteriskAsterisk) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalSTFunctionParser.g:10802:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_74);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTFunctionParser.g:10811:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10815:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTFunctionParser.g:10816:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:10823:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10827:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:10828:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:10828:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:10829:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:10830:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:10830:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTFunctionParser.g:10838:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10842:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:10843:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:10849:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10853:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:10854:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:10854:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:10855:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:10856:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:10856:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:10865:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10869:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:10870:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_73);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:10877:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10881:1: ( ( () ) )
            // InternalSTFunctionParser.g:10882:1: ( () )
            {
            // InternalSTFunctionParser.g:10882:1: ( () )
            // InternalSTFunctionParser.g:10883:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10884:2: ()
            // InternalSTFunctionParser.g:10884:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:10892:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10896:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:10897:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:10903:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10907:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:10908:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:10908:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:10909:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:10910:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:10910:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_3__0"
    // InternalSTFunctionParser.g:10919:1: rule__STUnaryExpression__Group_3__0 : rule__STUnaryExpression__Group_3__0__Impl rule__STUnaryExpression__Group_3__1 ;
    public final void rule__STUnaryExpression__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10923:1: ( rule__STUnaryExpression__Group_3__0__Impl rule__STUnaryExpression__Group_3__1 )
            // InternalSTFunctionParser.g:10924:2: rule__STUnaryExpression__Group_3__0__Impl rule__STUnaryExpression__Group_3__1
            {
            pushFollow(FOLLOW_13);
            rule__STUnaryExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_3__0"


    // $ANTLR start "rule__STUnaryExpression__Group_3__0__Impl"
    // InternalSTFunctionParser.g:10931:1: rule__STUnaryExpression__Group_3__0__Impl : ( () ) ;
    public final void rule__STUnaryExpression__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10935:1: ( ( () ) )
            // InternalSTFunctionParser.g:10936:1: ( () )
            {
            // InternalSTFunctionParser.g:10936:1: ( () )
            // InternalSTFunctionParser.g:10937:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_3_0()); 
            }
            // InternalSTFunctionParser.g:10938:2: ()
            // InternalSTFunctionParser.g:10938:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_3__0__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_3__1"
    // InternalSTFunctionParser.g:10946:1: rule__STUnaryExpression__Group_3__1 : rule__STUnaryExpression__Group_3__1__Impl rule__STUnaryExpression__Group_3__2 ;
    public final void rule__STUnaryExpression__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10950:1: ( rule__STUnaryExpression__Group_3__1__Impl rule__STUnaryExpression__Group_3__2 )
            // InternalSTFunctionParser.g:10951:2: rule__STUnaryExpression__Group_3__1__Impl rule__STUnaryExpression__Group_3__2
            {
            pushFollow(FOLLOW_13);
            rule__STUnaryExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_3__1"


    // $ANTLR start "rule__STUnaryExpression__Group_3__1__Impl"
    // InternalSTFunctionParser.g:10958:1: rule__STUnaryExpression__Group_3__1__Impl : ( ( rule__STUnaryExpression__OpAssignment_3_1 ) ) ;
    public final void rule__STUnaryExpression__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10962:1: ( ( ( rule__STUnaryExpression__OpAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:10963:1: ( ( rule__STUnaryExpression__OpAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:10963:1: ( ( rule__STUnaryExpression__OpAssignment_3_1 ) )
            // InternalSTFunctionParser.g:10964:2: ( rule__STUnaryExpression__OpAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:10965:2: ( rule__STUnaryExpression__OpAssignment_3_1 )
            // InternalSTFunctionParser.g:10965:3: rule__STUnaryExpression__OpAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__OpAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_3__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_3__2"
    // InternalSTFunctionParser.g:10973:1: rule__STUnaryExpression__Group_3__2 : rule__STUnaryExpression__Group_3__2__Impl ;
    public final void rule__STUnaryExpression__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10977:1: ( rule__STUnaryExpression__Group_3__2__Impl )
            // InternalSTFunctionParser.g:10978:2: rule__STUnaryExpression__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_3__2"


    // $ANTLR start "rule__STUnaryExpression__Group_3__2__Impl"
    // InternalSTFunctionParser.g:10984:1: rule__STUnaryExpression__Group_3__2__Impl : ( ( rule__STUnaryExpression__ExpressionAssignment_3_2 ) ) ;
    public final void rule__STUnaryExpression__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10988:1: ( ( ( rule__STUnaryExpression__ExpressionAssignment_3_2 ) ) )
            // InternalSTFunctionParser.g:10989:1: ( ( rule__STUnaryExpression__ExpressionAssignment_3_2 ) )
            {
            // InternalSTFunctionParser.g:10989:1: ( ( rule__STUnaryExpression__ExpressionAssignment_3_2 ) )
            // InternalSTFunctionParser.g:10990:2: ( rule__STUnaryExpression__ExpressionAssignment_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_3_2()); 
            }
            // InternalSTFunctionParser.g:10991:2: ( rule__STUnaryExpression__ExpressionAssignment_3_2 )
            // InternalSTFunctionParser.g:10991:3: rule__STUnaryExpression__ExpressionAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__ExpressionAssignment_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_3__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__0"
    // InternalSTFunctionParser.g:11000:1: rule__STAccessExpression__Group__0 : rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 ;
    public final void rule__STAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11004:1: ( rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 )
            // InternalSTFunctionParser.g:11005:2: rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__STAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0"


    // $ANTLR start "rule__STAccessExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:11012:1: rule__STAccessExpression__Group__0__Impl : ( ruleSTPrimaryExpression ) ;
    public final void rule__STAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11016:1: ( ( ruleSTPrimaryExpression ) )
            // InternalSTFunctionParser.g:11017:1: ( ruleSTPrimaryExpression )
            {
            // InternalSTFunctionParser.g:11017:1: ( ruleSTPrimaryExpression )
            // InternalSTFunctionParser.g:11018:2: ruleSTPrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__1"
    // InternalSTFunctionParser.g:11027:1: rule__STAccessExpression__Group__1 : rule__STAccessExpression__Group__1__Impl ;
    public final void rule__STAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11031:1: ( rule__STAccessExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:11032:2: rule__STAccessExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1"


    // $ANTLR start "rule__STAccessExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:11038:1: rule__STAccessExpression__Group__1__Impl : ( ( rule__STAccessExpression__Alternatives_1 )* ) ;
    public final void rule__STAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11042:1: ( ( ( rule__STAccessExpression__Alternatives_1 )* ) )
            // InternalSTFunctionParser.g:11043:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            {
            // InternalSTFunctionParser.g:11043:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            // InternalSTFunctionParser.g:11044:2: ( rule__STAccessExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }
            // InternalSTFunctionParser.g:11045:2: ( rule__STAccessExpression__Alternatives_1 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==FullStop||LA100_0==LeftSquareBracket) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalSTFunctionParser.g:11045:3: rule__STAccessExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_76);
            	    rule__STAccessExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:11054:1: rule__STAccessExpression__Group_1_0__0 : rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 ;
    public final void rule__STAccessExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11058:1: ( rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:11059:2: rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_77);
            rule__STAccessExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:11066:1: rule__STAccessExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11070:1: ( ( () ) )
            // InternalSTFunctionParser.g:11071:1: ( () )
            {
            // InternalSTFunctionParser.g:11071:1: ( () )
            // InternalSTFunctionParser.g:11072:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:11073:2: ()
            // InternalSTFunctionParser.g:11073:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:11081:1: rule__STAccessExpression__Group_1_0__1 : rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 ;
    public final void rule__STAccessExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11085:1: ( rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 )
            // InternalSTFunctionParser.g:11086:2: rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_78);
            rule__STAccessExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:11093:1: rule__STAccessExpression__Group_1_0__1__Impl : ( FullStop ) ;
    public final void rule__STAccessExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11097:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:11098:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:11098:1: ( FullStop )
            // InternalSTFunctionParser.g:11099:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2"
    // InternalSTFunctionParser.g:11108:1: rule__STAccessExpression__Group_1_0__2 : rule__STAccessExpression__Group_1_0__2__Impl ;
    public final void rule__STAccessExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11112:1: ( rule__STAccessExpression__Group_1_0__2__Impl )
            // InternalSTFunctionParser.g:11113:2: rule__STAccessExpression__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2__Impl"
    // InternalSTFunctionParser.g:11119:1: rule__STAccessExpression__Group_1_0__2__Impl : ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11123:1: ( ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) )
            // InternalSTFunctionParser.g:11124:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            {
            // InternalSTFunctionParser.g:11124:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            // InternalSTFunctionParser.g:11125:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }
            // InternalSTFunctionParser.g:11126:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            // InternalSTFunctionParser.g:11126:3: rule__STAccessExpression__MemberAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0"
    // InternalSTFunctionParser.g:11135:1: rule__STAccessExpression__Group_1_1__0 : rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 ;
    public final void rule__STAccessExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11139:1: ( rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 )
            // InternalSTFunctionParser.g:11140:2: rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_75);
            rule__STAccessExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0__Impl"
    // InternalSTFunctionParser.g:11147:1: rule__STAccessExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11151:1: ( ( () ) )
            // InternalSTFunctionParser.g:11152:1: ( () )
            {
            // InternalSTFunctionParser.g:11152:1: ( () )
            // InternalSTFunctionParser.g:11153:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }
            // InternalSTFunctionParser.g:11154:2: ()
            // InternalSTFunctionParser.g:11154:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1"
    // InternalSTFunctionParser.g:11162:1: rule__STAccessExpression__Group_1_1__1 : rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 ;
    public final void rule__STAccessExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11166:1: ( rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 )
            // InternalSTFunctionParser.g:11167:2: rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_13);
            rule__STAccessExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1__Impl"
    // InternalSTFunctionParser.g:11174:1: rule__STAccessExpression__Group_1_1__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11178:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:11179:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:11179:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:11180:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2"
    // InternalSTFunctionParser.g:11189:1: rule__STAccessExpression__Group_1_1__2 : rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 ;
    public final void rule__STAccessExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11193:1: ( rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 )
            // InternalSTFunctionParser.g:11194:2: rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_27);
            rule__STAccessExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2__Impl"
    // InternalSTFunctionParser.g:11201:1: rule__STAccessExpression__Group_1_1__2__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11205:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) )
            // InternalSTFunctionParser.g:11206:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            {
            // InternalSTFunctionParser.g:11206:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            // InternalSTFunctionParser.g:11207:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }
            // InternalSTFunctionParser.g:11208:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            // InternalSTFunctionParser.g:11208:3: rule__STAccessExpression__IndexAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3"
    // InternalSTFunctionParser.g:11216:1: rule__STAccessExpression__Group_1_1__3 : rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 ;
    public final void rule__STAccessExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11220:1: ( rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 )
            // InternalSTFunctionParser.g:11221:2: rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4
            {
            pushFollow(FOLLOW_27);
            rule__STAccessExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3__Impl"
    // InternalSTFunctionParser.g:11228:1: rule__STAccessExpression__Group_1_1__3__Impl : ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) ;
    public final void rule__STAccessExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11232:1: ( ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) )
            // InternalSTFunctionParser.g:11233:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            {
            // InternalSTFunctionParser.g:11233:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            // InternalSTFunctionParser.g:11234:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalSTFunctionParser.g:11235:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==Comma) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSTFunctionParser.g:11235:3: rule__STAccessExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STAccessExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4"
    // InternalSTFunctionParser.g:11243:1: rule__STAccessExpression__Group_1_1__4 : rule__STAccessExpression__Group_1_1__4__Impl ;
    public final void rule__STAccessExpression__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11247:1: ( rule__STAccessExpression__Group_1_1__4__Impl )
            // InternalSTFunctionParser.g:11248:2: rule__STAccessExpression__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4__Impl"
    // InternalSTFunctionParser.g:11254:1: rule__STAccessExpression__Group_1_1__4__Impl : ( RightSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11258:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:11259:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:11259:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:11260:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0"
    // InternalSTFunctionParser.g:11270:1: rule__STAccessExpression__Group_1_1_3__0 : rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 ;
    public final void rule__STAccessExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11274:1: ( rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 )
            // InternalSTFunctionParser.g:11275:2: rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1
            {
            pushFollow(FOLLOW_13);
            rule__STAccessExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0__Impl"
    // InternalSTFunctionParser.g:11282:1: rule__STAccessExpression__Group_1_1_3__0__Impl : ( Comma ) ;
    public final void rule__STAccessExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11286:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:11287:1: ( Comma )
            {
            // InternalSTFunctionParser.g:11287:1: ( Comma )
            // InternalSTFunctionParser.g:11288:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1"
    // InternalSTFunctionParser.g:11297:1: rule__STAccessExpression__Group_1_1_3__1 : rule__STAccessExpression__Group_1_1_3__1__Impl ;
    public final void rule__STAccessExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11301:1: ( rule__STAccessExpression__Group_1_1_3__1__Impl )
            // InternalSTFunctionParser.g:11302:2: rule__STAccessExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1__Impl"
    // InternalSTFunctionParser.g:11308:1: rule__STAccessExpression__Group_1_1_3__1__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) ;
    public final void rule__STAccessExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11312:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) )
            // InternalSTFunctionParser.g:11313:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            {
            // InternalSTFunctionParser.g:11313:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            // InternalSTFunctionParser.g:11314:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }
            // InternalSTFunctionParser.g:11315:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            // InternalSTFunctionParser.g:11315:3: rule__STAccessExpression__IndexAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0"
    // InternalSTFunctionParser.g:11324:1: rule__STPrimaryExpression__Group_0__0 : rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 ;
    public final void rule__STPrimaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11328:1: ( rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 )
            // InternalSTFunctionParser.g:11329:2: rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_13);
            rule__STPrimaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0__Impl"
    // InternalSTFunctionParser.g:11336:1: rule__STPrimaryExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11340:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:11341:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:11341:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:11342:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1"
    // InternalSTFunctionParser.g:11351:1: rule__STPrimaryExpression__Group_0__1 : rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 ;
    public final void rule__STPrimaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11355:1: ( rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 )
            // InternalSTFunctionParser.g:11356:2: rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2
            {
            pushFollow(FOLLOW_79);
            rule__STPrimaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1__Impl"
    // InternalSTFunctionParser.g:11363:1: rule__STPrimaryExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STPrimaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11367:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11368:1: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11368:1: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11369:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2"
    // InternalSTFunctionParser.g:11378:1: rule__STPrimaryExpression__Group_0__2 : rule__STPrimaryExpression__Group_0__2__Impl ;
    public final void rule__STPrimaryExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11382:1: ( rule__STPrimaryExpression__Group_0__2__Impl )
            // InternalSTFunctionParser.g:11383:2: rule__STPrimaryExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2__Impl"
    // InternalSTFunctionParser.g:11389:1: rule__STPrimaryExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11393:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:11394:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:11394:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:11395:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__0"
    // InternalSTFunctionParser.g:11405:1: rule__STFeatureExpression__Group__0 : rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 ;
    public final void rule__STFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11409:1: ( rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 )
            // InternalSTFunctionParser.g:11410:2: rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__STFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0"


    // $ANTLR start "rule__STFeatureExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:11417:1: rule__STFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11421:1: ( ( () ) )
            // InternalSTFunctionParser.g:11422:1: ( () )
            {
            // InternalSTFunctionParser.g:11422:1: ( () )
            // InternalSTFunctionParser.g:11423:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:11424:2: ()
            // InternalSTFunctionParser.g:11424:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__1"
    // InternalSTFunctionParser.g:11432:1: rule__STFeatureExpression__Group__1 : rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 ;
    public final void rule__STFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11436:1: ( rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 )
            // InternalSTFunctionParser.g:11437:2: rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1"


    // $ANTLR start "rule__STFeatureExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:11444:1: rule__STFeatureExpression__Group__1__Impl : ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11448:1: ( ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTFunctionParser.g:11449:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:11449:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTFunctionParser.g:11450:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTFunctionParser.g:11451:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            // InternalSTFunctionParser.g:11451:3: rule__STFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__2"
    // InternalSTFunctionParser.g:11459:1: rule__STFeatureExpression__Group__2 : rule__STFeatureExpression__Group__2__Impl ;
    public final void rule__STFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11463:1: ( rule__STFeatureExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:11464:2: rule__STFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2"


    // $ANTLR start "rule__STFeatureExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:11470:1: rule__STFeatureExpression__Group__2__Impl : ( ( rule__STFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11474:1: ( ( ( rule__STFeatureExpression__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:11475:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:11475:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            // InternalSTFunctionParser.g:11476:2: ( rule__STFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:11477:2: ( rule__STFeatureExpression__Group_2__0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==LeftParenthesis) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSTFunctionParser.g:11477:3: rule__STFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0"
    // InternalSTFunctionParser.g:11486:1: rule__STFeatureExpression__Group_2__0 : rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 ;
    public final void rule__STFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11490:1: ( rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 )
            // InternalSTFunctionParser.g:11491:2: rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_80);
            rule__STFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:11498:1: rule__STFeatureExpression__Group_2__0__Impl : ( ( rule__STFeatureExpression__CallAssignment_2_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11502:1: ( ( ( rule__STFeatureExpression__CallAssignment_2_0 ) ) )
            // InternalSTFunctionParser.g:11503:1: ( ( rule__STFeatureExpression__CallAssignment_2_0 ) )
            {
            // InternalSTFunctionParser.g:11503:1: ( ( rule__STFeatureExpression__CallAssignment_2_0 ) )
            // InternalSTFunctionParser.g:11504:2: ( rule__STFeatureExpression__CallAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallAssignment_2_0()); 
            }
            // InternalSTFunctionParser.g:11505:2: ( rule__STFeatureExpression__CallAssignment_2_0 )
            // InternalSTFunctionParser.g:11505:3: rule__STFeatureExpression__CallAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__CallAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1"
    // InternalSTFunctionParser.g:11513:1: rule__STFeatureExpression__Group_2__1 : rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 ;
    public final void rule__STFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11517:1: ( rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 )
            // InternalSTFunctionParser.g:11518:2: rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_80);
            rule__STFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:11525:1: rule__STFeatureExpression__Group_2__1__Impl : ( ( rule__STFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11529:1: ( ( ( rule__STFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTFunctionParser.g:11530:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTFunctionParser.g:11530:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            // InternalSTFunctionParser.g:11531:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTFunctionParser.g:11532:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==LDATE_AND_TIME||LA103_0==DATE_AND_TIME||LA103_0==LTIME_OF_DAY||LA103_0==TIME_OF_DAY||LA103_0==WSTRING||LA103_0==STRING||LA103_0==DWORD||LA103_0==FALSE||(LA103_0>=LDATE && LA103_0<=LWORD)||(LA103_0>=UDINT && LA103_0<=ULINT)||(LA103_0>=USINT && LA103_0<=WCHAR)||(LA103_0>=BOOL && LA103_0<=BYTE)||(LA103_0>=CHAR && LA103_0<=DINT)||(LA103_0>=LINT && LA103_0<=LTOD)||(LA103_0>=REAL && LA103_0<=SINT)||(LA103_0>=THIS && LA103_0<=TRUE)||LA103_0==UINT||LA103_0==WORD||LA103_0==AND||(LA103_0>=INT && LA103_0<=NOT)||LA103_0==TOD||LA103_0==XOR||LA103_0==DT||(LA103_0>=LD && LA103_0<=LT)||LA103_0==OR||LA103_0==LeftParenthesis||LA103_0==PlusSign||LA103_0==HyphenMinus||(LA103_0>=D && LA103_0<=T)||(LA103_0>=RULE_NON_DECIMAL && LA103_0<=RULE_INT)||(LA103_0>=RULE_ID && LA103_0<=RULE_STRING)) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSTFunctionParser.g:11532:3: rule__STFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2"
    // InternalSTFunctionParser.g:11540:1: rule__STFeatureExpression__Group_2__2 : rule__STFeatureExpression__Group_2__2__Impl ;
    public final void rule__STFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11544:1: ( rule__STFeatureExpression__Group_2__2__Impl )
            // InternalSTFunctionParser.g:11545:2: rule__STFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2__Impl"
    // InternalSTFunctionParser.g:11551:1: rule__STFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11555:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:11556:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:11556:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:11557:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0"
    // InternalSTFunctionParser.g:11567:1: rule__STFeatureExpression__Group_2_1__0 : rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11571:1: ( rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 )
            // InternalSTFunctionParser.g:11572:2: rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_81);
            rule__STFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0__Impl"
    // InternalSTFunctionParser.g:11579:1: rule__STFeatureExpression__Group_2_1__0__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11583:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTFunctionParser.g:11584:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTFunctionParser.g:11584:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTFunctionParser.g:11585:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTFunctionParser.g:11586:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTFunctionParser.g:11586:3: rule__STFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1"
    // InternalSTFunctionParser.g:11594:1: rule__STFeatureExpression__Group_2_1__1 : rule__STFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11598:1: ( rule__STFeatureExpression__Group_2_1__1__Impl )
            // InternalSTFunctionParser.g:11599:2: rule__STFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1__Impl"
    // InternalSTFunctionParser.g:11605:1: rule__STFeatureExpression__Group_2_1__1__Impl : ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11609:1: ( ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTFunctionParser.g:11610:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTFunctionParser.g:11610:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTFunctionParser.g:11611:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTFunctionParser.g:11612:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==Comma) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalSTFunctionParser.g:11612:3: rule__STFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0"
    // InternalSTFunctionParser.g:11621:1: rule__STFeatureExpression__Group_2_1_1__0 : rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11625:1: ( rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 )
            // InternalSTFunctionParser.g:11626:2: rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTFunctionParser.g:11633:1: rule__STFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11637:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:11638:1: ( Comma )
            {
            // InternalSTFunctionParser.g:11638:1: ( Comma )
            // InternalSTFunctionParser.g:11639:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1"
    // InternalSTFunctionParser.g:11648:1: rule__STFeatureExpression__Group_2_1_1__1 : rule__STFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11652:1: ( rule__STFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTFunctionParser.g:11653:2: rule__STFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTFunctionParser.g:11659:1: rule__STFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11663:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTFunctionParser.g:11664:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:11664:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTFunctionParser.g:11665:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTFunctionParser.g:11666:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTFunctionParser.g:11666:3: rule__STFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__0"
    // InternalSTFunctionParser.g:11675:1: rule__STBuiltinFeatureExpression__Group__0 : rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1 ;
    public final void rule__STBuiltinFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11679:1: ( rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1 )
            // InternalSTFunctionParser.g:11680:2: rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__STBuiltinFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:11687:1: rule__STBuiltinFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STBuiltinFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11691:1: ( ( () ) )
            // InternalSTFunctionParser.g:11692:1: ( () )
            {
            // InternalSTFunctionParser.g:11692:1: ( () )
            // InternalSTFunctionParser.g:11693:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getSTBuiltinFeatureExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:11694:2: ()
            // InternalSTFunctionParser.g:11694:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getSTBuiltinFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__1"
    // InternalSTFunctionParser.g:11702:1: rule__STBuiltinFeatureExpression__Group__1 : rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2 ;
    public final void rule__STBuiltinFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11706:1: ( rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2 )
            // InternalSTFunctionParser.g:11707:2: rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STBuiltinFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:11714:1: rule__STBuiltinFeatureExpression__Group__1__Impl : ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11718:1: ( ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTFunctionParser.g:11719:1: ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:11719:1: ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTFunctionParser.g:11720:2: ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTFunctionParser.g:11721:2: ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 )
            // InternalSTFunctionParser.g:11721:3: rule__STBuiltinFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__2"
    // InternalSTFunctionParser.g:11729:1: rule__STBuiltinFeatureExpression__Group__2 : rule__STBuiltinFeatureExpression__Group__2__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11733:1: ( rule__STBuiltinFeatureExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:11734:2: rule__STBuiltinFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__2"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:11740:1: rule__STBuiltinFeatureExpression__Group__2__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STBuiltinFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11744:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:11745:1: ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:11745:1: ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? )
            // InternalSTFunctionParser.g:11746:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:11747:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==LeftParenthesis) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSTFunctionParser.g:11747:3: rule__STBuiltinFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STBuiltinFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__0"
    // InternalSTFunctionParser.g:11756:1: rule__STBuiltinFeatureExpression__Group_2__0 : rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11760:1: ( rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1 )
            // InternalSTFunctionParser.g:11761:2: rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_80);
            rule__STBuiltinFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:11768:1: rule__STBuiltinFeatureExpression__Group_2__0__Impl : ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11772:1: ( ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) ) )
            // InternalSTFunctionParser.g:11773:1: ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) )
            {
            // InternalSTFunctionParser.g:11773:1: ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) )
            // InternalSTFunctionParser.g:11774:2: ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallAssignment_2_0()); 
            }
            // InternalSTFunctionParser.g:11775:2: ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 )
            // InternalSTFunctionParser.g:11775:3: rule__STBuiltinFeatureExpression__CallAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__CallAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__1"
    // InternalSTFunctionParser.g:11783:1: rule__STBuiltinFeatureExpression__Group_2__1 : rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2 ;
    public final void rule__STBuiltinFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11787:1: ( rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2 )
            // InternalSTFunctionParser.g:11788:2: rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_80);
            rule__STBuiltinFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:11795:1: rule__STBuiltinFeatureExpression__Group_2__1__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11799:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTFunctionParser.g:11800:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTFunctionParser.g:11800:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? )
            // InternalSTFunctionParser.g:11801:2: ( rule__STBuiltinFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTFunctionParser.g:11802:2: ( rule__STBuiltinFeatureExpression__Group_2_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==LDATE_AND_TIME||LA106_0==DATE_AND_TIME||LA106_0==LTIME_OF_DAY||LA106_0==TIME_OF_DAY||LA106_0==WSTRING||LA106_0==STRING||LA106_0==DWORD||LA106_0==FALSE||(LA106_0>=LDATE && LA106_0<=LWORD)||(LA106_0>=UDINT && LA106_0<=ULINT)||(LA106_0>=USINT && LA106_0<=WCHAR)||(LA106_0>=BOOL && LA106_0<=BYTE)||(LA106_0>=CHAR && LA106_0<=DINT)||(LA106_0>=LINT && LA106_0<=LTOD)||(LA106_0>=REAL && LA106_0<=SINT)||(LA106_0>=THIS && LA106_0<=TRUE)||LA106_0==UINT||LA106_0==WORD||LA106_0==AND||(LA106_0>=INT && LA106_0<=NOT)||LA106_0==TOD||LA106_0==XOR||LA106_0==DT||(LA106_0>=LD && LA106_0<=LT)||LA106_0==OR||LA106_0==LeftParenthesis||LA106_0==PlusSign||LA106_0==HyphenMinus||(LA106_0>=D && LA106_0<=T)||(LA106_0>=RULE_NON_DECIMAL && LA106_0<=RULE_INT)||(LA106_0>=RULE_ID && LA106_0<=RULE_STRING)) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSTFunctionParser.g:11802:3: rule__STBuiltinFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STBuiltinFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__2"
    // InternalSTFunctionParser.g:11810:1: rule__STBuiltinFeatureExpression__Group_2__2 : rule__STBuiltinFeatureExpression__Group_2__2__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11814:1: ( rule__STBuiltinFeatureExpression__Group_2__2__Impl )
            // InternalSTFunctionParser.g:11815:2: rule__STBuiltinFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__2__Impl"
    // InternalSTFunctionParser.g:11821:1: rule__STBuiltinFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11825:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:11826:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:11826:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:11827:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__0"
    // InternalSTFunctionParser.g:11837:1: rule__STBuiltinFeatureExpression__Group_2_1__0 : rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11841:1: ( rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1 )
            // InternalSTFunctionParser.g:11842:2: rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_81);
            rule__STBuiltinFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__0__Impl"
    // InternalSTFunctionParser.g:11849:1: rule__STBuiltinFeatureExpression__Group_2_1__0__Impl : ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11853:1: ( ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTFunctionParser.g:11854:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTFunctionParser.g:11854:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTFunctionParser.g:11855:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTFunctionParser.g:11856:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTFunctionParser.g:11856:3: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__1"
    // InternalSTFunctionParser.g:11864:1: rule__STBuiltinFeatureExpression__Group_2_1__1 : rule__STBuiltinFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11868:1: ( rule__STBuiltinFeatureExpression__Group_2_1__1__Impl )
            // InternalSTFunctionParser.g:11869:2: rule__STBuiltinFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__1__Impl"
    // InternalSTFunctionParser.g:11875:1: rule__STBuiltinFeatureExpression__Group_2_1__1__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11879:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTFunctionParser.g:11880:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTFunctionParser.g:11880:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTFunctionParser.g:11881:2: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTFunctionParser.g:11882:2: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==Comma) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSTFunctionParser.g:11882:3: rule__STBuiltinFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STBuiltinFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__0"
    // InternalSTFunctionParser.g:11891:1: rule__STBuiltinFeatureExpression__Group_2_1_1__0 : rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11895:1: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1 )
            // InternalSTFunctionParser.g:11896:2: rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTFunctionParser.g:11903:1: rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11907:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:11908:1: ( Comma )
            {
            // InternalSTFunctionParser.g:11908:1: ( Comma )
            // InternalSTFunctionParser.g:11909:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__1"
    // InternalSTFunctionParser.g:11918:1: rule__STBuiltinFeatureExpression__Group_2_1_1__1 : rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11922:1: ( rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTFunctionParser.g:11923:2: rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTFunctionParser.g:11929:1: rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11933:1: ( ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTFunctionParser.g:11934:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:11934:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTFunctionParser.g:11935:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTFunctionParser.g:11936:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTFunctionParser.g:11936:3: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0"
    // InternalSTFunctionParser.g:11945:1: rule__STMultibitPartialExpression__Group__0 : rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 ;
    public final void rule__STMultibitPartialExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11949:1: ( rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 )
            // InternalSTFunctionParser.g:11950:2: rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__STMultibitPartialExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:11957:1: rule__STMultibitPartialExpression__Group__0__Impl : ( () ) ;
    public final void rule__STMultibitPartialExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11961:1: ( ( () ) )
            // InternalSTFunctionParser.g:11962:1: ( () )
            {
            // InternalSTFunctionParser.g:11962:1: ( () )
            // InternalSTFunctionParser.g:11963:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:11964:2: ()
            // InternalSTFunctionParser.g:11964:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1"
    // InternalSTFunctionParser.g:11972:1: rule__STMultibitPartialExpression__Group__1 : rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 ;
    public final void rule__STMultibitPartialExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11976:1: ( rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 )
            // InternalSTFunctionParser.g:11977:2: rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2
            {
            pushFollow(FOLLOW_78);
            rule__STMultibitPartialExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:11984:1: rule__STMultibitPartialExpression__Group__1__Impl : ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) ;
    public final void rule__STMultibitPartialExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11988:1: ( ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) )
            // InternalSTFunctionParser.g:11989:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            {
            // InternalSTFunctionParser.g:11989:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            // InternalSTFunctionParser.g:11990:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }
            // InternalSTFunctionParser.g:11991:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0>=B && LA108_0<=X)) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSTFunctionParser.g:11991:3: rule__STMultibitPartialExpression__SpecifierAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__SpecifierAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2"
    // InternalSTFunctionParser.g:11999:1: rule__STMultibitPartialExpression__Group__2 : rule__STMultibitPartialExpression__Group__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12003:1: ( rule__STMultibitPartialExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:12004:2: rule__STMultibitPartialExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:12010:1: rule__STMultibitPartialExpression__Group__2__Impl : ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) ;
    public final void rule__STMultibitPartialExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12014:1: ( ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) )
            // InternalSTFunctionParser.g:12015:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            {
            // InternalSTFunctionParser.g:12015:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            // InternalSTFunctionParser.g:12016:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }
            // InternalSTFunctionParser.g:12017:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            // InternalSTFunctionParser.g:12017:3: rule__STMultibitPartialExpression__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0"
    // InternalSTFunctionParser.g:12026:1: rule__STMultibitPartialExpression__Group_2_1__0 : rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12030:1: ( rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 )
            // InternalSTFunctionParser.g:12031:2: rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STMultibitPartialExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0__Impl"
    // InternalSTFunctionParser.g:12038:1: rule__STMultibitPartialExpression__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12042:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:12043:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:12043:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:12044:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1"
    // InternalSTFunctionParser.g:12053:1: rule__STMultibitPartialExpression__Group_2_1__1 : rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12057:1: ( rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 )
            // InternalSTFunctionParser.g:12058:2: rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2
            {
            pushFollow(FOLLOW_79);
            rule__STMultibitPartialExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1__Impl"
    // InternalSTFunctionParser.g:12065:1: rule__STMultibitPartialExpression__Group_2_1__1__Impl : ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12069:1: ( ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) )
            // InternalSTFunctionParser.g:12070:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            {
            // InternalSTFunctionParser.g:12070:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            // InternalSTFunctionParser.g:12071:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }
            // InternalSTFunctionParser.g:12072:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            // InternalSTFunctionParser.g:12072:3: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2"
    // InternalSTFunctionParser.g:12080:1: rule__STMultibitPartialExpression__Group_2_1__2 : rule__STMultibitPartialExpression__Group_2_1__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12084:1: ( rule__STMultibitPartialExpression__Group_2_1__2__Impl )
            // InternalSTFunctionParser.g:12085:2: rule__STMultibitPartialExpression__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2__Impl"
    // InternalSTFunctionParser.g:12091:1: rule__STMultibitPartialExpression__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12095:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:12096:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:12096:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:12097:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0"
    // InternalSTFunctionParser.g:12107:1: rule__STNumericLiteral__Group_0__0 : rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 ;
    public final void rule__STNumericLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12111:1: ( rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 )
            // InternalSTFunctionParser.g:12112:2: rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1
            {
            pushFollow(FOLLOW_34);
            rule__STNumericLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0__Impl"
    // InternalSTFunctionParser.g:12119:1: rule__STNumericLiteral__Group_0__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STNumericLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12123:1: ( ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTFunctionParser.g:12124:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTFunctionParser.g:12124:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            // InternalSTFunctionParser.g:12125:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTFunctionParser.g:12126:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            // InternalSTFunctionParser.g:12126:3: rule__STNumericLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1"
    // InternalSTFunctionParser.g:12134:1: rule__STNumericLiteral__Group_0__1 : rule__STNumericLiteral__Group_0__1__Impl rule__STNumericLiteral__Group_0__2 ;
    public final void rule__STNumericLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12138:1: ( rule__STNumericLiteral__Group_0__1__Impl rule__STNumericLiteral__Group_0__2 )
            // InternalSTFunctionParser.g:12139:2: rule__STNumericLiteral__Group_0__1__Impl rule__STNumericLiteral__Group_0__2
            {
            pushFollow(FOLLOW_69);
            rule__STNumericLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1__Impl"
    // InternalSTFunctionParser.g:12146:1: rule__STNumericLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STNumericLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12150:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12151:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12151:1: ( NumberSign )
            // InternalSTFunctionParser.g:12152:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__2"
    // InternalSTFunctionParser.g:12161:1: rule__STNumericLiteral__Group_0__2 : rule__STNumericLiteral__Group_0__2__Impl ;
    public final void rule__STNumericLiteral__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12165:1: ( rule__STNumericLiteral__Group_0__2__Impl )
            // InternalSTFunctionParser.g:12166:2: rule__STNumericLiteral__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__2"


    // $ANTLR start "rule__STNumericLiteral__Group_0__2__Impl"
    // InternalSTFunctionParser.g:12172:1: rule__STNumericLiteral__Group_0__2__Impl : ( ( rule__STNumericLiteral__ValueAssignment_0_2 ) ) ;
    public final void rule__STNumericLiteral__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12176:1: ( ( ( rule__STNumericLiteral__ValueAssignment_0_2 ) ) )
            // InternalSTFunctionParser.g:12177:1: ( ( rule__STNumericLiteral__ValueAssignment_0_2 ) )
            {
            // InternalSTFunctionParser.g:12177:1: ( ( rule__STNumericLiteral__ValueAssignment_0_2 ) )
            // InternalSTFunctionParser.g:12178:2: ( rule__STNumericLiteral__ValueAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_0_2()); 
            }
            // InternalSTFunctionParser.g:12179:2: ( rule__STNumericLiteral__ValueAssignment_0_2 )
            // InternalSTFunctionParser.g:12179:3: rule__STNumericLiteral__ValueAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_1__0"
    // InternalSTFunctionParser.g:12188:1: rule__STNumericLiteral__Group_1__0 : rule__STNumericLiteral__Group_1__0__Impl rule__STNumericLiteral__Group_1__1 ;
    public final void rule__STNumericLiteral__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12192:1: ( rule__STNumericLiteral__Group_1__0__Impl rule__STNumericLiteral__Group_1__1 )
            // InternalSTFunctionParser.g:12193:2: rule__STNumericLiteral__Group_1__0__Impl rule__STNumericLiteral__Group_1__1
            {
            pushFollow(FOLLOW_83);
            rule__STNumericLiteral__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1__0"


    // $ANTLR start "rule__STNumericLiteral__Group_1__0__Impl"
    // InternalSTFunctionParser.g:12200:1: rule__STNumericLiteral__Group_1__0__Impl : ( ( rule__STNumericLiteral__Group_1_0__0 )? ) ;
    public final void rule__STNumericLiteral__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12204:1: ( ( ( rule__STNumericLiteral__Group_1_0__0 )? ) )
            // InternalSTFunctionParser.g:12205:1: ( ( rule__STNumericLiteral__Group_1_0__0 )? )
            {
            // InternalSTFunctionParser.g:12205:1: ( ( rule__STNumericLiteral__Group_1_0__0 )? )
            // InternalSTFunctionParser.g:12206:2: ( rule__STNumericLiteral__Group_1_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:12207:2: ( rule__STNumericLiteral__Group_1_0__0 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==DWORD||LA109_0==LREAL||LA109_0==LWORD||(LA109_0>=UDINT && LA109_0<=ULINT)||LA109_0==USINT||(LA109_0>=BOOL && LA109_0<=BYTE)||LA109_0==DINT||LA109_0==LINT||(LA109_0>=REAL && LA109_0<=SINT)||LA109_0==UINT||LA109_0==WORD||LA109_0==INT) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalSTFunctionParser.g:12207:3: rule__STNumericLiteral__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_1__1"
    // InternalSTFunctionParser.g:12215:1: rule__STNumericLiteral__Group_1__1 : rule__STNumericLiteral__Group_1__1__Impl ;
    public final void rule__STNumericLiteral__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12219:1: ( rule__STNumericLiteral__Group_1__1__Impl )
            // InternalSTFunctionParser.g:12220:2: rule__STNumericLiteral__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1__1"


    // $ANTLR start "rule__STNumericLiteral__Group_1__1__Impl"
    // InternalSTFunctionParser.g:12226:1: rule__STNumericLiteral__Group_1__1__Impl : ( ( rule__STNumericLiteral__ValueAssignment_1_1 ) ) ;
    public final void rule__STNumericLiteral__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12230:1: ( ( ( rule__STNumericLiteral__ValueAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:12231:1: ( ( rule__STNumericLiteral__ValueAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:12231:1: ( ( rule__STNumericLiteral__ValueAssignment_1_1 ) )
            // InternalSTFunctionParser.g:12232:2: ( rule__STNumericLiteral__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:12233:2: ( rule__STNumericLiteral__ValueAssignment_1_1 )
            // InternalSTFunctionParser.g:12233:3: rule__STNumericLiteral__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1__1__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_1_0__0"
    // InternalSTFunctionParser.g:12242:1: rule__STNumericLiteral__Group_1_0__0 : rule__STNumericLiteral__Group_1_0__0__Impl rule__STNumericLiteral__Group_1_0__1 ;
    public final void rule__STNumericLiteral__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12246:1: ( rule__STNumericLiteral__Group_1_0__0__Impl rule__STNumericLiteral__Group_1_0__1 )
            // InternalSTFunctionParser.g:12247:2: rule__STNumericLiteral__Group_1_0__0__Impl rule__STNumericLiteral__Group_1_0__1
            {
            pushFollow(FOLLOW_34);
            rule__STNumericLiteral__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1_0__0"


    // $ANTLR start "rule__STNumericLiteral__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:12254:1: rule__STNumericLiteral__Group_1_0__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_1_0_0 ) ) ;
    public final void rule__STNumericLiteral__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12258:1: ( ( ( rule__STNumericLiteral__TypeAssignment_1_0_0 ) ) )
            // InternalSTFunctionParser.g:12259:1: ( ( rule__STNumericLiteral__TypeAssignment_1_0_0 ) )
            {
            // InternalSTFunctionParser.g:12259:1: ( ( rule__STNumericLiteral__TypeAssignment_1_0_0 ) )
            // InternalSTFunctionParser.g:12260:2: ( rule__STNumericLiteral__TypeAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_1_0_0()); 
            }
            // InternalSTFunctionParser.g:12261:2: ( rule__STNumericLiteral__TypeAssignment_1_0_0 )
            // InternalSTFunctionParser.g:12261:3: rule__STNumericLiteral__TypeAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__TypeAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1_0__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_1_0__1"
    // InternalSTFunctionParser.g:12269:1: rule__STNumericLiteral__Group_1_0__1 : rule__STNumericLiteral__Group_1_0__1__Impl ;
    public final void rule__STNumericLiteral__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12273:1: ( rule__STNumericLiteral__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:12274:2: rule__STNumericLiteral__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1_0__1"


    // $ANTLR start "rule__STNumericLiteral__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:12280:1: rule__STNumericLiteral__Group_1_0__1__Impl : ( NumberSign ) ;
    public final void rule__STNumericLiteral__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12284:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12285:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12285:1: ( NumberSign )
            // InternalSTFunctionParser.g:12286:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_1_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_1_0__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__0"
    // InternalSTFunctionParser.g:12296:1: rule__STDateLiteral__Group__0 : rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 ;
    public final void rule__STDateLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12300:1: ( rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 )
            // InternalSTFunctionParser.g:12301:2: rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STDateLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0"


    // $ANTLR start "rule__STDateLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:12308:1: rule__STDateLiteral__Group__0__Impl : ( ( rule__STDateLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12312:1: ( ( ( rule__STDateLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:12313:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:12313:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:12314:2: ( rule__STDateLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:12315:2: ( rule__STDateLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:12315:3: rule__STDateLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__1"
    // InternalSTFunctionParser.g:12323:1: rule__STDateLiteral__Group__1 : rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 ;
    public final void rule__STDateLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12327:1: ( rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 )
            // InternalSTFunctionParser.g:12328:2: rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__STDateLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1"


    // $ANTLR start "rule__STDateLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:12335:1: rule__STDateLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12339:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12340:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12340:1: ( NumberSign )
            // InternalSTFunctionParser.g:12341:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__2"
    // InternalSTFunctionParser.g:12350:1: rule__STDateLiteral__Group__2 : rule__STDateLiteral__Group__2__Impl ;
    public final void rule__STDateLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12354:1: ( rule__STDateLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:12355:2: rule__STDateLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2"


    // $ANTLR start "rule__STDateLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:12361:1: rule__STDateLiteral__Group__2__Impl : ( ( rule__STDateLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12365:1: ( ( ( rule__STDateLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:12366:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:12366:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:12367:2: ( rule__STDateLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:12368:2: ( rule__STDateLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:12368:3: rule__STDateLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__0"
    // InternalSTFunctionParser.g:12377:1: rule__STTimeLiteral__Group__0 : rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 ;
    public final void rule__STTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12381:1: ( rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 )
            // InternalSTFunctionParser.g:12382:2: rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0"


    // $ANTLR start "rule__STTimeLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:12389:1: rule__STTimeLiteral__Group__0__Impl : ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12393:1: ( ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:12394:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:12394:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:12395:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:12396:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:12396:3: rule__STTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__1"
    // InternalSTFunctionParser.g:12404:1: rule__STTimeLiteral__Group__1 : rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 ;
    public final void rule__STTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12408:1: ( rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 )
            // InternalSTFunctionParser.g:12409:2: rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_85);
            rule__STTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1"


    // $ANTLR start "rule__STTimeLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:12416:1: rule__STTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12420:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12421:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12421:1: ( NumberSign )
            // InternalSTFunctionParser.g:12422:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__2"
    // InternalSTFunctionParser.g:12431:1: rule__STTimeLiteral__Group__2 : rule__STTimeLiteral__Group__2__Impl ;
    public final void rule__STTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12435:1: ( rule__STTimeLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:12436:2: rule__STTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2"


    // $ANTLR start "rule__STTimeLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:12442:1: rule__STTimeLiteral__Group__2__Impl : ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12446:1: ( ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:12447:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:12447:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:12448:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:12449:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:12449:3: rule__STTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0"
    // InternalSTFunctionParser.g:12458:1: rule__STTimeOfDayLiteral__Group__0 : rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 ;
    public final void rule__STTimeOfDayLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12462:1: ( rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 )
            // InternalSTFunctionParser.g:12463:2: rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STTimeOfDayLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:12470:1: rule__STTimeOfDayLiteral__Group__0__Impl : ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12474:1: ( ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:12475:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:12475:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:12476:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:12477:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:12477:3: rule__STTimeOfDayLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1"
    // InternalSTFunctionParser.g:12485:1: rule__STTimeOfDayLiteral__Group__1 : rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 ;
    public final void rule__STTimeOfDayLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12489:1: ( rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 )
            // InternalSTFunctionParser.g:12490:2: rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__STTimeOfDayLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:12497:1: rule__STTimeOfDayLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeOfDayLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12501:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12502:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12502:1: ( NumberSign )
            // InternalSTFunctionParser.g:12503:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2"
    // InternalSTFunctionParser.g:12512:1: rule__STTimeOfDayLiteral__Group__2 : rule__STTimeOfDayLiteral__Group__2__Impl ;
    public final void rule__STTimeOfDayLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12516:1: ( rule__STTimeOfDayLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:12517:2: rule__STTimeOfDayLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:12523:1: rule__STTimeOfDayLiteral__Group__2__Impl : ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12527:1: ( ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:12528:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:12528:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:12529:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:12530:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:12530:3: rule__STTimeOfDayLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0"
    // InternalSTFunctionParser.g:12539:1: rule__STDateAndTimeLiteral__Group__0 : rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 ;
    public final void rule__STDateAndTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12543:1: ( rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 )
            // InternalSTFunctionParser.g:12544:2: rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STDateAndTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:12551:1: rule__STDateAndTimeLiteral__Group__0__Impl : ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12555:1: ( ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:12556:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:12556:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:12557:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:12558:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:12558:3: rule__STDateAndTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1"
    // InternalSTFunctionParser.g:12566:1: rule__STDateAndTimeLiteral__Group__1 : rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 ;
    public final void rule__STDateAndTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12570:1: ( rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 )
            // InternalSTFunctionParser.g:12571:2: rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__STDateAndTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:12578:1: rule__STDateAndTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateAndTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12582:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12583:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12583:1: ( NumberSign )
            // InternalSTFunctionParser.g:12584:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2"
    // InternalSTFunctionParser.g:12593:1: rule__STDateAndTimeLiteral__Group__2 : rule__STDateAndTimeLiteral__Group__2__Impl ;
    public final void rule__STDateAndTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12597:1: ( rule__STDateAndTimeLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:12598:2: rule__STDateAndTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:12604:1: rule__STDateAndTimeLiteral__Group__2__Impl : ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12608:1: ( ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:12609:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:12609:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:12610:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:12611:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:12611:3: rule__STDateAndTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__0"
    // InternalSTFunctionParser.g:12620:1: rule__STStringLiteral__Group__0 : rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 ;
    public final void rule__STStringLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12624:1: ( rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 )
            // InternalSTFunctionParser.g:12625:2: rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1
            {
            pushFollow(FOLLOW_86);
            rule__STStringLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0"


    // $ANTLR start "rule__STStringLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:12632:1: rule__STStringLiteral__Group__0__Impl : ( ( rule__STStringLiteral__Group_0__0 )? ) ;
    public final void rule__STStringLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12636:1: ( ( ( rule__STStringLiteral__Group_0__0 )? ) )
            // InternalSTFunctionParser.g:12637:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            {
            // InternalSTFunctionParser.g:12637:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            // InternalSTFunctionParser.g:12638:2: ( rule__STStringLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }
            // InternalSTFunctionParser.g:12639:2: ( rule__STStringLiteral__Group_0__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==WSTRING||LA110_0==STRING||LA110_0==WCHAR||LA110_0==CHAR) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSTFunctionParser.g:12639:3: rule__STStringLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStringLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__1"
    // InternalSTFunctionParser.g:12647:1: rule__STStringLiteral__Group__1 : rule__STStringLiteral__Group__1__Impl ;
    public final void rule__STStringLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12651:1: ( rule__STStringLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:12652:2: rule__STStringLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1"


    // $ANTLR start "rule__STStringLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:12658:1: rule__STStringLiteral__Group__1__Impl : ( ( rule__STStringLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STStringLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12662:1: ( ( ( rule__STStringLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:12663:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:12663:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:12664:2: ( rule__STStringLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:12665:2: ( rule__STStringLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:12665:3: rule__STStringLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__0"
    // InternalSTFunctionParser.g:12674:1: rule__STStringLiteral__Group_0__0 : rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 ;
    public final void rule__STStringLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12678:1: ( rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 )
            // InternalSTFunctionParser.g:12679:2: rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1
            {
            pushFollow(FOLLOW_34);
            rule__STStringLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0"


    // $ANTLR start "rule__STStringLiteral__Group_0__0__Impl"
    // InternalSTFunctionParser.g:12686:1: rule__STStringLiteral__Group_0__0__Impl : ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STStringLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12690:1: ( ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTFunctionParser.g:12691:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTFunctionParser.g:12691:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            // InternalSTFunctionParser.g:12692:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTFunctionParser.g:12693:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            // InternalSTFunctionParser.g:12693:3: rule__STStringLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__1"
    // InternalSTFunctionParser.g:12701:1: rule__STStringLiteral__Group_0__1 : rule__STStringLiteral__Group_0__1__Impl ;
    public final void rule__STStringLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12705:1: ( rule__STStringLiteral__Group_0__1__Impl )
            // InternalSTFunctionParser.g:12706:2: rule__STStringLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1"


    // $ANTLR start "rule__STStringLiteral__Group_0__1__Impl"
    // InternalSTFunctionParser.g:12712:1: rule__STStringLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STStringLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12716:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12717:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12717:1: ( NumberSign )
            // InternalSTFunctionParser.g:12718:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__EnumValue__Group__0"
    // InternalSTFunctionParser.g:12728:1: rule__EnumValue__Group__0 : rule__EnumValue__Group__0__Impl rule__EnumValue__Group__1 ;
    public final void rule__EnumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12732:1: ( rule__EnumValue__Group__0__Impl rule__EnumValue__Group__1 )
            // InternalSTFunctionParser.g:12733:2: rule__EnumValue__Group__0__Impl rule__EnumValue__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__EnumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EnumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumValue__Group__0"


    // $ANTLR start "rule__EnumValue__Group__0__Impl"
    // InternalSTFunctionParser.g:12740:1: rule__EnumValue__Group__0__Impl : ( ruleQualifiedName ) ;
    public final void rule__EnumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12744:1: ( ( ruleQualifiedName ) )
            // InternalSTFunctionParser.g:12745:1: ( ruleQualifiedName )
            {
            // InternalSTFunctionParser.g:12745:1: ( ruleQualifiedName )
            // InternalSTFunctionParser.g:12746:2: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumValueAccess().getQualifiedNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumValueAccess().getQualifiedNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumValue__Group__0__Impl"


    // $ANTLR start "rule__EnumValue__Group__1"
    // InternalSTFunctionParser.g:12755:1: rule__EnumValue__Group__1 : rule__EnumValue__Group__1__Impl rule__EnumValue__Group__2 ;
    public final void rule__EnumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12759:1: ( rule__EnumValue__Group__1__Impl rule__EnumValue__Group__2 )
            // InternalSTFunctionParser.g:12760:2: rule__EnumValue__Group__1__Impl rule__EnumValue__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__EnumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EnumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumValue__Group__1"


    // $ANTLR start "rule__EnumValue__Group__1__Impl"
    // InternalSTFunctionParser.g:12767:1: rule__EnumValue__Group__1__Impl : ( NumberSign ) ;
    public final void rule__EnumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12771:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:12772:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:12772:1: ( NumberSign )
            // InternalSTFunctionParser.g:12773:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumValueAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumValueAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumValue__Group__1__Impl"


    // $ANTLR start "rule__EnumValue__Group__2"
    // InternalSTFunctionParser.g:12782:1: rule__EnumValue__Group__2 : rule__EnumValue__Group__2__Impl ;
    public final void rule__EnumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12786:1: ( rule__EnumValue__Group__2__Impl )
            // InternalSTFunctionParser.g:12787:2: rule__EnumValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumValue__Group__2"


    // $ANTLR start "rule__EnumValue__Group__2__Impl"
    // InternalSTFunctionParser.g:12793:1: rule__EnumValue__Group__2__Impl : ( RULE_ID ) ;
    public final void rule__EnumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12797:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:12798:1: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:12798:1: ( RULE_ID )
            // InternalSTFunctionParser.g:12799:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumValueAccess().getIDTerminalRuleCall_2()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumValueAccess().getIDTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumValue__Group__2__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalSTFunctionParser.g:12809:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12813:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalSTFunctionParser.g:12814:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_87);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalSTFunctionParser.g:12821:1: rule__QualifiedName__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12825:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:12826:1: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:12826:1: ( RULE_ID )
            // InternalSTFunctionParser.g:12827:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalSTFunctionParser.g:12836:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12840:1: ( rule__QualifiedName__Group__1__Impl )
            // InternalSTFunctionParser.g:12841:2: rule__QualifiedName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalSTFunctionParser.g:12847:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12851:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:12852:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:12852:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalSTFunctionParser.g:12853:2: ( rule__QualifiedName__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:12854:2: ( rule__QualifiedName__Group_1__0 )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==ColonColon) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSTFunctionParser.g:12854:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_88);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalSTFunctionParser.g:12863:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12867:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalSTFunctionParser.g:12868:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalSTFunctionParser.g:12875:1: rule__QualifiedName__Group_1__0__Impl : ( ColonColon ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12879:1: ( ( ColonColon ) )
            // InternalSTFunctionParser.g:12880:1: ( ColonColon )
            {
            // InternalSTFunctionParser.g:12880:1: ( ColonColon )
            // InternalSTFunctionParser.g:12881:2: ColonColon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0()); 
            }
            match(input,ColonColon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalSTFunctionParser.g:12890:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12894:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalSTFunctionParser.g:12895:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalSTFunctionParser.g:12901:1: rule__QualifiedName__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12905:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:12906:1: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:12906:1: ( RULE_ID )
            // InternalSTFunctionParser.g:12907:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0"
    // InternalSTFunctionParser.g:12917:1: rule__QualifiedNameWithWildcard__Group__0 : rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 ;
    public final void rule__QualifiedNameWithWildcard__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12921:1: ( rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 )
            // InternalSTFunctionParser.g:12922:2: rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1
            {
            pushFollow(FOLLOW_89);
            rule__QualifiedNameWithWildcard__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0__Impl"
    // InternalSTFunctionParser.g:12929:1: rule__QualifiedNameWithWildcard__Group__0__Impl : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameWithWildcard__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12933:1: ( ( ruleQualifiedName ) )
            // InternalSTFunctionParser.g:12934:1: ( ruleQualifiedName )
            {
            // InternalSTFunctionParser.g:12934:1: ( ruleQualifiedName )
            // InternalSTFunctionParser.g:12935:2: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1"
    // InternalSTFunctionParser.g:12944:1: rule__QualifiedNameWithWildcard__Group__1 : rule__QualifiedNameWithWildcard__Group__1__Impl ;
    public final void rule__QualifiedNameWithWildcard__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12948:1: ( rule__QualifiedNameWithWildcard__Group__1__Impl )
            // InternalSTFunctionParser.g:12949:2: rule__QualifiedNameWithWildcard__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1__Impl"
    // InternalSTFunctionParser.g:12955:1: rule__QualifiedNameWithWildcard__Group__1__Impl : ( ( ColonColonAsterisk )? ) ;
    public final void rule__QualifiedNameWithWildcard__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12959:1: ( ( ( ColonColonAsterisk )? ) )
            // InternalSTFunctionParser.g:12960:1: ( ( ColonColonAsterisk )? )
            {
            // InternalSTFunctionParser.g:12960:1: ( ( ColonColonAsterisk )? )
            // InternalSTFunctionParser.g:12961:2: ( ColonColonAsterisk )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getColonColonAsteriskKeyword_1()); 
            }
            // InternalSTFunctionParser.g:12962:2: ( ColonColonAsterisk )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==ColonColonAsterisk) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSTFunctionParser.g:12962:3: ColonColonAsterisk
                    {
                    match(input,ColonColonAsterisk,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getColonColonAsteriskKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__0"
    // InternalSTFunctionParser.g:12971:1: rule__Number__Group__0 : rule__Number__Group__0__Impl rule__Number__Group__1 ;
    public final void rule__Number__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12975:1: ( rule__Number__Group__0__Impl rule__Number__Group__1 )
            // InternalSTFunctionParser.g:12976:2: rule__Number__Group__0__Impl rule__Number__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__Number__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0"


    // $ANTLR start "rule__Number__Group__0__Impl"
    // InternalSTFunctionParser.g:12983:1: rule__Number__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Number__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:12987:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:12988:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:12988:1: ( RULE_INT )
            // InternalSTFunctionParser.g:12989:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0__Impl"


    // $ANTLR start "rule__Number__Group__1"
    // InternalSTFunctionParser.g:12998:1: rule__Number__Group__1 : rule__Number__Group__1__Impl ;
    public final void rule__Number__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13002:1: ( rule__Number__Group__1__Impl )
            // InternalSTFunctionParser.g:13003:2: rule__Number__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1"


    // $ANTLR start "rule__Number__Group__1__Impl"
    // InternalSTFunctionParser.g:13009:1: rule__Number__Group__1__Impl : ( ( rule__Number__Group_1__0 )? ) ;
    public final void rule__Number__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13013:1: ( ( ( rule__Number__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:13014:1: ( ( rule__Number__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:13014:1: ( ( rule__Number__Group_1__0 )? )
            // InternalSTFunctionParser.g:13015:2: ( rule__Number__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:13016:2: ( rule__Number__Group_1__0 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==FullStop) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSTFunctionParser.g:13016:3: rule__Number__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1__Impl"


    // $ANTLR start "rule__Number__Group_1__0"
    // InternalSTFunctionParser.g:13025:1: rule__Number__Group_1__0 : rule__Number__Group_1__0__Impl rule__Number__Group_1__1 ;
    public final void rule__Number__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13029:1: ( rule__Number__Group_1__0__Impl rule__Number__Group_1__1 )
            // InternalSTFunctionParser.g:13030:2: rule__Number__Group_1__0__Impl rule__Number__Group_1__1
            {
            pushFollow(FOLLOW_90);
            rule__Number__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_1__0"


    // $ANTLR start "rule__Number__Group_1__0__Impl"
    // InternalSTFunctionParser.g:13037:1: rule__Number__Group_1__0__Impl : ( FullStop ) ;
    public final void rule__Number__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13041:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:13042:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:13042:1: ( FullStop )
            // InternalSTFunctionParser.g:13043:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_1__0__Impl"


    // $ANTLR start "rule__Number__Group_1__1"
    // InternalSTFunctionParser.g:13052:1: rule__Number__Group_1__1 : rule__Number__Group_1__1__Impl ;
    public final void rule__Number__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13056:1: ( rule__Number__Group_1__1__Impl )
            // InternalSTFunctionParser.g:13057:2: rule__Number__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_1__1"


    // $ANTLR start "rule__Number__Group_1__1__Impl"
    // InternalSTFunctionParser.g:13063:1: rule__Number__Group_1__1__Impl : ( ( rule__Number__Alternatives_1_1 ) ) ;
    public final void rule__Number__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13067:1: ( ( ( rule__Number__Alternatives_1_1 ) ) )
            // InternalSTFunctionParser.g:13068:1: ( ( rule__Number__Alternatives_1_1 ) )
            {
            // InternalSTFunctionParser.g:13068:1: ( ( rule__Number__Alternatives_1_1 ) )
            // InternalSTFunctionParser.g:13069:2: ( rule__Number__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_1_1()); 
            }
            // InternalSTFunctionParser.g:13070:2: ( rule__Number__Alternatives_1_1 )
            // InternalSTFunctionParser.g:13070:3: rule__Number__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_1__1__Impl"


    // $ANTLR start "rule__SignedNumber__Group__0"
    // InternalSTFunctionParser.g:13079:1: rule__SignedNumber__Group__0 : rule__SignedNumber__Group__0__Impl rule__SignedNumber__Group__1 ;
    public final void rule__SignedNumber__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13083:1: ( rule__SignedNumber__Group__0__Impl rule__SignedNumber__Group__1 )
            // InternalSTFunctionParser.g:13084:2: rule__SignedNumber__Group__0__Impl rule__SignedNumber__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__SignedNumber__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group__0"


    // $ANTLR start "rule__SignedNumber__Group__0__Impl"
    // InternalSTFunctionParser.g:13091:1: rule__SignedNumber__Group__0__Impl : ( ( rule__SignedNumber__Alternatives_0 ) ) ;
    public final void rule__SignedNumber__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13095:1: ( ( ( rule__SignedNumber__Alternatives_0 ) ) )
            // InternalSTFunctionParser.g:13096:1: ( ( rule__SignedNumber__Alternatives_0 ) )
            {
            // InternalSTFunctionParser.g:13096:1: ( ( rule__SignedNumber__Alternatives_0 ) )
            // InternalSTFunctionParser.g:13097:2: ( rule__SignedNumber__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberAccess().getAlternatives_0()); 
            }
            // InternalSTFunctionParser.g:13098:2: ( rule__SignedNumber__Alternatives_0 )
            // InternalSTFunctionParser.g:13098:3: rule__SignedNumber__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group__0__Impl"


    // $ANTLR start "rule__SignedNumber__Group__1"
    // InternalSTFunctionParser.g:13106:1: rule__SignedNumber__Group__1 : rule__SignedNumber__Group__1__Impl rule__SignedNumber__Group__2 ;
    public final void rule__SignedNumber__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13110:1: ( rule__SignedNumber__Group__1__Impl rule__SignedNumber__Group__2 )
            // InternalSTFunctionParser.g:13111:2: rule__SignedNumber__Group__1__Impl rule__SignedNumber__Group__2
            {
            pushFollow(FOLLOW_77);
            rule__SignedNumber__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group__1"


    // $ANTLR start "rule__SignedNumber__Group__1__Impl"
    // InternalSTFunctionParser.g:13118:1: rule__SignedNumber__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__SignedNumber__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13122:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13123:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13123:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13124:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group__1__Impl"


    // $ANTLR start "rule__SignedNumber__Group__2"
    // InternalSTFunctionParser.g:13133:1: rule__SignedNumber__Group__2 : rule__SignedNumber__Group__2__Impl ;
    public final void rule__SignedNumber__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13137:1: ( rule__SignedNumber__Group__2__Impl )
            // InternalSTFunctionParser.g:13138:2: rule__SignedNumber__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group__2"


    // $ANTLR start "rule__SignedNumber__Group__2__Impl"
    // InternalSTFunctionParser.g:13144:1: rule__SignedNumber__Group__2__Impl : ( ( rule__SignedNumber__Group_2__0 )? ) ;
    public final void rule__SignedNumber__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13148:1: ( ( ( rule__SignedNumber__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:13149:1: ( ( rule__SignedNumber__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:13149:1: ( ( rule__SignedNumber__Group_2__0 )? )
            // InternalSTFunctionParser.g:13150:2: ( rule__SignedNumber__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:13151:2: ( rule__SignedNumber__Group_2__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==FullStop) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSTFunctionParser.g:13151:3: rule__SignedNumber__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SignedNumber__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group__2__Impl"


    // $ANTLR start "rule__SignedNumber__Group_2__0"
    // InternalSTFunctionParser.g:13160:1: rule__SignedNumber__Group_2__0 : rule__SignedNumber__Group_2__0__Impl rule__SignedNumber__Group_2__1 ;
    public final void rule__SignedNumber__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13164:1: ( rule__SignedNumber__Group_2__0__Impl rule__SignedNumber__Group_2__1 )
            // InternalSTFunctionParser.g:13165:2: rule__SignedNumber__Group_2__0__Impl rule__SignedNumber__Group_2__1
            {
            pushFollow(FOLLOW_90);
            rule__SignedNumber__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group_2__0"


    // $ANTLR start "rule__SignedNumber__Group_2__0__Impl"
    // InternalSTFunctionParser.g:13172:1: rule__SignedNumber__Group_2__0__Impl : ( FullStop ) ;
    public final void rule__SignedNumber__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13176:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:13177:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:13177:1: ( FullStop )
            // InternalSTFunctionParser.g:13178:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberAccess().getFullStopKeyword_2_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group_2__0__Impl"


    // $ANTLR start "rule__SignedNumber__Group_2__1"
    // InternalSTFunctionParser.g:13187:1: rule__SignedNumber__Group_2__1 : rule__SignedNumber__Group_2__1__Impl ;
    public final void rule__SignedNumber__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13191:1: ( rule__SignedNumber__Group_2__1__Impl )
            // InternalSTFunctionParser.g:13192:2: rule__SignedNumber__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group_2__1"


    // $ANTLR start "rule__SignedNumber__Group_2__1__Impl"
    // InternalSTFunctionParser.g:13198:1: rule__SignedNumber__Group_2__1__Impl : ( ( rule__SignedNumber__Alternatives_2_1 ) ) ;
    public final void rule__SignedNumber__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13202:1: ( ( ( rule__SignedNumber__Alternatives_2_1 ) ) )
            // InternalSTFunctionParser.g:13203:1: ( ( rule__SignedNumber__Alternatives_2_1 ) )
            {
            // InternalSTFunctionParser.g:13203:1: ( ( rule__SignedNumber__Alternatives_2_1 ) )
            // InternalSTFunctionParser.g:13204:2: ( rule__SignedNumber__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedNumberAccess().getAlternatives_2_1()); 
            }
            // InternalSTFunctionParser.g:13205:2: ( rule__SignedNumber__Alternatives_2_1 )
            // InternalSTFunctionParser.g:13205:3: rule__SignedNumber__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SignedNumber__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedNumberAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedNumber__Group_2__1__Impl"


    // $ANTLR start "rule__Time__Group__0"
    // InternalSTFunctionParser.g:13214:1: rule__Time__Group__0 : rule__Time__Group__0__Impl rule__Time__Group__1 ;
    public final void rule__Time__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13218:1: ( rule__Time__Group__0__Impl rule__Time__Group__1 )
            // InternalSTFunctionParser.g:13219:2: rule__Time__Group__0__Impl rule__Time__Group__1
            {
            pushFollow(FOLLOW_85);
            rule__Time__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0"


    // $ANTLR start "rule__Time__Group__0__Impl"
    // InternalSTFunctionParser.g:13226:1: rule__Time__Group__0__Impl : ( ( rule__Time__Alternatives_0 )? ) ;
    public final void rule__Time__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13230:1: ( ( ( rule__Time__Alternatives_0 )? ) )
            // InternalSTFunctionParser.g:13231:1: ( ( rule__Time__Alternatives_0 )? )
            {
            // InternalSTFunctionParser.g:13231:1: ( ( rule__Time__Alternatives_0 )? )
            // InternalSTFunctionParser.g:13232:2: ( rule__Time__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getAlternatives_0()); 
            }
            // InternalSTFunctionParser.g:13233:2: ( rule__Time__Alternatives_0 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==PlusSign||LA115_0==HyphenMinus) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSTFunctionParser.g:13233:3: rule__Time__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Time__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0__Impl"


    // $ANTLR start "rule__Time__Group__1"
    // InternalSTFunctionParser.g:13241:1: rule__Time__Group__1 : rule__Time__Group__1__Impl ;
    public final void rule__Time__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13245:1: ( rule__Time__Group__1__Impl )
            // InternalSTFunctionParser.g:13246:2: rule__Time__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1"


    // $ANTLR start "rule__Time__Group__1__Impl"
    // InternalSTFunctionParser.g:13252:1: rule__Time__Group__1__Impl : ( RULE_TIME_VALUE ) ;
    public final void rule__Time__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13256:1: ( ( RULE_TIME_VALUE ) )
            // InternalSTFunctionParser.g:13257:1: ( RULE_TIME_VALUE )
            {
            // InternalSTFunctionParser.g:13257:1: ( RULE_TIME_VALUE )
            // InternalSTFunctionParser.g:13258:2: RULE_TIME_VALUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getTIME_VALUETerminalRuleCall_1()); 
            }
            match(input,RULE_TIME_VALUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getTIME_VALUETerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__0"
    // InternalSTFunctionParser.g:13268:1: rule__Date__Group__0 : rule__Date__Group__0__Impl rule__Date__Group__1 ;
    public final void rule__Date__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13272:1: ( rule__Date__Group__0__Impl rule__Date__Group__1 )
            // InternalSTFunctionParser.g:13273:2: rule__Date__Group__0__Impl rule__Date__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__Date__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0"


    // $ANTLR start "rule__Date__Group__0__Impl"
    // InternalSTFunctionParser.g:13280:1: rule__Date__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13284:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13285:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13285:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13286:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0__Impl"


    // $ANTLR start "rule__Date__Group__1"
    // InternalSTFunctionParser.g:13295:1: rule__Date__Group__1 : rule__Date__Group__1__Impl rule__Date__Group__2 ;
    public final void rule__Date__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13299:1: ( rule__Date__Group__1__Impl rule__Date__Group__2 )
            // InternalSTFunctionParser.g:13300:2: rule__Date__Group__1__Impl rule__Date__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__Date__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1"


    // $ANTLR start "rule__Date__Group__1__Impl"
    // InternalSTFunctionParser.g:13307:1: rule__Date__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13311:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:13312:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:13312:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:13313:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__2"
    // InternalSTFunctionParser.g:13322:1: rule__Date__Group__2 : rule__Date__Group__2__Impl rule__Date__Group__3 ;
    public final void rule__Date__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13326:1: ( rule__Date__Group__2__Impl rule__Date__Group__3 )
            // InternalSTFunctionParser.g:13327:2: rule__Date__Group__2__Impl rule__Date__Group__3
            {
            pushFollow(FOLLOW_91);
            rule__Date__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2"


    // $ANTLR start "rule__Date__Group__2__Impl"
    // InternalSTFunctionParser.g:13334:1: rule__Date__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13338:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13339:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13339:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13340:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2__Impl"


    // $ANTLR start "rule__Date__Group__3"
    // InternalSTFunctionParser.g:13349:1: rule__Date__Group__3 : rule__Date__Group__3__Impl rule__Date__Group__4 ;
    public final void rule__Date__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13353:1: ( rule__Date__Group__3__Impl rule__Date__Group__4 )
            // InternalSTFunctionParser.g:13354:2: rule__Date__Group__3__Impl rule__Date__Group__4
            {
            pushFollow(FOLLOW_84);
            rule__Date__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3"


    // $ANTLR start "rule__Date__Group__3__Impl"
    // InternalSTFunctionParser.g:13361:1: rule__Date__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13365:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:13366:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:13366:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:13367:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3__Impl"


    // $ANTLR start "rule__Date__Group__4"
    // InternalSTFunctionParser.g:13376:1: rule__Date__Group__4 : rule__Date__Group__4__Impl ;
    public final void rule__Date__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13380:1: ( rule__Date__Group__4__Impl )
            // InternalSTFunctionParser.g:13381:2: rule__Date__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4"


    // $ANTLR start "rule__Date__Group__4__Impl"
    // InternalSTFunctionParser.g:13387:1: rule__Date__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13391:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13392:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13392:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13393:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__0"
    // InternalSTFunctionParser.g:13403:1: rule__DateAndTime__Group__0 : rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 ;
    public final void rule__DateAndTime__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13407:1: ( rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 )
            // InternalSTFunctionParser.g:13408:2: rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__DateAndTime__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0"


    // $ANTLR start "rule__DateAndTime__Group__0__Impl"
    // InternalSTFunctionParser.g:13415:1: rule__DateAndTime__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13419:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13420:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13420:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13421:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group__1"
    // InternalSTFunctionParser.g:13430:1: rule__DateAndTime__Group__1 : rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 ;
    public final void rule__DateAndTime__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13434:1: ( rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 )
            // InternalSTFunctionParser.g:13435:2: rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__DateAndTime__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1"


    // $ANTLR start "rule__DateAndTime__Group__1__Impl"
    // InternalSTFunctionParser.g:13442:1: rule__DateAndTime__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13446:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:13447:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:13447:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:13448:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1__Impl"


    // $ANTLR start "rule__DateAndTime__Group__2"
    // InternalSTFunctionParser.g:13457:1: rule__DateAndTime__Group__2 : rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 ;
    public final void rule__DateAndTime__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13461:1: ( rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 )
            // InternalSTFunctionParser.g:13462:2: rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3
            {
            pushFollow(FOLLOW_91);
            rule__DateAndTime__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2"


    // $ANTLR start "rule__DateAndTime__Group__2__Impl"
    // InternalSTFunctionParser.g:13469:1: rule__DateAndTime__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13473:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13474:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13474:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13475:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2__Impl"


    // $ANTLR start "rule__DateAndTime__Group__3"
    // InternalSTFunctionParser.g:13484:1: rule__DateAndTime__Group__3 : rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 ;
    public final void rule__DateAndTime__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13488:1: ( rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 )
            // InternalSTFunctionParser.g:13489:2: rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4
            {
            pushFollow(FOLLOW_84);
            rule__DateAndTime__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3"


    // $ANTLR start "rule__DateAndTime__Group__3__Impl"
    // InternalSTFunctionParser.g:13496:1: rule__DateAndTime__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13500:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:13501:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:13501:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:13502:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3__Impl"


    // $ANTLR start "rule__DateAndTime__Group__4"
    // InternalSTFunctionParser.g:13511:1: rule__DateAndTime__Group__4 : rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 ;
    public final void rule__DateAndTime__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13515:1: ( rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 )
            // InternalSTFunctionParser.g:13516:2: rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5
            {
            pushFollow(FOLLOW_91);
            rule__DateAndTime__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4"


    // $ANTLR start "rule__DateAndTime__Group__4__Impl"
    // InternalSTFunctionParser.g:13523:1: rule__DateAndTime__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13527:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13528:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13528:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13529:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__5"
    // InternalSTFunctionParser.g:13538:1: rule__DateAndTime__Group__5 : rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 ;
    public final void rule__DateAndTime__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13542:1: ( rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 )
            // InternalSTFunctionParser.g:13543:2: rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6
            {
            pushFollow(FOLLOW_84);
            rule__DateAndTime__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5"


    // $ANTLR start "rule__DateAndTime__Group__5__Impl"
    // InternalSTFunctionParser.g:13550:1: rule__DateAndTime__Group__5__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13554:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:13555:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:13555:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:13556:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5__Impl"


    // $ANTLR start "rule__DateAndTime__Group__6"
    // InternalSTFunctionParser.g:13565:1: rule__DateAndTime__Group__6 : rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 ;
    public final void rule__DateAndTime__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13569:1: ( rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 )
            // InternalSTFunctionParser.g:13570:2: rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7
            {
            pushFollow(FOLLOW_92);
            rule__DateAndTime__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6"


    // $ANTLR start "rule__DateAndTime__Group__6__Impl"
    // InternalSTFunctionParser.g:13577:1: rule__DateAndTime__Group__6__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13581:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13582:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13582:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13583:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6__Impl"


    // $ANTLR start "rule__DateAndTime__Group__7"
    // InternalSTFunctionParser.g:13592:1: rule__DateAndTime__Group__7 : rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 ;
    public final void rule__DateAndTime__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13596:1: ( rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 )
            // InternalSTFunctionParser.g:13597:2: rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8
            {
            pushFollow(FOLLOW_84);
            rule__DateAndTime__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7"


    // $ANTLR start "rule__DateAndTime__Group__7__Impl"
    // InternalSTFunctionParser.g:13604:1: rule__DateAndTime__Group__7__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13608:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:13609:1: ( Colon )
            {
            // InternalSTFunctionParser.g:13609:1: ( Colon )
            // InternalSTFunctionParser.g:13610:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7__Impl"


    // $ANTLR start "rule__DateAndTime__Group__8"
    // InternalSTFunctionParser.g:13619:1: rule__DateAndTime__Group__8 : rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 ;
    public final void rule__DateAndTime__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13623:1: ( rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 )
            // InternalSTFunctionParser.g:13624:2: rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9
            {
            pushFollow(FOLLOW_92);
            rule__DateAndTime__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8"


    // $ANTLR start "rule__DateAndTime__Group__8__Impl"
    // InternalSTFunctionParser.g:13631:1: rule__DateAndTime__Group__8__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13635:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13636:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13636:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13637:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8__Impl"


    // $ANTLR start "rule__DateAndTime__Group__9"
    // InternalSTFunctionParser.g:13646:1: rule__DateAndTime__Group__9 : rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 ;
    public final void rule__DateAndTime__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13650:1: ( rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 )
            // InternalSTFunctionParser.g:13651:2: rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10
            {
            pushFollow(FOLLOW_84);
            rule__DateAndTime__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9"


    // $ANTLR start "rule__DateAndTime__Group__9__Impl"
    // InternalSTFunctionParser.g:13658:1: rule__DateAndTime__Group__9__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13662:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:13663:1: ( Colon )
            {
            // InternalSTFunctionParser.g:13663:1: ( Colon )
            // InternalSTFunctionParser.g:13664:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9__Impl"


    // $ANTLR start "rule__DateAndTime__Group__10"
    // InternalSTFunctionParser.g:13673:1: rule__DateAndTime__Group__10 : rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 ;
    public final void rule__DateAndTime__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13677:1: ( rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 )
            // InternalSTFunctionParser.g:13678:2: rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11
            {
            pushFollow(FOLLOW_77);
            rule__DateAndTime__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10"


    // $ANTLR start "rule__DateAndTime__Group__10__Impl"
    // InternalSTFunctionParser.g:13685:1: rule__DateAndTime__Group__10__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13689:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13690:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13690:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13691:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10__Impl"


    // $ANTLR start "rule__DateAndTime__Group__11"
    // InternalSTFunctionParser.g:13700:1: rule__DateAndTime__Group__11 : rule__DateAndTime__Group__11__Impl ;
    public final void rule__DateAndTime__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13704:1: ( rule__DateAndTime__Group__11__Impl )
            // InternalSTFunctionParser.g:13705:2: rule__DateAndTime__Group__11__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11"


    // $ANTLR start "rule__DateAndTime__Group__11__Impl"
    // InternalSTFunctionParser.g:13711:1: rule__DateAndTime__Group__11__Impl : ( ( rule__DateAndTime__Group_11__0 )? ) ;
    public final void rule__DateAndTime__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13715:1: ( ( ( rule__DateAndTime__Group_11__0 )? ) )
            // InternalSTFunctionParser.g:13716:1: ( ( rule__DateAndTime__Group_11__0 )? )
            {
            // InternalSTFunctionParser.g:13716:1: ( ( rule__DateAndTime__Group_11__0 )? )
            // InternalSTFunctionParser.g:13717:2: ( rule__DateAndTime__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }
            // InternalSTFunctionParser.g:13718:2: ( rule__DateAndTime__Group_11__0 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==FullStop) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSTFunctionParser.g:13718:3: rule__DateAndTime__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DateAndTime__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__0"
    // InternalSTFunctionParser.g:13727:1: rule__DateAndTime__Group_11__0 : rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 ;
    public final void rule__DateAndTime__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13731:1: ( rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 )
            // InternalSTFunctionParser.g:13732:2: rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1
            {
            pushFollow(FOLLOW_84);
            rule__DateAndTime__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0"


    // $ANTLR start "rule__DateAndTime__Group_11__0__Impl"
    // InternalSTFunctionParser.g:13739:1: rule__DateAndTime__Group_11__0__Impl : ( FullStop ) ;
    public final void rule__DateAndTime__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13743:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:13744:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:13744:1: ( FullStop )
            // InternalSTFunctionParser.g:13745:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__1"
    // InternalSTFunctionParser.g:13754:1: rule__DateAndTime__Group_11__1 : rule__DateAndTime__Group_11__1__Impl ;
    public final void rule__DateAndTime__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13758:1: ( rule__DateAndTime__Group_11__1__Impl )
            // InternalSTFunctionParser.g:13759:2: rule__DateAndTime__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1"


    // $ANTLR start "rule__DateAndTime__Group_11__1__Impl"
    // InternalSTFunctionParser.g:13765:1: rule__DateAndTime__Group_11__1__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13769:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13770:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13770:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13771:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__0"
    // InternalSTFunctionParser.g:13781:1: rule__TimeOfDay__Group__0 : rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 ;
    public final void rule__TimeOfDay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13785:1: ( rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 )
            // InternalSTFunctionParser.g:13786:2: rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1
            {
            pushFollow(FOLLOW_92);
            rule__TimeOfDay__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0"


    // $ANTLR start "rule__TimeOfDay__Group__0__Impl"
    // InternalSTFunctionParser.g:13793:1: rule__TimeOfDay__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13797:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13798:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13798:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13799:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__1"
    // InternalSTFunctionParser.g:13808:1: rule__TimeOfDay__Group__1 : rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 ;
    public final void rule__TimeOfDay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13812:1: ( rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 )
            // InternalSTFunctionParser.g:13813:2: rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__TimeOfDay__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1"


    // $ANTLR start "rule__TimeOfDay__Group__1__Impl"
    // InternalSTFunctionParser.g:13820:1: rule__TimeOfDay__Group__1__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13824:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:13825:1: ( Colon )
            {
            // InternalSTFunctionParser.g:13825:1: ( Colon )
            // InternalSTFunctionParser.g:13826:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__2"
    // InternalSTFunctionParser.g:13835:1: rule__TimeOfDay__Group__2 : rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 ;
    public final void rule__TimeOfDay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13839:1: ( rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 )
            // InternalSTFunctionParser.g:13840:2: rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3
            {
            pushFollow(FOLLOW_92);
            rule__TimeOfDay__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2"


    // $ANTLR start "rule__TimeOfDay__Group__2__Impl"
    // InternalSTFunctionParser.g:13847:1: rule__TimeOfDay__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13851:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13852:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13852:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13853:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__3"
    // InternalSTFunctionParser.g:13862:1: rule__TimeOfDay__Group__3 : rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 ;
    public final void rule__TimeOfDay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13866:1: ( rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 )
            // InternalSTFunctionParser.g:13867:2: rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4
            {
            pushFollow(FOLLOW_84);
            rule__TimeOfDay__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3"


    // $ANTLR start "rule__TimeOfDay__Group__3__Impl"
    // InternalSTFunctionParser.g:13874:1: rule__TimeOfDay__Group__3__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13878:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:13879:1: ( Colon )
            {
            // InternalSTFunctionParser.g:13879:1: ( Colon )
            // InternalSTFunctionParser.g:13880:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__4"
    // InternalSTFunctionParser.g:13889:1: rule__TimeOfDay__Group__4 : rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 ;
    public final void rule__TimeOfDay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13893:1: ( rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 )
            // InternalSTFunctionParser.g:13894:2: rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5
            {
            pushFollow(FOLLOW_77);
            rule__TimeOfDay__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4"


    // $ANTLR start "rule__TimeOfDay__Group__4__Impl"
    // InternalSTFunctionParser.g:13901:1: rule__TimeOfDay__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13905:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13906:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13906:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13907:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__5"
    // InternalSTFunctionParser.g:13916:1: rule__TimeOfDay__Group__5 : rule__TimeOfDay__Group__5__Impl ;
    public final void rule__TimeOfDay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13920:1: ( rule__TimeOfDay__Group__5__Impl )
            // InternalSTFunctionParser.g:13921:2: rule__TimeOfDay__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5"


    // $ANTLR start "rule__TimeOfDay__Group__5__Impl"
    // InternalSTFunctionParser.g:13927:1: rule__TimeOfDay__Group__5__Impl : ( ( rule__TimeOfDay__Group_5__0 )? ) ;
    public final void rule__TimeOfDay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13931:1: ( ( ( rule__TimeOfDay__Group_5__0 )? ) )
            // InternalSTFunctionParser.g:13932:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            {
            // InternalSTFunctionParser.g:13932:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            // InternalSTFunctionParser.g:13933:2: ( rule__TimeOfDay__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }
            // InternalSTFunctionParser.g:13934:2: ( rule__TimeOfDay__Group_5__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==FullStop) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSTFunctionParser.g:13934:3: rule__TimeOfDay__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeOfDay__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__0"
    // InternalSTFunctionParser.g:13943:1: rule__TimeOfDay__Group_5__0 : rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 ;
    public final void rule__TimeOfDay__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13947:1: ( rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 )
            // InternalSTFunctionParser.g:13948:2: rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1
            {
            pushFollow(FOLLOW_84);
            rule__TimeOfDay__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0"


    // $ANTLR start "rule__TimeOfDay__Group_5__0__Impl"
    // InternalSTFunctionParser.g:13955:1: rule__TimeOfDay__Group_5__0__Impl : ( FullStop ) ;
    public final void rule__TimeOfDay__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13959:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:13960:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:13960:1: ( FullStop )
            // InternalSTFunctionParser.g:13961:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__1"
    // InternalSTFunctionParser.g:13970:1: rule__TimeOfDay__Group_5__1 : rule__TimeOfDay__Group_5__1__Impl ;
    public final void rule__TimeOfDay__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13974:1: ( rule__TimeOfDay__Group_5__1__Impl )
            // InternalSTFunctionParser.g:13975:2: rule__TimeOfDay__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1"


    // $ANTLR start "rule__TimeOfDay__Group_5__1__Impl"
    // InternalSTFunctionParser.g:13981:1: rule__TimeOfDay__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:13985:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:13986:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:13986:1: ( RULE_INT )
            // InternalSTFunctionParser.g:13987:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1__Impl"


    // $ANTLR start "rule__STFunctionSource__NameAssignment_1_1"
    // InternalSTFunctionParser.g:13997:1: rule__STFunctionSource__NameAssignment_1_1 : ( ruleQualifiedName ) ;
    public final void rule__STFunctionSource__NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14001:1: ( ( ruleQualifiedName ) )
            // InternalSTFunctionParser.g:14002:2: ( ruleQualifiedName )
            {
            // InternalSTFunctionParser.g:14002:2: ( ruleQualifiedName )
            // InternalSTFunctionParser.g:14003:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getNameQualifiedNameParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getNameQualifiedNameParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__NameAssignment_1_1"


    // $ANTLR start "rule__STFunctionSource__ImportsAssignment_2"
    // InternalSTFunctionParser.g:14012:1: rule__STFunctionSource__ImportsAssignment_2 : ( ruleSTImport ) ;
    public final void rule__STFunctionSource__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14016:1: ( ( ruleSTImport ) )
            // InternalSTFunctionParser.g:14017:2: ( ruleSTImport )
            {
            // InternalSTFunctionParser.g:14017:2: ( ruleSTImport )
            // InternalSTFunctionParser.g:14018:3: ruleSTImport
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getImportsSTImportParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getImportsSTImportParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__ImportsAssignment_2"


    // $ANTLR start "rule__STFunctionSource__FunctionsAssignment_3"
    // InternalSTFunctionParser.g:14027:1: rule__STFunctionSource__FunctionsAssignment_3 : ( ruleSTFunction ) ;
    public final void rule__STFunctionSource__FunctionsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14031:1: ( ( ruleSTFunction ) )
            // InternalSTFunctionParser.g:14032:2: ( ruleSTFunction )
            {
            // InternalSTFunctionParser.g:14032:2: ( ruleSTFunction )
            // InternalSTFunctionParser.g:14033:3: ruleSTFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionSourceAccess().getFunctionsSTFunctionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionSourceAccess().getFunctionsSTFunctionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunctionSource__FunctionsAssignment_3"


    // $ANTLR start "rule__STFunction__NameAssignment_2"
    // InternalSTFunctionParser.g:14042:1: rule__STFunction__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__STFunction__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14046:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:14047:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:14047:2: ( RULE_ID )
            // InternalSTFunctionParser.g:14048:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__NameAssignment_2"


    // $ANTLR start "rule__STFunction__ReturnTypeAssignment_3_1"
    // InternalSTFunctionParser.g:14057:1: rule__STFunction__ReturnTypeAssignment_3_1 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STFunction__ReturnTypeAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14061:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTFunctionParser.g:14062:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTFunctionParser.g:14062:2: ( ( ruleSTAnyType ) )
            // InternalSTFunctionParser.g:14063:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getReturnTypeDataTypeCrossReference_3_1_0()); 
            }
            // InternalSTFunctionParser.g:14064:3: ( ruleSTAnyType )
            // InternalSTFunctionParser.g:14065:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getReturnTypeDataTypeSTAnyTypeParserRuleCall_3_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getReturnTypeDataTypeSTAnyTypeParserRuleCall_3_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getReturnTypeDataTypeCrossReference_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__ReturnTypeAssignment_3_1"


    // $ANTLR start "rule__STFunction__VarDeclarationsAssignment_4"
    // InternalSTFunctionParser.g:14076:1: rule__STFunction__VarDeclarationsAssignment_4 : ( ( rule__STFunction__VarDeclarationsAlternatives_4_0 ) ) ;
    public final void rule__STFunction__VarDeclarationsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14080:1: ( ( ( rule__STFunction__VarDeclarationsAlternatives_4_0 ) ) )
            // InternalSTFunctionParser.g:14081:2: ( ( rule__STFunction__VarDeclarationsAlternatives_4_0 ) )
            {
            // InternalSTFunctionParser.g:14081:2: ( ( rule__STFunction__VarDeclarationsAlternatives_4_0 ) )
            // InternalSTFunctionParser.g:14082:3: ( rule__STFunction__VarDeclarationsAlternatives_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getVarDeclarationsAlternatives_4_0()); 
            }
            // InternalSTFunctionParser.g:14083:3: ( rule__STFunction__VarDeclarationsAlternatives_4_0 )
            // InternalSTFunctionParser.g:14083:4: rule__STFunction__VarDeclarationsAlternatives_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STFunction__VarDeclarationsAlternatives_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getVarDeclarationsAlternatives_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__VarDeclarationsAssignment_4"


    // $ANTLR start "rule__STFunction__CodeAssignment_5"
    // InternalSTFunctionParser.g:14091:1: rule__STFunction__CodeAssignment_5 : ( ruleSTStatement ) ;
    public final void rule__STFunction__CodeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14095:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:14096:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:14096:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:14097:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getCodeSTStatementParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getCodeSTStatementParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__CodeAssignment_5"


    // $ANTLR start "rule__STExpressionSource__ExpressionAssignment_1"
    // InternalSTFunctionParser.g:14106:1: rule__STExpressionSource__ExpressionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STExpressionSource__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14110:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14111:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14111:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14112:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getExpressionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getExpressionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__ExpressionAssignment_1"


    // $ANTLR start "rule__STInitializerExpressionSource__InitializerExpressionAssignment_1"
    // InternalSTFunctionParser.g:14121:1: rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STInitializerExpressionSource__InitializerExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14125:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14126:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14126:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14127:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionSTInitializerExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionSTInitializerExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__InitializerExpressionAssignment_1"


    // $ANTLR start "rule__STImport__ImportedNamespaceAssignment_1"
    // InternalSTFunctionParser.g:14136:1: rule__STImport__ImportedNamespaceAssignment_1 : ( ruleQualifiedNameWithWildcard ) ;
    public final void rule__STImport__ImportedNamespaceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14140:1: ( ( ruleQualifiedNameWithWildcard ) )
            // InternalSTFunctionParser.g:14141:2: ( ruleQualifiedNameWithWildcard )
            {
            // InternalSTFunctionParser.g:14141:2: ( ruleQualifiedNameWithWildcard )
            // InternalSTFunctionParser.g:14142:3: ruleQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STImport__ImportedNamespaceAssignment_1"


    // $ANTLR start "rule__STVarDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:14151:1: rule__STVarDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14155:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:14156:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:14156:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:14157:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:14158:3: ( CONSTANT )
            // InternalSTFunctionParser.g:14159:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:14170:1: rule__STVarDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14174:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTFunctionParser.g:14175:2: ( ruleSTVarDeclaration )
            {
            // InternalSTFunctionParser.g:14175:2: ( ruleSTVarDeclaration )
            // InternalSTFunctionParser.g:14176:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarTempDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:14185:1: rule__STVarTempDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarTempDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14189:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:14190:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:14190:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:14191:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:14192:3: ( CONSTANT )
            // InternalSTFunctionParser.g:14193:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:14204:1: rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14208:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTFunctionParser.g:14209:2: ( ruleSTVarDeclaration )
            {
            // InternalSTFunctionParser.g:14209:2: ( ruleSTVarDeclaration )
            // InternalSTFunctionParser.g:14210:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarInputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:14219:1: rule__STVarInputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarInputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14223:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:14224:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:14224:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:14225:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:14226:3: ( CONSTANT )
            // InternalSTFunctionParser.g:14227:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:14238:1: rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14242:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTFunctionParser.g:14243:2: ( ruleSTVarDeclaration )
            {
            // InternalSTFunctionParser.g:14243:2: ( ruleSTVarDeclaration )
            // InternalSTFunctionParser.g:14244:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:14253:1: rule__STVarOutputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarOutputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14257:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:14258:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:14258:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:14259:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:14260:3: ( CONSTANT )
            // InternalSTFunctionParser.g:14261:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:14272:1: rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14276:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTFunctionParser.g:14277:2: ( ruleSTVarDeclaration )
            {
            // InternalSTFunctionParser.g:14277:2: ( ruleSTVarDeclaration )
            // InternalSTFunctionParser.g:14278:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:14287:1: rule__STVarInOutDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarInOutDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14291:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:14292:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:14292:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:14293:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:14294:3: ( CONSTANT )
            // InternalSTFunctionParser.g:14295:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:14306:1: rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14310:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTFunctionParser.g:14311:2: ( ruleSTVarDeclaration )
            {
            // InternalSTFunctionParser.g:14311:2: ( ruleSTVarDeclaration )
            // InternalSTFunctionParser.g:14312:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarDeclaration__NameAssignment_1"
    // InternalSTFunctionParser.g:14321:1: rule__STVarDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STVarDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14325:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:14326:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:14326:2: ( RULE_ID )
            // InternalSTFunctionParser.g:14327:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__NameAssignment_1"


    // $ANTLR start "rule__STVarDeclaration__LocatedAtAssignment_2_1"
    // InternalSTFunctionParser.g:14336:1: rule__STVarDeclaration__LocatedAtAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__STVarDeclaration__LocatedAtAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14340:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:14341:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:14341:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:14342:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }
            // InternalSTFunctionParser.g:14343:3: ( RULE_ID )
            // InternalSTFunctionParser.g:14344:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__LocatedAtAssignment_2_1"


    // $ANTLR start "rule__STVarDeclaration__ArrayAssignment_4_0"
    // InternalSTFunctionParser.g:14355:1: rule__STVarDeclaration__ArrayAssignment_4_0 : ( ( ARRAY ) ) ;
    public final void rule__STVarDeclaration__ArrayAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14359:1: ( ( ( ARRAY ) ) )
            // InternalSTFunctionParser.g:14360:2: ( ( ARRAY ) )
            {
            // InternalSTFunctionParser.g:14360:2: ( ( ARRAY ) )
            // InternalSTFunctionParser.g:14361:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            // InternalSTFunctionParser.g:14362:3: ( ARRAY )
            // InternalSTFunctionParser.g:14363:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__ArrayAssignment_4_0"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_1"
    // InternalSTFunctionParser.g:14374:1: rule__STVarDeclaration__RangesAssignment_4_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14378:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14379:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14379:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14380:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_1"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"
    // InternalSTFunctionParser.g:14389:1: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14393:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14394:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14394:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14395:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_1"
    // InternalSTFunctionParser.g:14404:1: rule__STVarDeclaration__CountAssignment_4_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14408:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:14409:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:14409:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:14410:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            // InternalSTFunctionParser.g:14411:3: ( Asterisk )
            // InternalSTFunctionParser.g:14412:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"
    // InternalSTFunctionParser.g:14423:1: rule__STVarDeclaration__CountAssignment_4_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14427:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:14428:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:14428:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:14429:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            // InternalSTFunctionParser.g:14430:3: ( Asterisk )
            // InternalSTFunctionParser.g:14431:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"


    // $ANTLR start "rule__STVarDeclaration__TypeAssignment_5"
    // InternalSTFunctionParser.g:14442:1: rule__STVarDeclaration__TypeAssignment_5 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STVarDeclaration__TypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14446:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTFunctionParser.g:14447:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTFunctionParser.g:14447:2: ( ( ruleSTAnyType ) )
            // InternalSTFunctionParser.g:14448:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }
            // InternalSTFunctionParser.g:14449:3: ( ruleSTAnyType )
            // InternalSTFunctionParser.g:14450:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__TypeAssignment_5"


    // $ANTLR start "rule__STVarDeclaration__MaxLengthAssignment_6_1"
    // InternalSTFunctionParser.g:14461:1: rule__STVarDeclaration__MaxLengthAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__MaxLengthAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14465:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14466:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14466:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14467:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__MaxLengthAssignment_6_1"


    // $ANTLR start "rule__STVarDeclaration__DefaultValueAssignment_7_1"
    // InternalSTFunctionParser.g:14476:1: rule__STVarDeclaration__DefaultValueAssignment_7_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STVarDeclaration__DefaultValueAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14480:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14481:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14481:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14482:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__DefaultValueAssignment_7_1"


    // $ANTLR start "rule__STVarDeclaration__PragmaAssignment_8"
    // InternalSTFunctionParser.g:14491:1: rule__STVarDeclaration__PragmaAssignment_8 : ( ruleSTPragma ) ;
    public final void rule__STVarDeclaration__PragmaAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14495:1: ( ( ruleSTPragma ) )
            // InternalSTFunctionParser.g:14496:2: ( ruleSTPragma )
            {
            // InternalSTFunctionParser.g:14496:2: ( ruleSTPragma )
            // InternalSTFunctionParser.g:14497:3: ruleSTPragma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getPragmaSTPragmaParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPragma();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getPragmaSTPragmaParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__PragmaAssignment_8"


    // $ANTLR start "rule__STTypeDeclaration__ArrayAssignment_1_0"
    // InternalSTFunctionParser.g:14506:1: rule__STTypeDeclaration__ArrayAssignment_1_0 : ( ( ARRAY ) ) ;
    public final void rule__STTypeDeclaration__ArrayAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14510:1: ( ( ( ARRAY ) ) )
            // InternalSTFunctionParser.g:14511:2: ( ( ARRAY ) )
            {
            // InternalSTFunctionParser.g:14511:2: ( ( ARRAY ) )
            // InternalSTFunctionParser.g:14512:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }
            // InternalSTFunctionParser.g:14513:3: ( ARRAY )
            // InternalSTFunctionParser.g:14514:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__ArrayAssignment_1_0"


    // $ANTLR start "rule__STTypeDeclaration__RangesAssignment_1_1_0_1"
    // InternalSTFunctionParser.g:14525:1: rule__STTypeDeclaration__RangesAssignment_1_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__RangesAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14529:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14530:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14530:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14531:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__RangesAssignment_1_1_0_1"


    // $ANTLR start "rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1"
    // InternalSTFunctionParser.g:14540:1: rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14544:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14545:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14545:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14546:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1"


    // $ANTLR start "rule__STTypeDeclaration__CountAssignment_1_1_1_1"
    // InternalSTFunctionParser.g:14555:1: rule__STTypeDeclaration__CountAssignment_1_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STTypeDeclaration__CountAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14559:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:14560:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:14560:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:14561:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }
            // InternalSTFunctionParser.g:14562:3: ( Asterisk )
            // InternalSTFunctionParser.g:14563:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__CountAssignment_1_1_1_1"


    // $ANTLR start "rule__STTypeDeclaration__CountAssignment_1_1_1_2_1"
    // InternalSTFunctionParser.g:14574:1: rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STTypeDeclaration__CountAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14578:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:14579:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:14579:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:14580:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }
            // InternalSTFunctionParser.g:14581:3: ( Asterisk )
            // InternalSTFunctionParser.g:14582:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__CountAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STTypeDeclaration__TypeAssignment_2"
    // InternalSTFunctionParser.g:14593:1: rule__STTypeDeclaration__TypeAssignment_2 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STTypeDeclaration__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14597:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTFunctionParser.g:14598:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTFunctionParser.g:14598:2: ( ( ruleSTAnyType ) )
            // InternalSTFunctionParser.g:14599:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementCrossReference_2_0()); 
            }
            // InternalSTFunctionParser.g:14600:3: ( ruleSTAnyType )
            // InternalSTFunctionParser.g:14601:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_2_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__TypeAssignment_2"


    // $ANTLR start "rule__STTypeDeclaration__MaxLengthAssignment_3_1"
    // InternalSTFunctionParser.g:14612:1: rule__STTypeDeclaration__MaxLengthAssignment_3_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__MaxLengthAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14616:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14617:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14617:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14618:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__MaxLengthAssignment_3_1"


    // $ANTLR start "rule__STElementaryInitializerExpression__ValueAssignment"
    // InternalSTFunctionParser.g:14627:1: rule__STElementaryInitializerExpression__ValueAssignment : ( ruleSTExpression ) ;
    public final void rule__STElementaryInitializerExpression__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14631:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14632:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14632:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14633:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElementaryInitializerExpression__ValueAssignment"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTFunctionParser.g:14642:1: rule__STArrayInitializerExpression__ValuesAssignment_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14646:1: ( ( ruleSTArrayInitElement ) )
            // InternalSTFunctionParser.g:14647:2: ( ruleSTArrayInitElement )
            {
            // InternalSTFunctionParser.g:14647:2: ( ruleSTArrayInitElement )
            // InternalSTFunctionParser.g:14648:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTFunctionParser.g:14657:1: rule__STArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14661:1: ( ( ruleSTArrayInitElement ) )
            // InternalSTFunctionParser.g:14662:2: ( ruleSTArrayInitElement )
            {
            // InternalSTFunctionParser.g:14662:2: ( ruleSTArrayInitElement )
            // InternalSTFunctionParser.g:14663:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__STSingleArrayInitElement__InitExpressionAssignment"
    // InternalSTFunctionParser.g:14672:1: rule__STSingleArrayInitElement__InitExpressionAssignment : ( ruleSTInitializerExpression ) ;
    public final void rule__STSingleArrayInitElement__InitExpressionAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14676:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14677:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14677:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14678:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSingleArrayInitElementAccess().getInitExpressionSTInitializerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSingleArrayInitElementAccess().getInitExpressionSTInitializerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSingleArrayInitElement__InitExpressionAssignment"


    // $ANTLR start "rule__STRepeatArrayInitElement__RepetitionsAssignment_0"
    // InternalSTFunctionParser.g:14687:1: rule__STRepeatArrayInitElement__RepetitionsAssignment_0 : ( RULE_INT ) ;
    public final void rule__STRepeatArrayInitElement__RepetitionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14691:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:14692:2: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:14692:2: ( RULE_INT )
            // InternalSTFunctionParser.g:14693:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getRepetitionsINTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getRepetitionsINTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__RepetitionsAssignment_0"


    // $ANTLR start "rule__STRepeatArrayInitElement__InitExpressionsAssignment_2"
    // InternalSTFunctionParser.g:14702:1: rule__STRepeatArrayInitElement__InitExpressionsAssignment_2 : ( ruleSTInitializerExpression ) ;
    public final void rule__STRepeatArrayInitElement__InitExpressionsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14706:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14707:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14707:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14708:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__InitExpressionsAssignment_2"


    // $ANTLR start "rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1"
    // InternalSTFunctionParser.g:14717:1: rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14721:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14722:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14722:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14723:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatArrayInitElement__InitExpressionsAssignment_3_1"


    // $ANTLR start "rule__STStructInitializerExpression__TypeAssignment_0_0"
    // InternalSTFunctionParser.g:14732:1: rule__STStructInitializerExpression__TypeAssignment_0_0 : ( ( ruleQualifiedName ) ) ;
    public final void rule__STStructInitializerExpression__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14736:1: ( ( ( ruleQualifiedName ) ) )
            // InternalSTFunctionParser.g:14737:2: ( ( ruleQualifiedName ) )
            {
            // InternalSTFunctionParser.g:14737:2: ( ( ruleQualifiedName ) )
            // InternalSTFunctionParser.g:14738:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getTypeStructuredTypeCrossReference_0_0_0()); 
            }
            // InternalSTFunctionParser.g:14739:3: ( ruleQualifiedName )
            // InternalSTFunctionParser.g:14740:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getTypeStructuredTypeQualifiedNameParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getTypeStructuredTypeQualifiedNameParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getTypeStructuredTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__TypeAssignment_0_0"


    // $ANTLR start "rule__STStructInitializerExpression__ValuesAssignment_2"
    // InternalSTFunctionParser.g:14751:1: rule__STStructInitializerExpression__ValuesAssignment_2 : ( ruleSTStructInitElement ) ;
    public final void rule__STStructInitializerExpression__ValuesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14755:1: ( ( ruleSTStructInitElement ) )
            // InternalSTFunctionParser.g:14756:2: ( ruleSTStructInitElement )
            {
            // InternalSTFunctionParser.g:14756:2: ( ruleSTStructInitElement )
            // InternalSTFunctionParser.g:14757:3: ruleSTStructInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__ValuesAssignment_2"


    // $ANTLR start "rule__STStructInitializerExpression__ValuesAssignment_3_1"
    // InternalSTFunctionParser.g:14766:1: rule__STStructInitializerExpression__ValuesAssignment_3_1 : ( ruleSTStructInitElement ) ;
    public final void rule__STStructInitializerExpression__ValuesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14770:1: ( ( ruleSTStructInitElement ) )
            // InternalSTFunctionParser.g:14771:2: ( ruleSTStructInitElement )
            {
            // InternalSTFunctionParser.g:14771:2: ( ruleSTStructInitElement )
            // InternalSTFunctionParser.g:14772:3: ruleSTStructInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__ValuesAssignment_3_1"


    // $ANTLR start "rule__STStructInitElement__VariableAssignment_0"
    // InternalSTFunctionParser.g:14781:1: rule__STStructInitElement__VariableAssignment_0 : ( ( ruleSTFeatureName ) ) ;
    public final void rule__STStructInitElement__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14785:1: ( ( ( ruleSTFeatureName ) ) )
            // InternalSTFunctionParser.g:14786:2: ( ( ruleSTFeatureName ) )
            {
            // InternalSTFunctionParser.g:14786:2: ( ( ruleSTFeatureName ) )
            // InternalSTFunctionParser.g:14787:3: ( ruleSTFeatureName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:14788:3: ( ruleSTFeatureName )
            // InternalSTFunctionParser.g:14789:4: ruleSTFeatureName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementSTFeatureNameParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementSTFeatureNameParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__VariableAssignment_0"


    // $ANTLR start "rule__STStructInitElement__ValueAssignment_2"
    // InternalSTFunctionParser.g:14800:1: rule__STStructInitElement__ValueAssignment_2 : ( ruleSTInitializerExpression ) ;
    public final void rule__STStructInitElement__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14804:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14805:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14805:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14806:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__ValueAssignment_2"


    // $ANTLR start "rule__STPragma__AttributesAssignment_2"
    // InternalSTFunctionParser.g:14815:1: rule__STPragma__AttributesAssignment_2 : ( ruleSTAttribute ) ;
    public final void rule__STPragma__AttributesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14819:1: ( ( ruleSTAttribute ) )
            // InternalSTFunctionParser.g:14820:2: ( ruleSTAttribute )
            {
            // InternalSTFunctionParser.g:14820:2: ( ruleSTAttribute )
            // InternalSTFunctionParser.g:14821:3: ruleSTAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getAttributesSTAttributeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getAttributesSTAttributeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__AttributesAssignment_2"


    // $ANTLR start "rule__STPragma__AttributesAssignment_3_1"
    // InternalSTFunctionParser.g:14830:1: rule__STPragma__AttributesAssignment_3_1 : ( ruleSTAttribute ) ;
    public final void rule__STPragma__AttributesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14834:1: ( ( ruleSTAttribute ) )
            // InternalSTFunctionParser.g:14835:2: ( ruleSTAttribute )
            {
            // InternalSTFunctionParser.g:14835:2: ( ruleSTAttribute )
            // InternalSTFunctionParser.g:14836:3: ruleSTAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPragmaAccess().getAttributesSTAttributeParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPragmaAccess().getAttributesSTAttributeParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPragma__AttributesAssignment_3_1"


    // $ANTLR start "rule__STAttribute__DeclarationAssignment_0"
    // InternalSTFunctionParser.g:14845:1: rule__STAttribute__DeclarationAssignment_0 : ( ( ruleSTAttributeName ) ) ;
    public final void rule__STAttribute__DeclarationAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14849:1: ( ( ( ruleSTAttributeName ) ) )
            // InternalSTFunctionParser.g:14850:2: ( ( ruleSTAttributeName ) )
            {
            // InternalSTFunctionParser.g:14850:2: ( ( ruleSTAttributeName ) )
            // InternalSTFunctionParser.g:14851:3: ( ruleSTAttributeName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getDeclarationAttributeDeclarationCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:14852:3: ( ruleSTAttributeName )
            // InternalSTFunctionParser.g:14853:4: ruleSTAttributeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getDeclarationAttributeDeclarationSTAttributeNameParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAttributeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getDeclarationAttributeDeclarationSTAttributeNameParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getDeclarationAttributeDeclarationCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__DeclarationAssignment_0"


    // $ANTLR start "rule__STAttribute__ValueAssignment_2"
    // InternalSTFunctionParser.g:14864:1: rule__STAttribute__ValueAssignment_2 : ( ruleSTInitializerExpression ) ;
    public final void rule__STAttribute__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14868:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTFunctionParser.g:14869:2: ( ruleSTInitializerExpression )
            {
            // InternalSTFunctionParser.g:14869:2: ( ruleSTInitializerExpression )
            // InternalSTFunctionParser.g:14870:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAttributeAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAttributeAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAttribute__ValueAssignment_2"


    // $ANTLR start "rule__STAssignment__RightAssignment_1_2"
    // InternalSTFunctionParser.g:14879:1: rule__STAssignment__RightAssignment_1_2 : ( ruleSTAssignment ) ;
    public final void rule__STAssignment__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14883:1: ( ( ruleSTAssignment ) )
            // InternalSTFunctionParser.g:14884:2: ( ruleSTAssignment )
            {
            // InternalSTFunctionParser.g:14884:2: ( ruleSTAssignment )
            // InternalSTFunctionParser.g:14885:3: ruleSTAssignment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentAccess().getRightSTAssignmentParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentAccess().getRightSTAssignmentParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignment__RightAssignment_1_2"


    // $ANTLR start "rule__STCallUnnamedArgument__ArgumentAssignment"
    // InternalSTFunctionParser.g:14894:1: rule__STCallUnnamedArgument__ArgumentAssignment : ( ruleSTExpression ) ;
    public final void rule__STCallUnnamedArgument__ArgumentAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14898:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14899:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14899:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14900:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallUnnamedArgument__ArgumentAssignment"


    // $ANTLR start "rule__STCallNamedInputArgument__ParameterAssignment_0"
    // InternalSTFunctionParser.g:14909:1: rule__STCallNamedInputArgument__ParameterAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedInputArgument__ParameterAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14913:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:14914:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:14914:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:14915:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:14916:3: ( RULE_ID )
            // InternalSTFunctionParser.g:14917:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__ParameterAssignment_0"


    // $ANTLR start "rule__STCallNamedInputArgument__ArgumentAssignment_2"
    // InternalSTFunctionParser.g:14928:1: rule__STCallNamedInputArgument__ArgumentAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedInputArgument__ArgumentAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14932:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14933:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14933:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14934:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__ArgumentAssignment_2"


    // $ANTLR start "rule__STCallNamedOutputArgument__NotAssignment_0"
    // InternalSTFunctionParser.g:14943:1: rule__STCallNamedOutputArgument__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__STCallNamedOutputArgument__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14947:1: ( ( ( NOT ) ) )
            // InternalSTFunctionParser.g:14948:2: ( ( NOT ) )
            {
            // InternalSTFunctionParser.g:14948:2: ( ( NOT ) )
            // InternalSTFunctionParser.g:14949:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTFunctionParser.g:14950:3: ( NOT )
            // InternalSTFunctionParser.g:14951:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__NotAssignment_0"


    // $ANTLR start "rule__STCallNamedOutputArgument__ParameterAssignment_1"
    // InternalSTFunctionParser.g:14962:1: rule__STCallNamedOutputArgument__ParameterAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__ParameterAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14966:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:14967:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:14967:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:14968:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementCrossReference_1_0()); 
            }
            // InternalSTFunctionParser.g:14969:3: ( RULE_ID )
            // InternalSTFunctionParser.g:14970:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__ParameterAssignment_1"


    // $ANTLR start "rule__STCallNamedOutputArgument__ArgumentAssignment_3"
    // InternalSTFunctionParser.g:14981:1: rule__STCallNamedOutputArgument__ArgumentAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedOutputArgument__ArgumentAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:14985:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:14986:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:14986:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:14987:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__ArgumentAssignment_3"


    // $ANTLR start "rule__STIfStatement__ConditionAssignment_1"
    // InternalSTFunctionParser.g:14996:1: rule__STIfStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15000:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15001:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15001:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15002:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatement__StatementsAssignment_3"
    // InternalSTFunctionParser.g:15011:1: rule__STIfStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15015:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15016:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15016:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15017:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatement__ElseifsAssignment_4"
    // InternalSTFunctionParser.g:15026:1: rule__STIfStatement__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatement__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15030:1: ( ( ruleSTElseIfPart ) )
            // InternalSTFunctionParser.g:15031:2: ( ruleSTElseIfPart )
            {
            // InternalSTFunctionParser.g:15031:2: ( ruleSTElseIfPart )
            // InternalSTFunctionParser.g:15032:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatement__ElseAssignment_5"
    // InternalSTFunctionParser.g:15041:1: rule__STIfStatement__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatement__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15045:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:15046:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:15046:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:15047:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTFunctionParser.g:15056:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15060:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15061:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15061:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15062:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTFunctionParser.g:15071:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15075:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15076:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15076:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15077:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTFunctionParser.g:15086:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15090:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15091:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15091:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15092:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTFunctionParser.g:15101:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15105:1: ( ( ruleSTCaseCases ) )
            // InternalSTFunctionParser.g:15106:2: ( ruleSTCaseCases )
            {
            // InternalSTFunctionParser.g:15106:2: ( ruleSTCaseCases )
            // InternalSTFunctionParser.g:15107:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTFunctionParser.g:15116:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15120:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:15121:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:15121:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:15122:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTFunctionParser.g:15131:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15135:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15136:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15136:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15137:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTFunctionParser.g:15146:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15150:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15151:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15151:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15152:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTFunctionParser.g:15161:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15165:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15166:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15166:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15167:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTFunctionParser.g:15176:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15180:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15181:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15181:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15182:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__VariableAssignment_1"
    // InternalSTFunctionParser.g:15191:1: rule__STForStatement__VariableAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15195:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15196:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15196:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15197:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__VariableAssignment_1"


    // $ANTLR start "rule__STForStatement__FromAssignment_3"
    // InternalSTFunctionParser.g:15206:1: rule__STForStatement__FromAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__FromAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15210:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15211:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15211:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15212:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__FromAssignment_3"


    // $ANTLR start "rule__STForStatement__ToAssignment_5"
    // InternalSTFunctionParser.g:15221:1: rule__STForStatement__ToAssignment_5 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15225:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15226:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15226:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15227:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_5"


    // $ANTLR start "rule__STForStatement__ByAssignment_6_1"
    // InternalSTFunctionParser.g:15236:1: rule__STForStatement__ByAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15240:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15241:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15241:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15242:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_6_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_8"
    // InternalSTFunctionParser.g:15251:1: rule__STForStatement__StatementsAssignment_8 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15255:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15256:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15256:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15257:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_8"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTFunctionParser.g:15266:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15270:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15271:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15271:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15272:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTFunctionParser.g:15281:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15285:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15286:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15286:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15287:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTFunctionParser.g:15296:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15300:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:15301:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:15301:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:15302:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTFunctionParser.g:15311:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15315:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15316:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15316:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15317:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15326:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15330:1: ( ( ruleSubrangeOperator ) )
            // InternalSTFunctionParser.g:15331:2: ( ruleSubrangeOperator )
            {
            // InternalSTFunctionParser.g:15331:2: ( ruleSubrangeOperator )
            // InternalSTFunctionParser.g:15332:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15341:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15345:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:15346:2: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:15346:2: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:15347:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15356:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15360:1: ( ( ruleOrOperator ) )
            // InternalSTFunctionParser.g:15361:2: ( ruleOrOperator )
            {
            // InternalSTFunctionParser.g:15361:2: ( ruleOrOperator )
            // InternalSTFunctionParser.g:15362:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15371:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15375:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:15376:2: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:15376:2: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:15377:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15386:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15390:1: ( ( ruleXorOperator ) )
            // InternalSTFunctionParser.g:15391:2: ( ruleXorOperator )
            {
            // InternalSTFunctionParser.g:15391:2: ( ruleXorOperator )
            // InternalSTFunctionParser.g:15392:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15401:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15405:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:15406:2: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:15406:2: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:15407:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15416:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15420:1: ( ( ruleAndOperator ) )
            // InternalSTFunctionParser.g:15421:2: ( ruleAndOperator )
            {
            // InternalSTFunctionParser.g:15421:2: ( ruleAndOperator )
            // InternalSTFunctionParser.g:15422:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15431:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15435:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:15436:2: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:15436:2: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:15437:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15446:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15450:1: ( ( ruleEqualityOperator ) )
            // InternalSTFunctionParser.g:15451:2: ( ruleEqualityOperator )
            {
            // InternalSTFunctionParser.g:15451:2: ( ruleEqualityOperator )
            // InternalSTFunctionParser.g:15452:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15461:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15465:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:15466:2: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:15466:2: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:15467:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15476:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15480:1: ( ( ruleCompareOperator ) )
            // InternalSTFunctionParser.g:15481:2: ( ruleCompareOperator )
            {
            // InternalSTFunctionParser.g:15481:2: ( ruleCompareOperator )
            // InternalSTFunctionParser.g:15482:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15491:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15495:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:15496:2: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:15496:2: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:15497:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15506:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15510:1: ( ( ruleAddSubOperator ) )
            // InternalSTFunctionParser.g:15511:2: ( ruleAddSubOperator )
            {
            // InternalSTFunctionParser.g:15511:2: ( ruleAddSubOperator )
            // InternalSTFunctionParser.g:15512:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15521:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15525:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:15526:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:15526:2: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:15527:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15536:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15540:1: ( ( ruleMulDivModOperator ) )
            // InternalSTFunctionParser.g:15541:2: ( ruleMulDivModOperator )
            {
            // InternalSTFunctionParser.g:15541:2: ( ruleMulDivModOperator )
            // InternalSTFunctionParser.g:15542:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15551:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15555:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:15556:2: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:15556:2: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:15557:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:15566:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15570:1: ( ( rulePowerOperator ) )
            // InternalSTFunctionParser.g:15571:2: ( rulePowerOperator )
            {
            // InternalSTFunctionParser.g:15571:2: ( rulePowerOperator )
            // InternalSTFunctionParser.g:15572:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:15581:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15585:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:15586:2: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:15586:2: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:15587:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__OpAssignment_3_1"
    // InternalSTFunctionParser.g:15596:1: rule__STUnaryExpression__OpAssignment_3_1 : ( ruleUnaryOperator ) ;
    public final void rule__STUnaryExpression__OpAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15600:1: ( ( ruleUnaryOperator ) )
            // InternalSTFunctionParser.g:15601:2: ( ruleUnaryOperator )
            {
            // InternalSTFunctionParser.g:15601:2: ( ruleUnaryOperator )
            // InternalSTFunctionParser.g:15602:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__OpAssignment_3_1"


    // $ANTLR start "rule__STUnaryExpression__ExpressionAssignment_3_2"
    // InternalSTFunctionParser.g:15611:1: rule__STUnaryExpression__ExpressionAssignment_3_2 : ( ruleSTUnaryExpression ) ;
    public final void rule__STUnaryExpression__ExpressionAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15615:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:15616:2: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:15616:2: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:15617:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__ExpressionAssignment_3_2"


    // $ANTLR start "rule__STAccessExpression__MemberAssignment_1_0_2"
    // InternalSTFunctionParser.g:15626:1: rule__STAccessExpression__MemberAssignment_1_0_2 : ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) ;
    public final void rule__STAccessExpression__MemberAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15630:1: ( ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) )
            // InternalSTFunctionParser.g:15631:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            {
            // InternalSTFunctionParser.g:15631:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            // InternalSTFunctionParser.g:15632:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }
            // InternalSTFunctionParser.g:15633:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            // InternalSTFunctionParser.g:15633:4: rule__STAccessExpression__MemberAlternatives_1_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAlternatives_1_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAssignment_1_0_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_2"
    // InternalSTFunctionParser.g:15641:1: rule__STAccessExpression__IndexAssignment_1_1_2 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15645:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15646:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15646:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15647:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_3_1"
    // InternalSTFunctionParser.g:15656:1: rule__STAccessExpression__IndexAssignment_1_1_3_1 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15660:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15661:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15661:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15662:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_3_1"


    // $ANTLR start "rule__STFeatureExpression__FeatureAssignment_1"
    // InternalSTFunctionParser.g:15671:1: rule__STFeatureExpression__FeatureAssignment_1 : ( ( ruleSTFeatureName ) ) ;
    public final void rule__STFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15675:1: ( ( ( ruleSTFeatureName ) ) )
            // InternalSTFunctionParser.g:15676:2: ( ( ruleSTFeatureName ) )
            {
            // InternalSTFunctionParser.g:15676:2: ( ( ruleSTFeatureName ) )
            // InternalSTFunctionParser.g:15677:3: ( ruleSTFeatureName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }
            // InternalSTFunctionParser.g:15678:3: ( ruleSTFeatureName )
            // InternalSTFunctionParser.g:15679:4: ruleSTFeatureName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementSTFeatureNameParserRuleCall_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementSTFeatureNameParserRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STFeatureExpression__CallAssignment_2_0"
    // InternalSTFunctionParser.g:15690:1: rule__STFeatureExpression__CallAssignment_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STFeatureExpression__CallAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15694:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTFunctionParser.g:15695:2: ( ( LeftParenthesis ) )
            {
            // InternalSTFunctionParser.g:15695:2: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:15696:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            // InternalSTFunctionParser.g:15697:3: ( LeftParenthesis )
            // InternalSTFunctionParser.g:15698:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__CallAssignment_2_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTFunctionParser.g:15709:1: rule__STFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15713:1: ( ( ruleSTCallArgument ) )
            // InternalSTFunctionParser.g:15714:2: ( ruleSTCallArgument )
            {
            // InternalSTFunctionParser.g:15714:2: ( ruleSTCallArgument )
            // InternalSTFunctionParser.g:15715:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTFunctionParser.g:15724:1: rule__STFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15728:1: ( ( ruleSTCallArgument ) )
            // InternalSTFunctionParser.g:15729:2: ( ruleSTCallArgument )
            {
            // InternalSTFunctionParser.g:15729:2: ( ruleSTCallArgument )
            // InternalSTFunctionParser.g:15730:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__FeatureAssignment_1"
    // InternalSTFunctionParser.g:15739:1: rule__STBuiltinFeatureExpression__FeatureAssignment_1 : ( ruleSTBuiltinFeature ) ;
    public final void rule__STBuiltinFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15743:1: ( ( ruleSTBuiltinFeature ) )
            // InternalSTFunctionParser.g:15744:2: ( ruleSTBuiltinFeature )
            {
            // InternalSTFunctionParser.g:15744:2: ( ruleSTBuiltinFeature )
            // InternalSTFunctionParser.g:15745:3: ruleSTBuiltinFeature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureSTBuiltinFeatureEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTBuiltinFeature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureSTBuiltinFeatureEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__CallAssignment_2_0"
    // InternalSTFunctionParser.g:15754:1: rule__STBuiltinFeatureExpression__CallAssignment_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STBuiltinFeatureExpression__CallAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15758:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTFunctionParser.g:15759:2: ( ( LeftParenthesis ) )
            {
            // InternalSTFunctionParser.g:15759:2: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:15760:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            // InternalSTFunctionParser.g:15761:3: ( LeftParenthesis )
            // InternalSTFunctionParser.g:15762:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__CallAssignment_2_0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTFunctionParser.g:15773:1: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15777:1: ( ( ruleSTCallArgument ) )
            // InternalSTFunctionParser.g:15778:2: ( ruleSTCallArgument )
            {
            // InternalSTFunctionParser.g:15778:2: ( ruleSTCallArgument )
            // InternalSTFunctionParser.g:15779:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTFunctionParser.g:15788:1: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15792:1: ( ( ruleSTCallArgument ) )
            // InternalSTFunctionParser.g:15793:2: ( ruleSTCallArgument )
            {
            // InternalSTFunctionParser.g:15793:2: ( ruleSTCallArgument )
            // InternalSTFunctionParser.g:15794:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STMultibitPartialExpression__SpecifierAssignment_1"
    // InternalSTFunctionParser.g:15803:1: rule__STMultibitPartialExpression__SpecifierAssignment_1 : ( ruleSTMultiBitAccessSpecifier ) ;
    public final void rule__STMultibitPartialExpression__SpecifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15807:1: ( ( ruleSTMultiBitAccessSpecifier ) )
            // InternalSTFunctionParser.g:15808:2: ( ruleSTMultiBitAccessSpecifier )
            {
            // InternalSTFunctionParser.g:15808:2: ( ruleSTMultiBitAccessSpecifier )
            // InternalSTFunctionParser.g:15809:3: ruleSTMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__SpecifierAssignment_1"


    // $ANTLR start "rule__STMultibitPartialExpression__IndexAssignment_2_0"
    // InternalSTFunctionParser.g:15818:1: rule__STMultibitPartialExpression__IndexAssignment_2_0 : ( RULE_INT ) ;
    public final void rule__STMultibitPartialExpression__IndexAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15822:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:15823:2: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:15823:2: ( RULE_INT )
            // InternalSTFunctionParser.g:15824:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__IndexAssignment_2_0"


    // $ANTLR start "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"
    // InternalSTFunctionParser.g:15833:1: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 : ( ruleSTExpression ) ;
    public final void rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15837:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:15838:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:15838:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:15839:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_0_0"
    // InternalSTFunctionParser.g:15848:1: rule__STNumericLiteral__TypeAssignment_0_0 : ( ( ruleSTNumericLiteralType ) ) ;
    public final void rule__STNumericLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15852:1: ( ( ( ruleSTNumericLiteralType ) ) )
            // InternalSTFunctionParser.g:15853:2: ( ( ruleSTNumericLiteralType ) )
            {
            // InternalSTFunctionParser.g:15853:2: ( ( ruleSTNumericLiteralType ) )
            // InternalSTFunctionParser.g:15854:3: ( ruleSTNumericLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTFunctionParser.g:15855:3: ( ruleSTNumericLiteralType )
            // InternalSTFunctionParser.g:15856:4: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_0_2"
    // InternalSTFunctionParser.g:15867:1: rule__STNumericLiteral__ValueAssignment_0_2 : ( ruleSignedNumeric ) ;
    public final void rule__STNumericLiteral__ValueAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15871:1: ( ( ruleSignedNumeric ) )
            // InternalSTFunctionParser.g:15872:2: ( ruleSignedNumeric )
            {
            // InternalSTFunctionParser.g:15872:2: ( ruleSignedNumeric )
            // InternalSTFunctionParser.g:15873:3: ruleSignedNumeric
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueSignedNumericParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSignedNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueSignedNumericParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_0_2"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_1_0_0"
    // InternalSTFunctionParser.g:15882:1: rule__STNumericLiteral__TypeAssignment_1_0_0 : ( ( ruleSTNumericLiteralType ) ) ;
    public final void rule__STNumericLiteral__TypeAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15886:1: ( ( ( ruleSTNumericLiteralType ) ) )
            // InternalSTFunctionParser.g:15887:2: ( ( ruleSTNumericLiteralType ) )
            {
            // InternalSTFunctionParser.g:15887:2: ( ( ruleSTNumericLiteralType ) )
            // InternalSTFunctionParser.g:15888:3: ( ruleSTNumericLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_1_0_0_0()); 
            }
            // InternalSTFunctionParser.g:15889:3: ( ruleSTNumericLiteralType )
            // InternalSTFunctionParser.g:15890:4: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_1_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_1_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_1_0_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_1_1"
    // InternalSTFunctionParser.g:15901:1: rule__STNumericLiteral__ValueAssignment_1_1 : ( ruleNumeric ) ;
    public final void rule__STNumericLiteral__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15905:1: ( ( ruleNumeric ) )
            // InternalSTFunctionParser.g:15906:2: ( ruleNumeric )
            {
            // InternalSTFunctionParser.g:15906:2: ( ruleNumeric )
            // InternalSTFunctionParser.g:15907:3: ruleNumeric
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueNumericParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueNumericParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_1_1"


    // $ANTLR start "rule__STSignedNumericLiteral__ValueAssignment"
    // InternalSTFunctionParser.g:15916:1: rule__STSignedNumericLiteral__ValueAssignment : ( ruleSignedNumeric ) ;
    public final void rule__STSignedNumericLiteral__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15920:1: ( ( ruleSignedNumeric ) )
            // InternalSTFunctionParser.g:15921:2: ( ruleSignedNumeric )
            {
            // InternalSTFunctionParser.g:15921:2: ( ruleSignedNumeric )
            // InternalSTFunctionParser.g:15922:3: ruleSignedNumeric
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignedNumericLiteralAccess().getValueSignedNumericParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSignedNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignedNumericLiteralAccess().getValueSignedNumericParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignedNumericLiteral__ValueAssignment"


    // $ANTLR start "rule__STDateLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:15931:1: rule__STDateLiteral__TypeAssignment_0 : ( ( ruleSTDateLiteralType ) ) ;
    public final void rule__STDateLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15935:1: ( ( ( ruleSTDateLiteralType ) ) )
            // InternalSTFunctionParser.g:15936:2: ( ( ruleSTDateLiteralType ) )
            {
            // InternalSTFunctionParser.g:15936:2: ( ( ruleSTDateLiteralType ) )
            // InternalSTFunctionParser.g:15937:3: ( ruleSTDateLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:15938:3: ( ruleSTDateLiteralType )
            // InternalSTFunctionParser.g:15939:4: ruleSTDateLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:15950:1: rule__STDateLiteral__ValueAssignment_2 : ( ruleDate ) ;
    public final void rule__STDateLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15954:1: ( ( ruleDate ) )
            // InternalSTFunctionParser.g:15955:2: ( ruleDate )
            {
            // InternalSTFunctionParser.g:15955:2: ( ruleDate )
            // InternalSTFunctionParser.g:15956:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:15965:1: rule__STTimeLiteral__TypeAssignment_0 : ( ( ruleSTTimeLiteralType ) ) ;
    public final void rule__STTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15969:1: ( ( ( ruleSTTimeLiteralType ) ) )
            // InternalSTFunctionParser.g:15970:2: ( ( ruleSTTimeLiteralType ) )
            {
            // InternalSTFunctionParser.g:15970:2: ( ( ruleSTTimeLiteralType ) )
            // InternalSTFunctionParser.g:15971:3: ( ruleSTTimeLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:15972:3: ( ruleSTTimeLiteralType )
            // InternalSTFunctionParser.g:15973:4: ruleSTTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:15984:1: rule__STTimeLiteral__ValueAssignment_2 : ( ruleTime ) ;
    public final void rule__STTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:15988:1: ( ( ruleTime ) )
            // InternalSTFunctionParser.g:15989:2: ( ruleTime )
            {
            // InternalSTFunctionParser.g:15989:2: ( ruleTime )
            // InternalSTFunctionParser.g:15990:3: ruleTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeOfDayLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:15999:1: rule__STTimeOfDayLiteral__TypeAssignment_0 : ( ( ruleSTTimeOfDayType ) ) ;
    public final void rule__STTimeOfDayLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16003:1: ( ( ( ruleSTTimeOfDayType ) ) )
            // InternalSTFunctionParser.g:16004:2: ( ( ruleSTTimeOfDayType ) )
            {
            // InternalSTFunctionParser.g:16004:2: ( ( ruleSTTimeOfDayType ) )
            // InternalSTFunctionParser.g:16005:3: ( ruleSTTimeOfDayType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:16006:3: ( ruleSTTimeOfDayType )
            // InternalSTFunctionParser.g:16007:4: ruleSTTimeOfDayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeOfDayLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:16018:1: rule__STTimeOfDayLiteral__ValueAssignment_2 : ( ruleTimeOfDay ) ;
    public final void rule__STTimeOfDayLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16022:1: ( ( ruleTimeOfDay ) )
            // InternalSTFunctionParser.g:16023:2: ( ruleTimeOfDay )
            {
            // InternalSTFunctionParser.g:16023:2: ( ruleTimeOfDay )
            // InternalSTFunctionParser.g:16024:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STDateAndTimeLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:16033:1: rule__STDateAndTimeLiteral__TypeAssignment_0 : ( ( ruleSTDateAndTimeType ) ) ;
    public final void rule__STDateAndTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16037:1: ( ( ( ruleSTDateAndTimeType ) ) )
            // InternalSTFunctionParser.g:16038:2: ( ( ruleSTDateAndTimeType ) )
            {
            // InternalSTFunctionParser.g:16038:2: ( ( ruleSTDateAndTimeType ) )
            // InternalSTFunctionParser.g:16039:3: ( ruleSTDateAndTimeType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:16040:3: ( ruleSTDateAndTimeType )
            // InternalSTFunctionParser.g:16041:4: ruleSTDateAndTimeType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateAndTimeLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:16052:1: rule__STDateAndTimeLiteral__ValueAssignment_2 : ( ruleDateAndTime ) ;
    public final void rule__STDateAndTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16056:1: ( ( ruleDateAndTime ) )
            // InternalSTFunctionParser.g:16057:2: ( ruleDateAndTime )
            {
            // InternalSTFunctionParser.g:16057:2: ( ruleDateAndTime )
            // InternalSTFunctionParser.g:16058:3: ruleDateAndTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STStringLiteral__TypeAssignment_0_0"
    // InternalSTFunctionParser.g:16067:1: rule__STStringLiteral__TypeAssignment_0_0 : ( ( ruleSTAnyCharsType ) ) ;
    public final void rule__STStringLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16071:1: ( ( ( ruleSTAnyCharsType ) ) )
            // InternalSTFunctionParser.g:16072:2: ( ( ruleSTAnyCharsType ) )
            {
            // InternalSTFunctionParser.g:16072:2: ( ( ruleSTAnyCharsType ) )
            // InternalSTFunctionParser.g:16073:3: ( ruleSTAnyCharsType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTFunctionParser.g:16074:3: ( ruleSTAnyCharsType )
            // InternalSTFunctionParser.g:16075:4: ruleSTAnyCharsType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STStringLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:16086:1: rule__STStringLiteral__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STStringLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16090:1: ( ( RULE_STRING ) )
            // InternalSTFunctionParser.g:16091:2: ( RULE_STRING )
            {
            // InternalSTFunctionParser.g:16091:2: ( RULE_STRING )
            // InternalSTFunctionParser.g:16092:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STEnumLiteral__ValueAssignment"
    // InternalSTFunctionParser.g:16101:1: rule__STEnumLiteral__ValueAssignment : ( ( ruleEnumValue ) ) ;
    public final void rule__STEnumLiteral__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:16105:1: ( ( ( ruleEnumValue ) ) )
            // InternalSTFunctionParser.g:16106:2: ( ( ruleEnumValue ) )
            {
            // InternalSTFunctionParser.g:16106:2: ( ( ruleEnumValue ) )
            // InternalSTFunctionParser.g:16107:3: ( ruleEnumValue )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEnumLiteralAccess().getValueEnumeratedValueCrossReference_0()); 
            }
            // InternalSTFunctionParser.g:16108:3: ( ruleEnumValue )
            // InternalSTFunctionParser.g:16109:4: ruleEnumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEnumLiteralAccess().getValueEnumeratedValueEnumValueParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleEnumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEnumLiteralAccess().getValueEnumeratedValueEnumValueParserRuleCall_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEnumLiteralAccess().getValueEnumeratedValueCrossReference_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEnumLiteral__ValueAssignment"

    // $ANTLR start synpred23_InternalSTFunctionParser
    public final void synpred23_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:2907:2: ( ( ( ruleSTSignedLiteralExpressions ) ) )
        // InternalSTFunctionParser.g:2907:2: ( ( ruleSTSignedLiteralExpressions ) )
        {
        // InternalSTFunctionParser.g:2907:2: ( ( ruleSTSignedLiteralExpressions ) )
        // InternalSTFunctionParser.g:2908:3: ( ruleSTSignedLiteralExpressions )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTUnaryExpressionAccess().getSTSignedLiteralExpressionsParserRuleCall_2()); 
        }
        // InternalSTFunctionParser.g:2909:3: ( ruleSTSignedLiteralExpressions )
        // InternalSTFunctionParser.g:2909:4: ruleSTSignedLiteralExpressions
        {
        pushFollow(FOLLOW_2);
        ruleSTSignedLiteralExpressions();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred23_InternalSTFunctionParser

    // $ANTLR start synpred144_InternalSTFunctionParser
    public final void synpred144_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:8723:3: ( rule__STCaseCases__StatementsAssignment_3 )
        // InternalSTFunctionParser.g:8723:3: rule__STCaseCases__StatementsAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__STCaseCases__StatementsAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalSTFunctionParser

    // Delegated rules

    public final boolean synpred23_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA85 dfa85 = new DFA85(this);
    static final String dfa_1s = "\24\uffff";
    static final String dfa_2s = "\2\uffff\1\3\17\uffff\1\3\1\uffff";
    static final String dfa_3s = "\2\10\1\165\2\uffff\11\165\1\u00b9\1\u0099\1\u00b9\1\uffff\2\165";
    static final String dfa_4s = "\2\u00ba\1\u00ab\2\uffff\11\u00a8\3\u00b9\1\uffff\1\u00ab\1\u00a8";
    static final String dfa_5s = "\3\uffff\1\1\1\2\14\uffff\1\3\2\uffff";
    static final String dfa_6s = "\24\uffff}>";
    static final String[] dfa_7s = {
            "\1\3\1\uffff\1\3\5\uffff\1\3\2\uffff\1\3\51\uffff\1\3\12\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\4\3\1\uffff\2\3\2\uffff\2\3\1\uffff\2\3\1\uffff\3\3\3\uffff\2\3\1\uffff\2\3\3\uffff\3\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\20\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\1\1\2\uffff\1\3\1\uffff\1\3\7\uffff\2\3\1\4\4\uffff\2\3\12\uffff\1\2\1\3",
            "\1\3\1\uffff\1\3\5\uffff\1\3\2\uffff\1\3\51\uffff\1\3\12\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\4\3\1\uffff\2\3\2\uffff\2\3\1\uffff\2\3\1\uffff\3\3\3\uffff\2\3\1\uffff\2\3\3\uffff\3\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\7\1\uffff\2\3\1\12\1\3\1\uffff\1\3\1\uffff\1\11\20\uffff\1\14\1\uffff\1\15\1\6\2\uffff\1\10\3\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\1\13\1\3\5\uffff\2\3\12\uffff\1\5\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\16\1\uffff\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\1\17\11\3\1\uffff\4\3\2\uffff\4\3",
            "",
            "",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\20\1\21\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\6\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\6\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\2\uffff\5\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\2\uffff\5\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\2\uffff\5\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\2\uffff\5\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\6\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\6\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\uffff\1\21\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\6\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3",
            "\1\22",
            "\1\21\37\uffff\1\3",
            "\1\23",
            "",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\16\1\uffff\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\1\17\11\3\1\uffff\4\3\2\uffff\4\3",
            "\1\3\3\uffff\1\3\4\uffff\1\3\5\uffff\2\3\1\20\1\21\2\3\1\uffff\1\3\11\uffff\1\3\1\uffff\6\3\1\uffff\3\3\2\uffff\3\3\2\uffff\1\3"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2731:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) );";
        }
    }
    static final String dfa_8s = "\17\uffff";
    static final String dfa_9s = "\2\uffff\5\1\6\uffff\1\1\1\uffff";
    static final String dfa_10s = "\1\10\1\uffff\5\26\1\uffff\2\10\1\uffff\1\u00b9\1\0\1\26\1\uffff";
    static final String dfa_11s = "\1\u00ba\1\uffff\5\u00ab\1\uffff\2\u00ba\1\uffff\1\u00b9\1\0\1\u00ab\1\uffff";
    static final String dfa_12s = "\1\uffff\1\1\5\uffff\1\2\2\uffff\1\4\3\uffff\1\3";
    static final String dfa_13s = "\14\uffff\1\0\2\uffff}>";
    static final String[] dfa_14s = {
            "\1\7\1\uffff\1\7\5\uffff\1\7\2\uffff\1\7\51\uffff\1\7\12\uffff\1\7\3\uffff\1\7\1\uffff\1\7\1\uffff\4\7\1\uffff\2\7\2\uffff\2\7\1\uffff\2\7\1\uffff\3\7\3\uffff\2\7\1\uffff\2\7\3\uffff\1\1\2\7\1\uffff\1\7\1\uffff\1\7\1\uffff\1\1\1\uffff\2\7\1\1\1\12\1\uffff\1\7\1\uffff\1\1\20\uffff\1\5\1\uffff\1\6\1\3\2\uffff\1\1\3\uffff\1\1\2\uffff\1\10\1\uffff\1\11\7\uffff\1\4\1\7\5\uffff\2\7\12\uffff\1\2\1\7",
            "",
            "\1\1\125\uffff\1\1\10\uffff\1\1\3\uffff\1\1\4\uffff\1\1\5\uffff\2\1\1\13\3\1\1\uffff\1\1\1\uffff\2\1\4\uffff\1\1\1\uffff\2\1\1\7\16\1\2\uffff\4\1",
            "\1\1\125\uffff\1\1\10\uffff\1\1\3\uffff\1\1\4\uffff\1\1\5\uffff\2\1\1\uffff\3\1\1\uffff\1\1\1\uffff\2\1\4\uffff\1\1\1\uffff\2\1\1\7\16\1\2\uffff\4\1",
            "\1\1\125\uffff\1\1\10\uffff\1\1\3\uffff\1\1\4\uffff\1\1\5\uffff\2\1\1\uffff\3\1\1\uffff\1\1\1\uffff\2\1\4\uffff\1\1\1\uffff\2\1\1\7\16\1\2\uffff\4\1",
            "\1\1\125\uffff\1\1\10\uffff\1\1\3\uffff\1\1\4\uffff\1\1\5\uffff\2\1\1\uffff\3\1\1\uffff\1\1\1\uffff\2\1\4\uffff\1\1\1\uffff\2\1\1\7\16\1\2\uffff\4\1",
            "\1\1\125\uffff\1\1\10\uffff\1\1\3\uffff\1\1\4\uffff\1\1\5\uffff\2\1\1\uffff\3\1\1\uffff\1\1\1\uffff\2\1\4\uffff\1\1\1\uffff\2\1\1\7\16\1\2\uffff\4\1",
            "",
            "\1\12\1\uffff\1\12\5\uffff\1\12\2\uffff\1\12\51\uffff\1\12\12\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\4\12\1\uffff\2\12\2\uffff\2\12\1\uffff\2\12\1\uffff\3\12\3\uffff\2\12\1\uffff\2\12\3\uffff\3\12\1\uffff\1\12\1\uffff\1\12\1\uffff\1\12\1\uffff\4\12\1\uffff\1\12\1\uffff\1\12\20\uffff\1\12\1\uffff\2\12\2\uffff\1\12\3\uffff\1\12\2\uffff\1\12\1\uffff\1\12\7\uffff\2\12\5\uffff\1\12\1\14\12\uffff\2\12",
            "\1\12\1\uffff\1\12\5\uffff\1\12\2\uffff\1\12\51\uffff\1\12\12\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\4\12\1\uffff\2\12\2\uffff\2\12\1\uffff\2\12\1\uffff\3\12\3\uffff\2\12\1\uffff\2\12\3\uffff\3\12\1\uffff\1\12\1\uffff\1\12\1\uffff\1\12\1\uffff\4\12\1\uffff\1\12\1\uffff\1\12\20\uffff\1\12\1\uffff\2\12\2\uffff\1\12\3\uffff\1\12\2\uffff\1\12\1\uffff\1\12\7\uffff\2\12\5\uffff\1\12\1\14\12\uffff\2\12",
            "",
            "\1\15",
            "\1\uffff",
            "\1\1\125\uffff\1\1\10\uffff\1\1\3\uffff\1\1\4\uffff\1\1\5\uffff\2\1\1\13\3\1\1\uffff\1\1\1\uffff\2\1\4\uffff\1\1\1\uffff\2\1\1\7\16\1\2\uffff\4\1",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "2890:1: rule__STUnaryExpression__Alternatives : ( ( ruleSTAccessExpression ) | ( ruleSTLiteralExpressions ) | ( ( ruleSTSignedLiteralExpressions ) ) | ( ( rule__STUnaryExpression__Group_3__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_12 = input.LA(1);

                         
                        int index9_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalSTFunctionParser()) ) {s = 14;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\1\114\17\u0097\1\uffff\1\116\1\uffff";
    static final String dfa_17s = "\1\u00ae\17\u0097\1\uffff\1\u00ae\1\uffff";
    static final String dfa_18s = "\20\uffff\1\2\1\uffff\1\1";
    static final String dfa_19s = "\23\uffff}>";
    static final String[] dfa_20s = {
            "\1\4\1\uffff\1\20\2\uffff\1\17\1\uffff\1\5\1\uffff\1\14\1\15\2\uffff\1\12\2\uffff\1\1\1\2\3\uffff\1\10\3\uffff\1\11\2\uffff\1\16\1\6\5\uffff\1\20\1\uffff\1\13\1\uffff\1\3\3\uffff\1\7\65\uffff\2\20",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "\1\21",
            "",
            "\1\20\40\uffff\1\20\54\uffff\1\22\1\uffff\1\22\16\uffff\2\20",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "3148:1: rule__STNumericLiteral__Alternatives : ( ( ( rule__STNumericLiteral__Group_0__0 ) ) | ( ( rule__STNumericLiteral__Group_1__0 ) ) );";
        }
    }
    static final String dfa_21s = "\77\uffff";
    static final String dfa_22s = "\1\1\76\uffff";
    static final String dfa_23s = "\1\10\1\uffff\62\0\13\uffff";
    static final String dfa_24s = "\1\u00ba\1\uffff\62\0\13\uffff";
    static final String dfa_25s = "\1\uffff\1\2\64\uffff\1\1\10\uffff";
    static final String dfa_26s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\13\uffff}>";
    static final String[] dfa_27s = {
            "\1\52\1\uffff\1\51\5\uffff\1\46\2\uffff\1\45\26\uffff\1\66\1\1\21\uffff\1\55\6\uffff\1\66\1\uffff\1\66\1\uffff\1\54\3\uffff\1\20\1\uffff\1\35\1\uffff\1\41\1\33\1\43\1\21\1\uffff\1\30\1\31\2\uffff\1\26\1\57\1\66\1\15\1\16\1\66\1\56\1\40\1\24\1\1\1\66\1\uffff\1\25\1\50\1\uffff\1\32\1\22\3\uffff\1\14\1\42\1\34\1\uffff\1\27\1\uffff\1\17\1\uffff\1\5\1\66\1\23\1\53\1\10\1\63\1\uffff\1\47\1\uffff\1\7\20\uffff\1\12\1\66\1\13\1\4\2\uffff\1\6\3\uffff\1\2\2\uffff\1\61\1\uffff\1\62\3\uffff\1\66\3\uffff\1\11\1\44\5\uffff\1\37\1\36\12\uffff\1\3\1\60",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()* loopback of 8723:2: ( rule__STCaseCases__StatementsAssignment_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_2 = input.LA(1);

                         
                        int index85_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_3 = input.LA(1);

                         
                        int index85_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA85_4 = input.LA(1);

                         
                        int index85_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA85_5 = input.LA(1);

                         
                        int index85_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA85_6 = input.LA(1);

                         
                        int index85_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA85_7 = input.LA(1);

                         
                        int index85_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA85_8 = input.LA(1);

                         
                        int index85_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA85_9 = input.LA(1);

                         
                        int index85_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA85_10 = input.LA(1);

                         
                        int index85_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA85_11 = input.LA(1);

                         
                        int index85_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA85_12 = input.LA(1);

                         
                        int index85_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA85_13 = input.LA(1);

                         
                        int index85_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA85_14 = input.LA(1);

                         
                        int index85_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA85_15 = input.LA(1);

                         
                        int index85_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA85_16 = input.LA(1);

                         
                        int index85_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA85_17 = input.LA(1);

                         
                        int index85_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA85_18 = input.LA(1);

                         
                        int index85_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA85_19 = input.LA(1);

                         
                        int index85_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA85_20 = input.LA(1);

                         
                        int index85_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA85_21 = input.LA(1);

                         
                        int index85_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA85_22 = input.LA(1);

                         
                        int index85_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA85_23 = input.LA(1);

                         
                        int index85_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA85_24 = input.LA(1);

                         
                        int index85_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA85_25 = input.LA(1);

                         
                        int index85_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA85_26 = input.LA(1);

                         
                        int index85_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA85_27 = input.LA(1);

                         
                        int index85_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA85_28 = input.LA(1);

                         
                        int index85_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA85_29 = input.LA(1);

                         
                        int index85_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA85_30 = input.LA(1);

                         
                        int index85_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA85_31 = input.LA(1);

                         
                        int index85_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA85_32 = input.LA(1);

                         
                        int index85_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA85_33 = input.LA(1);

                         
                        int index85_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA85_34 = input.LA(1);

                         
                        int index85_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA85_35 = input.LA(1);

                         
                        int index85_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA85_36 = input.LA(1);

                         
                        int index85_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA85_37 = input.LA(1);

                         
                        int index85_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA85_38 = input.LA(1);

                         
                        int index85_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA85_39 = input.LA(1);

                         
                        int index85_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA85_40 = input.LA(1);

                         
                        int index85_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA85_41 = input.LA(1);

                         
                        int index85_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA85_42 = input.LA(1);

                         
                        int index85_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA85_43 = input.LA(1);

                         
                        int index85_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA85_44 = input.LA(1);

                         
                        int index85_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA85_45 = input.LA(1);

                         
                        int index85_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA85_46 = input.LA(1);

                         
                        int index85_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA85_47 = input.LA(1);

                         
                        int index85_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA85_48 = input.LA(1);

                         
                        int index85_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA85_49 = input.LA(1);

                         
                        int index85_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA85_50 = input.LA(1);

                         
                        int index85_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA85_51 = input.LA(1);

                         
                        int index85_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0400400000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x2010048180092500L,0x77EAE36BFE6F5150L,0x060060C652278000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0010008180000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x2000040000090502L,0x57EAE36BFE6F5150L,0x060060C452278000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x2000000000090500L,0x118A4363B66F1100L,0x0200000000008000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x2000000000090500L,0x57AAE363B66F5100L,0x060060C052268000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x2000000000090500L,0x57AAE363B66F5100L,0x060061C052268000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0040020000000000L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0010008180000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200001000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x2000000000090500L,0x118A4363B66F1500L,0x0200000000008000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000050400000080L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020020000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000024000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x4220000000000000L,0x0200004000268000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080020000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x2000040000090500L,0x57EAE36BFE6F5150L,0x060060C052278000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x2000040000090500L,0x57EAE36BFE6F5150L,0x060060C452278000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xA000040000090500L,0x57EAE36FFE6F7150L,0x060060C452278000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000080000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x2000000000090502L,0x57AAE363B66F5100L,0x060060C052268000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000220000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000006000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x2020040000090500L,0x57EAE36BFE6F5150L,0x060060C452278000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x2000040400090500L,0x57EAE36BFE6F5150L,0x060060C452278000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x2000040000090500L,0x57EAE36BFEEF5150L,0x060060C452278000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x4000000000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000200L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001000000200L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002800000900L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002800000900L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000050000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000050000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L,0x0000000108000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L,0x0000000108000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010080000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000010080000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0xC220000000000000L,0x020040400226800FL});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x2000000000090500L,0x57AAE363B66F5100L,0x060060C056268000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x4220200000000000L,0x0200004002268000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x008A8322326A5000L,0x0000600000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000050000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x2000000000000000L,0x0000000084000100L,0x0400000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000C00000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});

}